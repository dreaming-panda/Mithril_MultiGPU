Thu Sep 21 10:55:42 2023       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 515.43.04    Driver Version: 515.43.04    CUDA Version: 11.7     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA RTX A5000    On   | 00000000:01:00.0 Off |                  Off |
| 30%   30C    P8    20W / 230W |      3MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   1  NVIDIA RTX A5000    On   | 00000000:25:00.0 Off |                  Off |
| 30%   30C    P8    18W / 230W |      3MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   2  NVIDIA RTX A5000    On   | 00000000:81:00.0 Off |                  Off |
| 30%   29C    P8    13W / 230W |      3MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   3  NVIDIA RTX A5000    On   | 00000000:C1:00.0 Off |                  Off |
| 30%   29C    P8    16W / 230W |      3MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
[ 15%] Built target context
[ 32%] Built target core
Scanning dependencies of target cudahelp
[ 35%] Building CXX object CMakeFiles/cudahelp.dir/core/src/cuda/cuda_hybrid_parallel.cc.o
[ 37%] Linking CXX static library libcudahelp.a
[ 70%] Built target cudahelp
[ 82%] Linking CXX executable gcnii
[ 82%] Linking CXX executable resgcn_plus
[ 82%] Linking CXX executable gcn
[ 82%] Linking CXX executable graphsage
[ 82%] Linking CXX executable estimate_comm_volume
[ 82%] Linking CXX executable resgcn
[ 87%] Built target estimate_comm_volume
[ 90%] Built target OSDI2023_MULTI_NODES_resgcn_plus
[ 92%] Built target OSDI2023_MULTI_NODES_resgcn
[ 95%] Built target OSDI2023_MULTI_NODES_gcnii
[ 97%] Built target OSDI2023_MULTI_NODES_graphsage
[100%] Built target OSDI2023_MULTI_NODES_gcn
Running experiments...
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
DONE MPI INIT
DONE MPI INIT
DONE MPI INIT
Initialized node 4 on machine gnerv8
Initialized node 5 on machine gnerv8
Initialized node 6 on machine gnerv8
DONE MPI INIT
Initialized node 7 on machine gnerv8
DONE MPI INIT
Initialized node 0 on machine gnerv7
DONE MPI INITDONE MPI INIT

Initialized node 2 on machine gnerv7
Initialized node 1 on machine gnerv7
DONE MPI INIT
Initialized node 3 on machine gnerv7
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.177 seconds.
Building the CSC structure...
        It takes 0.177 seconds.
Building the CSC structure...
        It takes 0.177 seconds.
Building the CSC structure...
        It takes 0.177 seconds.
Building the CSC structure...
        It takes 0.178 seconds.
        It takes 0.178 seconds.
Building the CSC structure...
        It takes 0.178 seconds.
Building the CSC structure...
Building the CSC structure...
        It takes 0.178 seconds.
Building the CSC structure...
        It takes 1.097 seconds.
        It takes 1.097 seconds.
        It takes 1.097 seconds.
        It takes 1.097 seconds.
        It takes 1.097 seconds.
        It takes 1.097 seconds.
        It takes 1.097 seconds.
        It takes 1.097 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...Building the Feature Vector...

Building the Feature Vector...
        It takes 2.296 seconds.
        It takes 2.296 seconds.
        It takes 2.296 seconds.
        It takes 2.296 seconds.
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
        It takes 2.308 seconds.
        It takes 2.308 seconds.
        It takes 2.308 seconds.
        It takes 2.308 seconds.
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
        It takes 1.096 seconds.
        It takes 1.096 seconds.
        It takes 1.096 seconds.
        It takes 1.084 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/partitioned_graphs/pubmed/8_parts
The number of GCNII layers: 8
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
GCN hyper-parameter alpha: 0.100000
GCN hyper-parameter lambda: 0.500000
Number of classes: 3
Number of feature dimensions: 500
Number of vertices: 19717
Number of GPUs: 8
        It takes 1.084 seconds.
        It takes 1.084 seconds.
        It takes 1.084 seconds.
        It takes 1.096 seconds.
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
19717, 108365, 108365
Number of vertices per chunk: 2465
19717, 108365, 108365
Number of vertices per chunk: 2465
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
19717, 108365, 108365
Number of vertices per chunk: 2465
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
19717, 108365, 108365
Number of vertices per chunk: 2465
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
19717, 108365, 108365
Number of vertices per chunk: 2465
19717, 108365, 108365
Number of vertices per chunk: 2465
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
19717, 108365, 108365
Number of vertices per chunk: 2465
train nodes 60, valid nodes 500, test nodes 1000
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 2464) 1-[2464, 4929) 2-[4929, 7393) 3-[7393, 9858) 4-[9858, 12322) 5-[12322, 14787) 6-[14787, 17252) 7-[17252, 19717)
csr in-out ready !Start Cost Model Initialization...
19717, 108365, 108365
Number of vertices per chunk: 2465
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
The layer-level communication performance: 59.706 Gbps (per GPU), 477.644 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.396 Gbps (per GPU), 475.168 Gbps (aggregated)
The layer-level communication performance: 59.392 Gbps (per GPU), 475.140 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.151 Gbps (per GPU), 473.207 Gbps (aggregated)
The layer-level communication performance: 59.124 Gbps (per GPU), 472.989 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.900 Gbps (per GPU), 471.200 Gbps (aggregated)
The layer-level communication performance: 58.854 Gbps (per GPU), 470.833 Gbps (aggregated)
The layer-level communication performance: 58.823 Gbps (per GPU), 470.580 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.659 Gbps (per GPU), 1269.270 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.665 Gbps (per GPU), 1269.318 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.629 Gbps (per GPU), 1269.030 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.665 Gbps (per GPU), 1269.318 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.638 Gbps (per GPU), 1269.102 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.665 Gbps (per GPU), 1269.318 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.629 Gbps (per GPU), 1269.030 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.635 Gbps (per GPU), 1269.078 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 102.696 Gbps (per GPU), 821.567 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.695 Gbps (per GPU), 821.560 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.693 Gbps (per GPU), 821.540 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.693 Gbps (per GPU), 821.547 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.693 Gbps (per GPU), 821.540 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.697 Gbps (per GPU), 821.574 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.692 Gbps (per GPU), 821.533 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.692 Gbps (per GPU), 821.533 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 39.100 Gbps (per GPU), 312.802 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.094 Gbps (per GPU), 312.755 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.100 Gbps (per GPU), 312.801 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.094 Gbps (per GPU), 312.755 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.095 Gbps (per GPU), 312.759 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.093 Gbps (per GPU), 312.748 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.088 Gbps (per GPU), 312.701 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.086 Gbps (per GPU), 312.691 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  0.39ms  0.33ms  0.49ms  1.48  2.46K  0.01M
 chk_1  0.39ms  0.33ms  0.49ms  1.48  2.46K  0.02M
 chk_2  0.39ms  0.33ms  0.49ms  1.48  2.46K  0.01M
 chk_3  0.39ms  0.33ms  0.49ms  1.48  2.46K  0.01M
 chk_4  0.39ms  0.33ms  0.49ms  1.47  2.46K  0.01M
 chk_5  0.39ms  0.33ms  0.49ms  1.48  2.46K  0.01M
 chk_6  0.39ms  0.33ms  0.49ms  1.48  2.46K  0.01M
 chk_7  0.39ms  0.33ms  0.49ms  1.47  2.46K  0.01M
   Avg  0.39  0.33  0.49
   Max  0.39  0.33  0.49
   Min  0.39  0.33  0.49
 Ratio  1.01  1.01  1.01
   Var  0.00  0.00  0.00
Profiling takes 0.190 s
*** Node 0, starting model training...
*** Node 2, starting model training...
*** Node 1, starting model training...
*** Node 3, starting model training...
*** Node 4, starting model training...
*** Node 5, starting model training...
*** Node 6, starting model training...
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 65)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 9858, Num Local Vertices: 2464
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 65)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 2464
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 65)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 4929, Num Local Vertices: 2464
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 65)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 2464, Num Local Vertices: 2465
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 65)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 7393, Num Local Vertices: 2465
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 65)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 17252, Num Local Vertices: 2465
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 65)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 14787, Num Local Vertices: 2465
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 65)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 12322, Num Local Vertices: 2465
*** Node 2, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
+++++++++ Node 2 initializing the weights for op[0, 65)...
+++++++++ Node 6 initializing the weights for op[0, 65)...
+++++++++ Node 0 initializing the weights for op[0, 65)...
+++++++++ Node 7 initializing the weights for op[0, 65)...
+++++++++ Node 4 initializing the weights for op[0, 65)...
+++++++++ Node 1 initializing the weights for op[0, 65)...
+++++++++ Node 3 initializing the weights for op[0, 65)...
+++++++++ Node 5 initializing the weights for op[0, 65)...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 6532
Node 0, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...
*** Node 1, starting task scheduling...
*** Node 2, starting task scheduling...
*** Node 3, starting task scheduling...



The learning rate specified by the user: 0.001000000
*** Node 4, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 1.0987	TrainAcc 0.4667	ValidAcc 0.4000	TestAcc 0.3910	BestValid 0.4000
	Epoch 50:	Loss 0.5629	TrainAcc 0.9000	ValidAcc 0.7320	TestAcc 0.7160	BestValid 0.7320
****** Epoch Time (Excluding Evaluation Cost): 0.009 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 0.062 ms (Max: 0.069, Min: 0.040, Sum: 0.493)
Cluster-Wide Average, Compute: 3.595 ms (Max: 3.674, Min: 3.486, Sum: 28.763)
Cluster-Wide Average, Communication-Layer: 0.009 ms (Max: 0.009, Min: 0.008, Sum: 0.068)
Cluster-Wide Average, Bubble-Imbalance: 0.015 ms (Max: 0.016, Min: 0.014, Sum: 0.123)
Cluster-Wide Average, Communication-Graph: 4.715 ms (Max: 4.841, Min: 4.630, Sum: 37.724)
Cluster-Wide Average, Optimization: 0.930 ms (Max: 0.960, Min: 0.920, Sum: 7.442)
Cluster-Wide Average, Others: 0.146 ms (Max: 0.152, Min: 0.137, Sum: 1.170)
****** Breakdown Sum: 9.473 ms ******
Cluster-Wide Average, GPU Memory Consumption: 1.273 GB (Max: 1.526, Min: 1.223, Sum: 10.183)
Cluster-Wide Average, Graph-Level Communication Throughput: 10.375 Gbps (Max: 12.598, Min: 7.492, Sum: 82.996)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 0.039 GB
Weight-sync communication (cluster-wide, per-epoch): 0.007 GB
Total communication (cluster-wide, per-epoch): 0.046 GB
****** Accuracy Results ******
Highest valid_acc: 0.7320
Target test_acc: 0.7160
Epoch to reach the target acc: 49
[MPI Rank 0] Success 
[MPI Rank 1] Success 
[MPI Rank 4] Success 
[MPI Rank 2] Success 
[MPI Rank 5] Success 
[MPI Rank 3] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
