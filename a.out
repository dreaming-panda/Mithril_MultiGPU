Wed Sep 20 21:38:51 2023       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 515.43.04    Driver Version: 515.43.04    CUDA Version: 11.7     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA RTX A5000    On   | 00000000:01:00.0 Off |                  Off |
| 30%   33C    P8    20W / 230W |      3MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   1  NVIDIA RTX A5000    On   | 00000000:25:00.0 Off |                  Off |
| 30%   33C    P8    18W / 230W |      3MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   2  NVIDIA RTX A5000    On   | 00000000:81:00.0 Off |                  Off |
| 30%   33C    P8    14W / 230W |      3MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   3  NVIDIA RTX A5000    On   | 00000000:C1:00.0 Off |                  Off |
| 30%   33C    P8    17W / 230W |      3MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
[ 20%] Built target context
[ 27%] Building CXX object CMakeFiles/cudahelp.dir/core/src/cuda/cuda_hybrid_parallel.cc.o
[ 27%] Built target core
Linking CXX static library libcudahelp.a
Built target cudahelp
Linking CXX executable gcnii
Linking CXX executable estimate_comm_volume
Linking CXX executable resgcn
Linking CXX executable graphsage
Linking CXX executable resgcn_plus
Linking CXX executable gcn
Built target estimate_comm_volume
Built target OSDI2023_MULTI_NODES_gcnii
Built target OSDI2023_MULTI_NODES_graphsage
Built target OSDI2023_MULTI_NODES_resgcn_plus
Built target OSDI2023_MULTI_NODES_resgcn
Built target OSDI2023_MULTI_NODES_gcn
Running experiments...
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
DONE MPI INIT
DONE MPI INIT
Initialized node 0 on machine gnerv7
DONE MPI INIT
DONE MPI INIT
Initialized node 3 on machine gnerv7
Initialized node 1 on machine gnerv7
Initialized node 2 on machine gnerv7
DONE MPI INITDONE MPI INIT
Initialized node 7 on machine gnerv8

Initialized node 6 on machine gnerv8
DONE MPI INIT
Initialized node 4 on machine gnerv8
DONE MPI INIT
Initialized node 5 on machine gnerv8
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.020 seconds.
Building the CSC structure...
        It takes 0.021 seconds.
Building the CSC structure...
        It takes 0.018 seconds.
Building the CSC structure...
        It takes 0.020 seconds.
Building the CSC structure...
        It takes 0.026 seconds.
Building the CSC structure...
        It takes 0.023 seconds.
Building the CSC structure...
        It takes 0.024 seconds.
Building the CSC structure...
        It takes 0.021 seconds.
        It takes 0.019 seconds.
        It takes 0.020 seconds.
        It takes 0.024 seconds.
        It takes 0.026 seconds.
        It takes 0.020 seconds.
        It takes 0.019 seconds.
        It takes 0.020 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.099 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.103 seconds.
Building the Label Vector...
        It takes 0.008 seconds.
        It takes 0.109 seconds.
Building the Label Vector...
        It takes 0.112 seconds.
Building the Label Vector...
        It takes 0.118 seconds.
Building the Label Vector...
        It takes 0.008 seconds.
        It takes 0.119 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.120 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.121 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/partitioned_graphs/flickr/8_parts
The number of GCNII layers: 8
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
GCN hyper-parameter alpha: 0.100000
GCN hyper-parameter lambda: 0.500000
Number of classes: 7
Number of feature dimensions: 500
Number of vertices: 89250
Number of GPUs: 8
        It takes 0.007 seconds.
        It takes 0.008 seconds.
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
Number of vertices per chunk: 11157
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
Number of vertices per chunk: 11157
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
89250, 989006, 989006
Number of vertices per chunk: 11157
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
89250, 989006, 989006
Number of vertices per chunk: 11157
89250, 989006, 989006
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Number of vertices per chunk: 11157
89250, 989006, 989006
Number of vertices per chunk: 11157
89250, 989006, 989006
Number of vertices per chunk: 11157
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
train nodes 44625, valid nodes 22312, test nodes 22313
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 11156) 1-[11156, 22313) 2-[22313, 33469) 3-[33469, 44625) 4-[44625, 55781) 5-[55781, 66937) 6-[66937, 78093) 7-[78093, 89250)
89250, 989006, 989006
Number of vertices per chunk: 11157
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
The layer-level communication performance: 61.109 Gbps (per GPU), 488.871 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.799 Gbps (per GPU), 486.391 Gbps (aggregated)
The layer-level communication performance: 60.795 Gbps (per GPU), 486.362 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.543 Gbps (per GPU), 484.341 Gbps (aggregated)
The layer-level communication performance: 60.513 Gbps (per GPU), 484.101 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.284 Gbps (per GPU), 482.276 Gbps (aggregated)
The layer-level communication performance: 60.234 Gbps (per GPU), 481.873 Gbps (aggregated)
The layer-level communication performance: 60.198 Gbps (per GPU), 481.584 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 104.114 Gbps (per GPU), 832.916 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 104.117 Gbps (per GPU), 832.937 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 104.118 Gbps (per GPU), 832.947 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 104.108 Gbps (per GPU), 832.864 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 104.117 Gbps (per GPU), 832.937 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 104.113 Gbps (per GPU), 832.905 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 104.114 Gbps (per GPU), 832.916 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 104.114 Gbps (per GPU), 832.916 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 82.120 Gbps (per GPU), 656.964 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 82.108 Gbps (per GPU), 656.865 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 82.109 Gbps (per GPU), 656.870 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 82.118 Gbps (per GPU), 656.943 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 82.117 Gbps (per GPU), 656.934 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 82.116 Gbps (per GPU), 656.925 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 82.117 Gbps (per GPU), 656.938 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 82.051 Gbps (per GPU), 656.411 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 36.872 Gbps (per GPU), 294.977 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.873 Gbps (per GPU), 294.984 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.872 Gbps (per GPU), 294.979 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.869 Gbps (per GPU), 294.949 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.868 Gbps (per GPU), 294.943 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.869 Gbps (per GPU), 294.955 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.868 Gbps (per GPU), 294.943 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.865 Gbps (per GPU), 294.920 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  0.98ms  0.81ms  0.97ms  1.20 11.16K  0.12M
 chk_1  0.98ms  0.82ms  0.98ms  1.20 11.16K  0.11M
 chk_2  0.98ms  0.79ms  0.95ms  1.24 11.16K  0.11M
 chk_3  1.01ms  0.75ms  0.91ms  1.35 11.16K  0.12M
 chk_4  1.00ms  0.82ms  0.98ms  1.22 11.16K  0.11M
 chk_5  0.98ms  0.81ms  1.41ms  1.74 11.16K  0.10M
 chk_6  0.98ms  0.81ms  0.97ms  1.21 11.16K  0.12M
 chk_7  0.98ms  0.82ms  0.98ms  1.20 11.16K  0.11M
   Avg  0.98  0.80  1.02
   Max  1.01  0.82  1.41
   Min  0.98  0.75  0.91
 Ratio  1.03  1.10  1.55
   Var  0.00  0.00  0.02
Profiling takes 0.354 s
*** Node 0, starting model training...
*** Node 2, starting model training...
*** Node 3, starting model training...
*** Node 1, starting model training...
*** Node 4, starting model training...
*** Node 5, starting model training...
*** Node 6, starting model training...
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 65)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 55781, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 65)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 44625, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 65)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 65)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 22313, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 65)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 33469, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 65)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 11156, Num Local Vertices: 11157
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 65)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 78093, Num Local Vertices: 11157
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 65)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 66937, Num Local Vertices: 11156
*** Node 0, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 65)...
+++++++++ Node 2 initializing the weights for op[0, 65)...
+++++++++ Node 4 initializing the weights for op[0, 65)...
+++++++++ Node 5 initializing the weights for op[0, 65)...
+++++++++ Node 7 initializing the weights for op[0, 65)...
+++++++++ Node 3 initializing the weights for op[0, 65)...
+++++++++ Node 1 initializing the weights for op[0, 65)...
+++++++++ Node 6 initializing the weights for op[0, 65)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 192232
Node 0, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...
*** Node 1, starting task scheduling...
*** Node 4, starting task scheduling...
*** Node 2, starting task scheduling...
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000



The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 2.9815	TrainAcc 0.2110	ValidAcc 0.2091	TestAcc 0.2097	BestValid 0.2091
	Epoch 50:	Loss 1.6314	TrainAcc 0.4577	ValidAcc 0.4580	TestAcc 0.4593	BestValid 0.4580
****** Epoch Time (Excluding Evaluation Cost): 0.040 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 0.183 ms (Max: 0.300, Min: 0.035, Sum: 1.467)
Cluster-Wide Average, Compute: 7.901 ms (Max: 8.027, Min: 7.653, Sum: 63.209)
Cluster-Wide Average, Communication-Layer: 0.008 ms (Max: 0.009, Min: 0.007, Sum: 0.064)
Cluster-Wide Average, Bubble-Imbalance: 0.015 ms (Max: 0.016, Min: 0.013, Sum: 0.118)
Cluster-Wide Average, Communication-Graph: 31.047 ms (Max: 31.258, Min: 30.876, Sum: 248.378)
Cluster-Wide Average, Optimization: 0.843 ms (Max: 0.850, Min: 0.838, Sum: 6.743)
Cluster-Wide Average, Others: 0.212 ms (Max: 0.221, Min: 0.198, Sum: 1.697)
****** Breakdown Sum: 40.210 ms ******
Cluster-Wide Average, GPU Memory Consumption: 2.109 GB (Max: 2.391, Min: 2.055, Sum: 16.872)
Cluster-Wide Average, Graph-Level Communication Throughput: 42.046 Gbps (Max: 50.879, Min: 16.830, Sum: 336.365)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 1.146 GB
Weight-sync communication (cluster-wide, per-epoch): 0.007 GB
Total communication (cluster-wide, per-epoch): 1.153 GB
****** Accuracy Results ******
Highest valid_acc: 0.4580
Target test_acc: 0.4593
Epoch to reach the target acc: 49
[MPI Rank 0] Success 
[MPI Rank 4] Success 
[MPI Rank 1] Success 
[MPI Rank 5] Success 
[MPI Rank 2] Success 
[MPI Rank 6] Success 
[MPI Rank 3] Success 
[MPI Rank 7] Success 
