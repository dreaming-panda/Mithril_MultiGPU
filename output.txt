Fri Sep  8 23:25:24 2023       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 515.43.04    Driver Version: 515.43.04    CUDA Version: 11.7     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA RTX A5000    On   | 00000000:01:00.0 Off |                  Off |
| 30%   31C    P8    27W / 230W |      1MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   1  NVIDIA RTX A5000    On   | 00000000:25:00.0 Off |                  Off |
| 30%   32C    P8    21W / 230W |      1MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   2  NVIDIA RTX A5000    On   | 00000000:81:00.0 Off |                  Off |
| 30%   32C    P8    23W / 230W |      1MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   3  NVIDIA RTX A5000    On   | 00000000:C1:00.0 Off |                  Off |
| 30%   34C    P8    23W / 230W |      1MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
gnerv3
gnerv3
gnerv4
gnerv4
[ 14%] Built target context
[ 30%] Built target core
[ 66%] Built target cudahelp
[ 80%] Built target OSDI2023_MULTI_NODES_gcn
[ 80%] Built target OSDI2023_MULTI_NODES_graphsage_res
[ 80%] Built target OSDI2023_MULTI_NODES_gcnii
[ 92%] Built target OSDI2023_MULTI_NODES_gcn_res
[ 92%] Built target estimate_comm_volume
[ 92%] Built target OSDI2023_MULTI_NODES_gin
[ 92%] Built target OSDI2023_MULTI_NODES_graphsage
Running experiments...
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INITDONE MPI INIT
DONE MPI INIT
Initialized node 6 on machine gnerv4
DONE MPI INIT
Initialized node 7 on machine gnerv4
Initialized node 5 on machine gnerv4

Initialized node 4 on machine gnerv4
DONE MPI INIT
Initialized node 0 on machine gnerv3
DONE MPI INIT
Initialized node 2 on machine gnerv3
DONE MPI INIT
Initialized node 1 on machine gnerv3
DONE MPI INIT
Initialized node 3 on machine gnerv3
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.234 seconds.
Building the CSC structure...
        It takes 0.238 seconds.
Building the CSC structure...
        It takes 0.248 seconds.
Building the CSC structure...
        It takes 0.247 seconds.
Building the CSC structure...
        It takes 0.284 seconds.
Building the CSC structure...
        It takes 0.277 seconds.
Building the CSC structure...
        It takes 0.285 seconds.
Building the CSC structure...
        It takes 0.287 seconds.
Building the CSC structure...
        It takes 0.225 seconds.
        It takes 0.224 seconds.
        It takes 0.241 seconds.
        It takes 0.252 seconds.
        It takes 0.271 seconds.
        It takes 0.282 seconds.
        It takes 0.299 seconds.
Building the Feature Vector...
        It takes 0.296 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.467 seconds.
Building the Label Vector...
        It takes 0.473 seconds.
Building the Label Vector...
        It takes 0.471 seconds.
Building the Label Vector...
        It takes 0.510 seconds.
Building the Label Vector...
        It takes 0.486 seconds.
Building the Label Vector...
        It takes 0.467 seconds.
Building the Label Vector...
        It takes 0.495 seconds.
Building the Label Vector...
        It takes 0.501 seconds.
Building the Label Vector...
        It takes 0.187 seconds.
        It takes 0.186 seconds.
        It takes 0.177 seconds.
        It takes 0.199 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/partitioned_graphs/yelp/8_parts
The number of GCNII layers: 30
The number of hidden units: 128
The number of training epoches: 100
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
Number of classes: 100
Number of feature dimensions: 300
Number of vertices: 716847
Number of GPUs: 8
        It takes 0.174 seconds.
        It takes 0.196 seconds.
        It takes 0.184 seconds.
        It takes 0.192 seconds.
GPU 0, layer [0, 30)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 30)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 30)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
716847, 13954819, 13954819
Number of vertices per chunk: 89606
716847, 13954819, 13954819
Number of vertices per chunk: 89606
GPU 0, layer [0, 30)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
716847, 13954819, 13954819
Number of vertices per chunk: 89606
train nodes 537635, valid nodes 107527, test nodes 71685
GPU 0, layer [0, 30)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 89605) 1-[89605, 179211) 2-[179211, 268818) 3-[268818, 358423) 4-[358423, 448029) 5-[448029, 537635) 6-[537635, 627242) 7-[627242, 716847)
GPU 0, layer [0, 30)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 30)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 30)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
716847, 13954819, 13954819
Number of vertices per chunk: 89606
716847, 13954819, 13954819
716847, 13954819, 13954819
Number of vertices per chunk: 89606
Number of vertices per chunk: 89606
716847, 13954819, 13954819
Number of vertices per chunk: 89606
716847, 13954819, 13954819
Number of vertices per chunk: 89606
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 60.575 Gbps (per GPU), 484.602 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.296 Gbps (per GPU), 482.368 Gbps (aggregated)
The layer-level communication performance: 60.298 Gbps (per GPU), 482.387 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.035 Gbps (per GPU), 480.278 Gbps (aggregated)
The layer-level communication performance: 59.998 Gbps (per GPU), 479.987 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.802 Gbps (per GPU), 478.412 Gbps (aggregated)
The layer-level communication performance: 59.750 Gbps (per GPU), 478.000 Gbps (aggregated)
The layer-level communication performance: 59.716 Gbps (per GPU), 477.731 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 157.876 Gbps (per GPU), 1263.012 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.873 Gbps (per GPU), 1262.988 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.868 Gbps (per GPU), 1262.940 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.880 Gbps (per GPU), 1263.038 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.868 Gbps (per GPU), 1262.940 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.876 Gbps (per GPU), 1263.012 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.865 Gbps (per GPU), 1262.917 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.868 Gbps (per GPU), 1262.940 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 101.389 Gbps (per GPU), 811.114 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.391 Gbps (per GPU), 811.127 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.388 Gbps (per GPU), 811.107 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.389 Gbps (per GPU), 811.115 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.389 Gbps (per GPU), 811.114 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.390 Gbps (per GPU), 811.120 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.390 Gbps (per GPU), 811.120 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.389 Gbps (per GPU), 811.114 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 38.056 Gbps (per GPU), 304.446 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.056 Gbps (per GPU), 304.447 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.055 Gbps (per GPU), 304.444 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.053 Gbps (per GPU), 304.424 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.056 Gbps (per GPU), 304.446 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.054 Gbps (per GPU), 304.430 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.055 Gbps (per GPU), 304.442 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.054 Gbps (per GPU), 304.429 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  9.03ms  5.92ms  4.54ms  1.99 89.61K  0.73M
 chk_1  8.96ms  5.85ms  4.46ms  2.01 89.61K  0.74M
 chk_2 12.31ms  9.16ms  7.78ms  1.58 89.61K  3.52M
 chk_3 11.55ms  8.43ms  7.07ms  1.64 89.61K  2.76M
 chk_4 10.51ms  7.41ms  6.03ms  1.74 89.61K  1.50M
 chk_5  9.66ms  6.54ms  5.16ms  1.87 89.61K  1.19M
 chk_6 11.69ms  8.58ms  7.18ms  1.63 89.61K  2.34M
 chk_7  8.69ms  5.95ms  4.18ms  2.08 89.61K  0.47M
   Avg 10.30  7.23  5.80
   Max 12.31  9.16  7.78
   Min  8.69  5.85  4.18
 Ratio  1.42  1.57  1.86
   Var  1.75  1.59  1.74
Profiling takes 2.215 s
*** Node 0, starting model training...
*** Node 1, starting model training...
*** Node 2, starting model training...
*** Node 3, starting model training...
*** Node 4, starting model training...
*** Node 5, starting model training...
*** Node 6, starting model training...
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 240)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 358423, Num Local Vertices: 89606
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 240)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 448029, Num Local Vertices: 89606
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 240)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 537635, Num Local Vertices: 89607
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 240)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 627242, Num Local Vertices: 89605
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 240)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 89605
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 240)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 89605, Num Local Vertices: 89606
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 240)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 179211, Num Local Vertices: 89607
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 240)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 268818, Num Local Vertices: 89605
*** Node 7, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
+++++++++ Node 4 initializing the weights for op[0, 240)...
+++++++++ Node 5 initializing the weights for op[0, 240)...
+++++++++ Node 7 initializing the weights for op[0, 240)...
+++++++++ Node 6 initializing the weights for op[0, 240)...
+++++++++ Node 1 initializing the weights for op[0, 240)...
+++++++++ Node 2 initializing the weights for op[0, 240)...
+++++++++ Node 3 initializing the weights for op[0, 240)...
+++++++++ Node 0 initializing the weights for op[0, 240)...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 898218
Node 0, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 4, starting task scheduling...
*** Node 5, starting task scheduling...
*** Node 6, starting task scheduling...
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 0, starting task scheduling...



The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 26.4120	TrainAcc 0.1516	ValidAcc 0.1509	TestAcc 0.1510	BestValid 0.1509
