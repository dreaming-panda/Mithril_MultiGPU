gnerv1
Sun Aug 13 21:56:09 2023       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 515.43.04    Driver Version: 515.43.04    CUDA Version: 11.7     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA RTX A5000    On   | 00000000:01:00.0 Off |                  Off |
| 30%   29C    P8    24W / 230W |      1MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   1  NVIDIA RTX A5000    On   | 00000000:25:00.0 Off |                  Off |
| 30%   29C    P8    24W / 230W |      1MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   2  NVIDIA RTX A5000    On   | 00000000:81:00.0 Off |                  Off |
| 30%   28C    P8    20W / 230W |      1MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   3  NVIDIA RTX A5000    On   | 00000000:C1:00.0 Off |                  Off |
| 30%   28C    P8    22W / 230W |      1MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
[ 11%] Built target context
[ 36%] Built target core
[ 77%] Built target cudahelp
[ 88%] Built target OSDI2023_MULTI_NODES_graphsage
[ 88%] Built target OSDI2023_MULTI_NODES_gcnii
[100%] Built target OSDI2023_MULTI_NODES_gcn
[100%] Built target estimate_comm_volume
Running experiments...
gnerv3
gnerv3
gnerv3
gnerv3
gnerv2
gnerv2
gnerv2
gnerv2
Initialized node 0 on machine gnerv2
Initialized node 3 on machine gnerv2
Initialized node 1 on machine gnerv2
Initialized node 2 on machine gnerv2
Initialized node 4 on machine gnerv3
Initialized node 5 on machine gnerv3
Initialized node 7 on machine gnerv3
Initialized node 6 on machine gnerv3
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.017 seconds.
Building the CSC structure...
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.023 seconds.
Building the CSC structure...
        It takes 0.024 seconds.
Building the CSC structure...
        It takes 0.026 seconds.
Building the CSC structure...
        It takes 0.029 seconds.
Building the CSC structure...
        It takes 0.032 seconds.
Building the CSC structure...
        It takes 0.019 seconds.
        It takes 0.021 seconds.
        It takes 0.021 seconds.
        It takes 0.019 seconds.
Building the Feature Vector...
        It takes 0.022 seconds.
        It takes 0.021 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.020 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.027 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.095 seconds.
Building the Label Vector...
        It takes 0.101 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.104 seconds.
Building the Label Vector...
        It takes 0.096 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.007 seconds.
        It takes 0.008 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/weighted_shuffled_partitioned_graphs/flickr/32_parts
The number of GCN layers: 32
The number of hidden units: 100
The number of training epoches: 500
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
Number of classes: 7
Number of feature dimensions: 500
Number of vertices: 89250
Number of GPUs: 8
        It takes 0.109 seconds.
        It takes 0.103 seconds.
Building the Label Vector...
Building the Label Vector...
        It takes 0.115 seconds.
Building the Label Vector...
        It takes 0.103 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.007 seconds.
        It takes 0.007 seconds.
        It takes 0.007 seconds.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
89250, 989006, 989006
Number of vertices per chunk: 2790
89250, 989006, 989006
Number of vertices per chunk: 2790
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
89250, 989006, 989006
Number of vertices per chunk: 2790
89250, 989006, 989006
Number of vertices per chunk: 2790
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
train nodes 44625, valid nodes 22312, test nodes 22313
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
89250, 989006, 989006
Chunks (number of global chunks: 32): 0-[0, 2809) 1-[2809, 5626) 2-[5626, 8426) 3-[8426, 11230) 4-[11230, 14047) 5-[14047, 16800) 6-[16800, 19507) 7-[19507, 22266) 8-[22266, 25059) ... 31-[86469, 89250)
Number of vertices per chunk: 2790
89250, 989006, 989006
Number of vertices per chunk: 2790
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
89250, 989006, 989006
Number of vertices per chunk: 2790
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
89250, 989006, 989006
Number of vertices per chunk: 2790
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 59.662 Gbps (per GPU), 477.293 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.370 Gbps (per GPU), 474.958 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.376 Gbps (per GPU), 475.011 Gbps (aggregated)
The layer-level communication performance: 59.121 Gbps (per GPU), 472.971 Gbps (aggregated)
The layer-level communication performance: 59.086 Gbps (per GPU), 472.691 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.888 Gbps (per GPU), 471.107 Gbps (aggregated)
The layer-level communication performance: 58.841 Gbps (per GPU), 470.727 Gbps (aggregated)
The layer-level communication performance: 58.810 Gbps (per GPU), 470.477 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 157.639 Gbps (per GPU), 1261.113 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.607 Gbps (per GPU), 1260.852 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.642 Gbps (per GPU), 1261.137 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.639 Gbps (per GPU), 1261.113 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.648 Gbps (per GPU), 1261.184 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.645 Gbps (per GPU), 1261.160 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.639 Gbps (per GPU), 1261.113 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.630 Gbps (per GPU), 1261.042 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 99.036 Gbps (per GPU), 792.287 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 99.024 Gbps (per GPU), 792.194 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 99.037 Gbps (per GPU), 792.300 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 99.031 Gbps (per GPU), 792.249 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 99.038 Gbps (per GPU), 792.306 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 99.025 Gbps (per GPU), 792.200 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 99.035 Gbps (per GPU), 792.281 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 99.006 Gbps (per GPU), 792.051 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 32.187 Gbps (per GPU), 257.494 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.189 Gbps (per GPU), 257.515 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.188 Gbps (per GPU), 257.501 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.190 Gbps (per GPU), 257.520 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.183 Gbps (per GPU), 257.468 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.186 Gbps (per GPU), 257.486 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.186 Gbps (per GPU), 257.486 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.184 Gbps (per GPU), 257.468 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  0.32ms  0.33ms  0.22ms  1.52  2.81K  0.03M
 chk_1  0.32ms  0.33ms  0.22ms  1.48  2.82K  0.03M
 chk_2  0.32ms  0.33ms  0.22ms  1.50  2.80K  0.03M
 chk_3  0.32ms  0.33ms  0.22ms  1.51  2.80K  0.03M
 chk_4  0.32ms  0.33ms  0.22ms  1.49  2.82K  0.03M
 chk_5  0.32ms  0.34ms  0.23ms  1.49  2.75K  0.03M
 chk_6  0.31ms  0.32ms  0.21ms  1.52  2.71K  0.03M
 chk_7  0.32ms  0.33ms  0.22ms  1.51  2.76K  0.03M
 chk_8  0.32ms  0.33ms  0.22ms  1.49  2.79K  0.03M
 chk_9  0.32ms  0.33ms  0.22ms  1.49  2.81K  0.03M
chk_10  0.31ms  0.33ms  0.22ms  1.52  2.81K  0.03M
chk_11  0.32ms  0.33ms  0.22ms  1.50  2.74K  0.03M
chk_12  0.32ms  0.33ms  0.22ms  1.49  2.76K  0.03M
chk_13  0.32ms  0.33ms  0.22ms  1.51  2.75K  0.03M
chk_14  0.32ms  0.33ms  0.22ms  1.50  2.81K  0.03M
chk_15  0.34ms  0.33ms  0.22ms  1.55  2.77K  0.03M
chk_16  0.32ms  0.33ms  0.22ms  1.50  2.78K  0.03M
chk_17  0.32ms  0.33ms  0.22ms  1.50  2.79K  0.03M
chk_18  0.32ms  0.33ms  0.22ms  1.51  2.82K  0.03M
chk_19  0.31ms  0.32ms  0.22ms  1.50  2.81K  0.03M
chk_20  0.32ms  0.33ms  0.22ms  1.50  2.77K  0.03M
chk_21  0.32ms  0.33ms  0.22ms  1.51  2.84K  0.02M
chk_22  0.32ms  0.33ms  0.22ms  1.49  2.78K  0.03M
chk_23  0.32ms  0.33ms  0.22ms  1.49  2.80K  0.03M
chk_24  0.32ms  0.33ms  0.22ms  1.49  2.80K  0.03M
chk_25  0.32ms  0.33ms  0.22ms  1.51  2.81K  0.03M
chk_26  0.31ms  0.32ms  0.22ms  1.50  2.81K  0.03M
chk_27  0.32ms  0.33ms  0.22ms  1.50  2.79K  0.03M
chk_28  0.32ms  0.33ms  0.22ms  1.50  2.77K  0.03M
chk_29  0.32ms  0.33ms  0.22ms  1.49  2.77K  0.03M
chk_30  0.34ms  0.33ms  0.22ms  1.55  2.80K  0.03M
chk_31  0.34ms  0.33ms  0.22ms  1.54  2.78K  0.03M
   Avg  0.32  0.33  0.22
   Max  0.34  0.34  0.23
   Min  0.31  0.32  0.21
 Ratio  1.11  1.05  1.06
   Var  0.00  0.00  0.00
Profiling takes 0.427 s
*** Node 4, starting model training...
Num Stages: 8 / 8
Node 4, Pipeline Input Tensor: OPERATOR_ADD
Node 4, Pipeline Output Tensor: OPERATOR_ADD
*** Node 4 owns the model-level partition [96, 120)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 89250
*** Node 0, starting model training...
Num Stages: 8 / 8
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_ADD
*** Node 0 owns the model-level partition [0, 24)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 89250
*** Node 5, starting model training...
Num Stages: 8 / 8
Node 5, Pipeline Input Tensor: OPERATOR_ADD
Node 5, Pipeline Output Tensor: OPERATOR_ADD
*** Node 5 owns the model-level partition [120, 144)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 0, Num Local Vertices: 89250
*** Node 1, starting model training...
Num Stages: 8 / 8
Node 1, Pipeline Input Tensor: OPERATOR_ADD
Node 1, Pipeline Output Tensor: OPERATOR_ADD
*** Node 1 owns the model-level partition [24, 48)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 0, Num Local Vertices: 89250
*** Node 6, starting model training...
Num Stages: 8 / 8
Node 6, Pipeline Input Tensor: OPERATOR_ADD
Node 6, Pipeline Output Tensor: OPERATOR_ADD
*** Node 6 owns the model-level partition [144, 168)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 0, Num Local Vertices: 89250
*** Node 2, starting model training...
Num Stages: 8 / 8
Node 2, Pipeline Input Tensor: OPERATOR_ADD
Node 2, Pipeline Output Tensor: OPERATOR_ADD
*** Node 2 owns the model-level partition [48, 72)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 89250
*** Node 7, starting model training...
Num Stages: 8 / 8
Node 7, Pipeline Input Tensor: OPERATOR_ADD
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [168, 190)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 0, Num Local Vertices: 89250
*** Node 3, starting model training...
Num Stages: 8 / 8
Node 3, Pipeline Input Tensor: OPERATOR_ADD
Node 3, Pipeline Output Tensor: OPERATOR_ADD
*** Node 3 owns the model-level partition [72, 96)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 0, Num Local Vertices: 89250
*** Node 4, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
+++++++++ Node 4 initializing the weights for op[96, 120)...
+++++++++ Node 0 initializing the weights for op[0, 24)...
+++++++++ Node 5 initializing the weights for op[120, 144)...
+++++++++ Node 1 initializing the weights for op[24, 48)...
+++++++++ Node 6 initializing the weights for op[144, 168)...
+++++++++ Node 2 initializing the weights for op[48, 72)...
+++++++++ Node 3 initializing the weights for op[72, 96)...
+++++++++ Node 7 initializing the weights for op[168, 190)...
Node 0, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 0
Node 0, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 6, starting task scheduling...
*** Node 0, starting task scheduling...



The learning rate specified by the user: 0.001000000
*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 2.0596	TrainAcc 0.4168	ValidAcc 0.4188	TestAcc 0.4195	BestValid 0.4188
	Epoch 50:	Loss 1.5669	TrainAcc 0.4816	ValidAcc 0.4837	TestAcc 0.4849	BestValid 0.4837
	Epoch 100:	Loss 1.5284	TrainAcc 0.4387	ValidAcc 0.4425	TestAcc 0.4425	BestValid 0.4837
	Epoch 150:	Loss 1.5016	TrainAcc 0.4811	ValidAcc 0.4821	TestAcc 0.4796	BestValid 0.4837
	Epoch 200:	Loss 1.4833	TrainAcc 0.4948	ValidAcc 0.4964	TestAcc 0.4924	BestValid 0.4964
	Epoch 250:	Loss 1.4670	TrainAcc 0.4978	ValidAcc 0.5005	TestAcc 0.4947	BestValid 0.5005
	Epoch 300:	Loss 1.4580	TrainAcc 0.5004	ValidAcc 0.5014	TestAcc 0.4959	BestValid 0.5014
	Epoch 350:	Loss 1.4558	TrainAcc 0.4952	ValidAcc 0.4929	TestAcc 0.4886	BestValid 0.5014
	Epoch 400:	Loss 1.4585	TrainAcc 0.4993	ValidAcc 0.4988	TestAcc 0.4979	BestValid 0.5014
	Epoch 450:	Loss 1.4526	TrainAcc 0.4910	ValidAcc 0.4882	TestAcc 0.4862	BestValid 0.5014
	Epoch 500:	Loss 1.4418	TrainAcc 0.5066	ValidAcc 0.5052	TestAcc 0.5017	BestValid 0.5052
****** Epoch Time (Excluding Evaluation Cost): 0.071 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 13.737 ms (Max: 14.448, Min: 11.510, Sum: 109.893)
Cluster-Wide Average, Compute: 43.032 ms (Max: 45.453, Min: 42.133, Sum: 344.254)
Cluster-Wide Average, Communication-Layer: 7.991 ms (Max: 8.809, Min: 6.095, Sum: 63.926)
Cluster-Wide Average, Bubble-Imbalance: 4.638 ms (Max: 5.846, Min: 2.925, Sum: 37.107)
Cluster-Wide Average, Communication-Graph: 0.466 ms (Max: 0.539, Min: 0.400, Sum: 3.726)
Cluster-Wide Average, Optimization: 0.091 ms (Max: 0.095, Min: 0.088, Sum: 0.732)
Cluster-Wide Average, Others: 0.970 ms (Max: 3.798, Min: 0.560, Sum: 7.758)
****** Breakdown Sum: 70.924 ms ******
Cluster-Wide Average, GPU Memory Consumption: 2.776 GB (Max: 3.208, Min: 2.464, Sum: 22.210)
Cluster-Wide Average, Graph-Level Communication Throughput: -nan Gbps (Max: -nan, Min: -nan, Sum: -nan)
Cluster-Wide Average, Layer-Level Communication Throughput: 61.447 Gbps (Max: 68.574, Min: 43.640, Sum: 491.575)
Layer-level communication (cluster-wide, per-epoch): 0.465 GB
Graph-level communication (cluster-wide, per-epoch): 0.000 GB
Weight-sync communication (cluster-wide, per-epoch): 0.000 GB
Total communication (cluster-wide, per-epoch): 0.465 GB
****** Accuracy Results ******
Highest valid_acc: 0.5052
Target test_acc: 0.5017
Epoch to reach the target acc: 499
[MPI Rank 4] Success 
[MPI Rank 0] Success 
[MPI Rank 5] Success 
[MPI Rank 1] Success 
[MPI Rank 6] Success 
[MPI Rank 2] Success 
[MPI Rank 7] Success 
[MPI Rank 3] Success 
