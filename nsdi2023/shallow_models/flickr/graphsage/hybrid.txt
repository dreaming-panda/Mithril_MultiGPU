Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
DONE MPI INIT
Initialized node 1 on machine gnerv7
Initialized node 0 on machine gnerv7
DONE MPI INIT
Initialized node 2 on machine gnerv7
DONE MPI INIT
Initialized node 3 on machine gnerv7
DONE MPI INIT
DONE MPI INIT
Initialized node 7 on machine gnerv8
DONE MPI INIT
Initialized node 4 on machine gnerv8
Initialized node 5 on machine gnerv8
DONE MPI INIT
Initialized node 6 on machine gnerv8
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.018 seconds.
Building the CSC structure...
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.021 seconds.
Building the CSC structure...
        It takes 0.024 seconds.
Building the CSC structure...
        It takes 0.026 seconds.
Building the CSC structure...
        It takes 0.027 seconds.
Building the CSC structure...
        It takes 0.027 seconds.
Building the CSC structure...
        It takes 0.033 seconds.
Building the CSC structure...
        It takes 0.020 seconds.
        It takes 0.020 seconds.
        It takes 0.022 seconds.
        It takes 0.022 seconds.
        It takes 0.019 seconds.
        It takes 0.020 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.020 seconds.
Building the Feature Vector...
        It takes 0.020 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.100 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.112 seconds.
Building the Label Vector...
        It takes 0.111 seconds.
Building the Label Vector...
        It takes 0.121 seconds.
Building the Label Vector...
        It takes 0.120 seconds.
        It takes 0.112 seconds.
Building the Label Vector...
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.008 seconds.
        It takes 0.120 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/flickr/32_parts
The number of GCNII layers: 4
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
Number of classes: 7
Number of feature dimensions: 500
Number of vertices: 89250
Number of GPUs: 8
        It takes 0.007 seconds.
        It takes 0.007 seconds.
        It takes 0.117 seconds.
Building the Label Vector...
        It takes 0.008 seconds.
        It takes 0.007 seconds.
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
Number of vertices per chunk: 2790
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
Number of vertices per chunk: 2790
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
89250, 989006, 989006
Number of vertices per chunk: 2790
89250, 989006, 989006
Number of vertices per chunk: 2790
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
89250, 989006, 989006
Number of vertices per chunk: 2790
Number of vertices per chunk: 2790
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
train nodes 44625, valid nodes 22312, test nodes 22313
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 2710) 1-[2710, 5440) 2-[5440, 8172) 3-[8172, 10885) 4-[10885, 13599) 5-[13599, 16470) 6-[16470, 19189) 7-[19189, 22061) 8-[22061, 24780) ... 31-[86532, 89250)
89250, 989006, 989006
Number of vertices per chunk: 2790
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
Number of vertices per chunk: 2790
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 60.592 Gbps (per GPU), 484.732 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.282 Gbps (per GPU), 482.253 Gbps (aggregated)
The layer-level communication performance: 60.273 Gbps (per GPU), 482.185 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.008 Gbps (per GPU), 480.068 Gbps (aggregated)
The layer-level communication performance: 59.982 Gbps (per GPU), 479.853 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.753 Gbps (per GPU), 478.022 Gbps (aggregated)
The layer-level communication performance: 59.701 Gbps (per GPU), 477.604 Gbps (aggregated)
The layer-level communication performance: 59.671 Gbps (per GPU), 477.365 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.990 Gbps (per GPU), 1271.917 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.920 Gbps (per GPU), 1271.362 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.990 Gbps (per GPU), 1271.917 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.987 Gbps (per GPU), 1271.893 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.920 Gbps (per GPU), 1271.362 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.987 Gbps (per GPU), 1271.893 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.981 Gbps (per GPU), 1271.845 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.987 Gbps (per GPU), 1271.893 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 105.291 Gbps (per GPU), 842.328 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.290 Gbps (per GPU), 842.321 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.291 Gbps (per GPU), 842.328 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.288 Gbps (per GPU), 842.307 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.287 Gbps (per GPU), 842.293 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.286 Gbps (per GPU), 842.286 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.286 Gbps (per GPU), 842.286 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.287 Gbps (per GPU), 842.293 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 38.931 Gbps (per GPU), 311.445 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.928 Gbps (per GPU), 311.427 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.930 Gbps (per GPU), 311.440 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.928 Gbps (per GPU), 311.427 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.928 Gbps (per GPU), 311.424 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.926 Gbps (per GPU), 311.411 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.927 Gbps (per GPU), 311.416 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.924 Gbps (per GPU), 311.396 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  0.67ms  0.38ms  0.35ms  1.93  2.71K  0.03M
 chk_1  0.67ms  0.38ms  0.34ms  1.96  2.73K  0.03M
 chk_2  0.68ms  0.39ms  0.36ms  1.90  2.73K  0.03M
 chk_3  0.67ms  0.38ms  0.35ms  1.91  2.71K  0.03M
 chk_4  0.67ms  0.38ms  0.35ms  1.90  2.71K  0.02M
 chk_5  0.68ms  0.38ms  0.35ms  1.95  2.87K  0.03M
 chk_6  0.66ms  0.38ms  0.35ms  1.92  2.72K  0.03M
 chk_7  0.68ms  0.37ms  0.34ms  2.01  2.87K  0.03M
 chk_8  0.67ms  0.39ms  0.35ms  1.91  2.72K  0.02M
 chk_9  0.69ms  0.40ms  0.37ms  1.88  2.87K  0.04M
chk_10  0.67ms  0.38ms  0.35ms  1.90  2.73K  0.03M
chk_11  0.69ms  0.39ms  0.36ms  1.91  2.87K  0.03M
chk_12  0.68ms  0.38ms  0.36ms  1.90  2.80K  0.03M
chk_13  1.27ms  0.38ms  0.36ms  3.54  2.87K  0.03M
chk_14  0.67ms  0.38ms  0.35ms  1.89  2.72K  0.02M
chk_15  0.68ms  0.39ms  0.36ms  1.91  2.77K  0.03M
chk_16  0.68ms  0.39ms  0.36ms  1.91  2.83K  0.03M
chk_17  0.69ms  0.39ms  0.36ms  1.91  2.87K  0.03M
chk_18  0.67ms  0.39ms  0.35ms  1.89  2.71K  0.02M
chk_19  0.67ms  0.38ms  0.35ms  1.89  2.71K  0.02M
chk_20  0.67ms  0.39ms  0.36ms  1.90  2.72K  0.02M
chk_21  0.69ms  0.39ms  0.36ms  1.89  2.87K  0.03M
chk_22  0.69ms  0.39ms  0.36ms  1.91  2.87K  0.03M
chk_23  0.67ms  0.39ms  0.35ms  1.90  2.72K  0.03M
chk_24  0.69ms  0.39ms  0.36ms  1.91  2.87K  0.03M
chk_25  0.67ms  0.39ms  0.35ms  1.90  2.74K  0.03M
chk_26  0.69ms  0.39ms  0.37ms  1.89  2.87K  0.03M
chk_27  0.69ms  0.39ms  0.36ms  1.91  2.87K  0.03M
chk_28  0.69ms  0.39ms  0.36ms  1.89  2.87K  0.03M
chk_29  0.67ms  0.39ms  0.35ms  1.90  2.72K  0.02M
chk_30  0.69ms  0.39ms  0.36ms  1.90  2.87K  0.03M
chk_31  0.67ms  0.39ms  0.35ms  1.91  2.72K  0.02M
   Avg  0.70  0.39  0.36
   Max  1.27  0.40  0.37
   Min  0.66  0.37  0.34
 Ratio  1.90  1.06  1.09
   Var  0.01  0.00  0.00
Profiling takes 0.641 s
*** Node 0, starting model training...
Num Stages: 2 / 2
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 0 owns the model-level partition [0, 18)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 22061
*** Node 1, starting model training...
Num Stages: 2 / 2
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 1 owns the model-level partition [0, 18)
*** Node 1, constructing the helper classes...
*** Node 6, starting model training...
Num Stages: 2 / 2
*** Node 2, starting model training...
Num Stages: 2 / 2
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 2 owns the model-level partition [0, 18)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 44409, Num Local Vertices: 22311
*** Node 7, starting model training...
Num Stages: 2 / 2
Node 7, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [18, 33)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 66720, Num Local Vertices: 22530
*** Node 3, starting model training...
Num Stages: 2 / 2
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 3 owns the model-level partition [0, 18)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 66720, Num Local Vertices: 22530
*** Node 4, starting model training...
Num Stages: 2 / 2
Node 1, Local Vertex Begin: 22061, Num Local Vertices: 22348
*** Node 5, starting model training...
Num Stages: 2 / 2
Node 5, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [18, 33)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 22061, Num Local Vertices: 22348
Node 6, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [18, 33)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 44409, Num Local Vertices: 22311
Node 4, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [18, 33)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 22061
*** Node 1, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 18)...
+++++++++ Node 2 initializing the weights for op[0, 18)...
+++++++++ Node 3 initializing the weights for op[0, 18)...
+++++++++ Node 1 initializing the weights for op[0, 18)...
+++++++++ Node 4 initializing the weights for op[18, 33)...
+++++++++ Node 5 initializing the weights for op[18, 33)...
+++++++++ Node 6 initializing the weights for op[18, 33)...
+++++++++ Node 7 initializing the weights for op[18, 33)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 270108
Node 0, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 4, starting task scheduling...
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 6.3842	TrainAcc 0.3981	ValidAcc 0.3985	TestAcc 0.3971	BestValid 0.3985
	Epoch 50:	Loss 1.6220	TrainAcc 0.4216	ValidAcc 0.4238	TestAcc 0.4235	BestValid 0.4238
****** Epoch Time (Excluding Evaluation Cost): 0.025 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 2.347 ms (Max: 2.471, Min: 2.225, Sum: 18.776)
Cluster-Wide Average, Compute: 9.558 ms (Max: 10.810, Min: 8.331, Sum: 76.468)
Cluster-Wide Average, Communication-Layer: 2.654 ms (Max: 2.859, Min: 2.420, Sum: 21.230)
Cluster-Wide Average, Bubble-Imbalance: 1.036 ms (Max: 1.890, Min: 0.200, Sum: 8.286)
Cluster-Wide Average, Communication-Graph: 7.797 ms (Max: 7.973, Min: 7.700, Sum: 62.380)
Cluster-Wide Average, Optimization: 0.983 ms (Max: 1.020, Min: 0.945, Sum: 7.861)
Cluster-Wide Average, Others: 0.903 ms (Max: 1.304, Min: 0.512, Sum: 7.224)
****** Breakdown Sum: 25.278 ms ******
Cluster-Wide Average, GPU Memory Consumption: 1.568 GB (Max: 2.272, Min: 1.313, Sum: 12.548)
Cluster-Wide Average, Graph-Level Communication Throughput: 64.129 Gbps (Max: 73.597, Min: 38.712, Sum: 513.029)
Cluster-Wide Average, Layer-Level Communication Throughput: 26.982 Gbps (Max: 29.172, Min: 25.055, Sum: 215.853)
Layer-level communication (cluster-wide, per-epoch): 0.066 GB
Graph-level communication (cluster-wide, per-epoch): 0.402 GB
Weight-sync communication (cluster-wide, per-epoch): 0.003 GB
Total communication (cluster-wide, per-epoch): 0.472 GB
****** Accuracy Results ******
Highest valid_acc: 0.4238
Target test_acc: 0.4235
Epoch to reach the target acc: 49
[MPI Rank 0] Success 
[MPI Rank 4] Success 
[MPI Rank 1] Success 
[MPI Rank 5] Success 
[MPI Rank 2] Success 
[MPI Rank 6] Success 
[MPI Rank 3] Success 
[MPI Rank 7] Success 
