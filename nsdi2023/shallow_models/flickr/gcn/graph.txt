Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INITDONE MPI INIT
Initialized node 7 on machine gnerv8

DONE MPI INIT
Initialized node 4 on machine gnerv8
Initialized node 5 on machine gnerv8
DONE MPI INIT
Initialized node 6 on machine gnerv8
DONE MPI INIT
DONE MPI INIT
Initialized node 1 on machine gnerv7
DONE MPI INIT
Initialized node 2 on machine gnerv7
DONE MPI INIT
Initialized node 3 on machine gnerv7
Initialized node 0 on machine gnerv7
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.022 seconds.
Building the CSC structure...
        It takes 0.023 seconds.
Building the CSC structure...
        It takes 0.022 seconds.
Building the CSC structure...
        It takes 0.023 seconds.
Building the CSC structure...
        It takes 0.024 seconds.
Building the CSC structure...
        It takes 0.024 seconds.
Building the CSC structure...
        It takes 0.029 seconds.
Building the CSC structure...
        It takes 0.021 seconds.
        It takes 0.021 seconds.
        It takes 0.021 seconds.
        It takes 0.022 seconds.
        It takes 0.020 seconds.
        It takes 0.022 seconds.
        It takes 0.025 seconds.
Building the Feature Vector...
        It takes 0.021 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.102 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.109 seconds.
Building the Label Vector...
        It takes 0.110 seconds.
Building the Label Vector...
        It takes 0.108 seconds.
Building the Label Vector...
        It takes 0.117 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.007 seconds.
        It takes 0.007 seconds.
        It takes 0.120 seconds.
Building the Label Vector...
        It takes 0.120 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/flickr/8_parts
The number of GCN layers: 4
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
Number of classes: 7
Number of feature dimensions: 500
Number of vertices: 89250
Number of GPUs: 8
        It takes 0.120 seconds.
        It takes 0.007 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.008 seconds.
GPU 0, layer [0, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
GPU 0, layer [0, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Number of vertices per chunk: 11157
89250, 989006, 989006
Number of vertices per chunk: 11157
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
89250, 989006, 989006
89250, 989006, 989006
Number of vertices per chunk: 11157
Number of vertices per chunk: 11157
Number of vertices per chunk: 11157
89250, 989006, 989006
Number of vertices per chunk: 11157
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
train nodes 44625, valid nodes 22312, test nodes 22313
GPU 0, layer [0, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 11156) 1-[11156, 22313) 2-[22313, 33469) 3-[33469, 44625) 4-[44625, 55781) 5-[55781, 66937) 6-[66937, 78093) 7-[78093, 89250)
89250, 989006, 989006
GPU 0, layer [0, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Number of vertices per chunk: 11157
89250, 989006, 989006
Number of vertices per chunk: 11157
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 60.715 Gbps (per GPU), 485.716 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.445 Gbps (per GPU), 483.563 Gbps (aggregated)
The layer-level communication performance: 60.433 Gbps (per GPU), 483.463 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.197 Gbps (per GPU), 481.576 Gbps (aggregated)
The layer-level communication performance: 60.163 Gbps (per GPU), 481.300 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.945 Gbps (per GPU), 479.562 Gbps (aggregated)
The layer-level communication performance: 59.897 Gbps (per GPU), 479.178 Gbps (aggregated)
The layer-level communication performance: 59.866 Gbps (per GPU), 478.927 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.800 Gbps (per GPU), 1270.400 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.779 Gbps (per GPU), 1270.231 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.800 Gbps (per GPU), 1270.400 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.773 Gbps (per GPU), 1270.183 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.815 Gbps (per GPU), 1270.521 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.806 Gbps (per GPU), 1270.448 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.806 Gbps (per GPU), 1270.448 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.800 Gbps (per GPU), 1270.403 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 104.604 Gbps (per GPU), 836.832 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.605 Gbps (per GPU), 836.838 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.598 Gbps (per GPU), 836.783 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.606 Gbps (per GPU), 836.845 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.599 Gbps (per GPU), 836.790 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.604 Gbps (per GPU), 836.832 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.596 Gbps (per GPU), 836.770 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.598 Gbps (per GPU), 836.783 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 37.298 Gbps (per GPU), 298.382 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.296 Gbps (per GPU), 298.368 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.297 Gbps (per GPU), 298.375 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.293 Gbps (per GPU), 298.340 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.296 Gbps (per GPU), 298.366 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.294 Gbps (per GPU), 298.349 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.290 Gbps (per GPU), 298.318 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.286 Gbps (per GPU), 298.286 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  0.75ms  0.56ms  0.94ms  1.69 11.16K  0.12M
 chk_1  0.75ms  0.56ms  0.37ms  2.04 11.16K  0.11M
 chk_2  0.72ms  0.53ms  0.34ms  2.14 11.16K  0.11M
 chk_3  0.68ms  0.49ms  0.30ms  2.30 11.16K  0.12M
 chk_4  0.75ms  0.56ms  0.37ms  2.04 11.16K  0.11M
 chk_5  0.74ms  0.55ms  0.35ms  2.08 11.16K  0.10M
 chk_6  0.74ms  0.55ms  0.36ms  2.07 11.16K  0.12M
 chk_7  0.75ms  0.56ms  0.37ms  2.04 11.16K  0.11M
   Avg  0.74  0.55  0.42
   Max  0.75  0.56  0.94
   Min  0.68  0.49  0.30
 Ratio  1.10  1.14  3.16
   Var  0.00  0.00  0.04
Profiling takes 0.231 s
*** Node 0, starting model training...
*** Node 1, starting model training...
*** Node 2, starting model training...
*** Node 3, starting model training...
*** Node 4, starting model training...
*** Node 5, starting model training...
*** Node 6, starting model training...
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 20)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 20)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 22313, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 20)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 11156, Num Local Vertices: 11157
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 20)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 33469, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 20)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 78093, Num Local Vertices: 11157
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 20)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 55781, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 20)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 66937, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 20)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 44625, Num Local Vertices: 11156
*** Node 0, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 20)...
+++++++++ Node 4 initializing the weights for op[0, 20)...
+++++++++ Node 1 initializing the weights for op[0, 20)...
+++++++++ Node 7 initializing the weights for op[0, 20)...
+++++++++ Node 2 initializing the weights for op[0, 20)...
+++++++++ Node 5 initializing the weights for op[0, 20)...
+++++++++ Node 3 initializing the weights for op[0, 20)...
+++++++++ Node 6 initializing the weights for op[0, 20)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 192232
Node 0, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 2.2301	TrainAcc 0.4211	ValidAcc 0.4230	TestAcc 0.4227	BestValid 0.4230
	Epoch 50:	Loss 1.5316	TrainAcc 0.4966	ValidAcc 0.4988	TestAcc 0.4943	BestValid 0.4988
****** Epoch Time (Excluding Evaluation Cost): 0.019 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 0.244 ms (Max: 0.438, Min: 0.046, Sum: 1.955)
Cluster-Wide Average, Compute: 2.414 ms (Max: 2.467, Min: 2.305, Sum: 19.309)
Cluster-Wide Average, Communication-Layer: 0.008 ms (Max: 0.009, Min: 0.007, Sum: 0.064)
Cluster-Wide Average, Bubble-Imbalance: 0.015 ms (Max: 0.017, Min: 0.014, Sum: 0.124)
Cluster-Wide Average, Communication-Graph: 15.474 ms (Max: 15.641, Min: 15.310, Sum: 123.790)
Cluster-Wide Average, Optimization: 0.453 ms (Max: 0.468, Min: 0.382, Sum: 3.624)
Cluster-Wide Average, Others: 0.156 ms (Max: 0.160, Min: 0.151, Sum: 1.246)
****** Breakdown Sum: 18.764 ms ******
Cluster-Wide Average, GPU Memory Consumption: 1.524 GB (Max: 1.639, Min: 1.493, Sum: 12.194)
Cluster-Wide Average, Graph-Level Communication Throughput: 41.923 Gbps (Max: 51.817, Min: 16.825, Sum: 335.380)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 0.573 GB
Weight-sync communication (cluster-wide, per-epoch): 0.004 GB
Total communication (cluster-wide, per-epoch): 0.577 GB
****** Accuracy Results ******
Highest valid_acc: 0.4988
Target test_acc: 0.4943
Epoch to reach the target acc: 49
[MPI Rank 0] Success 
[MPI Rank 4] Success 
[MPI Rank 1] Success 
[MPI Rank 5] Success 
[MPI Rank 2] Success 
[MPI Rank 6] Success 
[MPI Rank 3] Success 
[MPI Rank 7] Success 
