Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
Initialized node 6 on machine gnerv3
DONE MPI INITDONE MPI INIT
Initialized node 7 on machine gnerv3

DONE MPI INIT
Initialized node 5 on machine gnerv3
Initialized node 4 on machine gnerv3
DONE MPI INIT
DONE MPI INITDONE MPI INIT
Initialized node 3 on machine gnerv2
Initialized node 0 on machine gnerv2
DONE MPI INIT
Initialized node 2 on machine gnerv2

Initialized node 1 on machine gnerv2
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 1.834 seconds.
Building the CSC structure...
        It takes 2.090 seconds.
Building the CSC structure...
        It takes 2.444 seconds.
Building the CSC structure...
        It takes 2.529 seconds.
Building the CSC structure...
        It takes 2.531 seconds.
Building the CSC structure...
        It takes 2.544 seconds.
Building the CSC structure...
        It takes 2.590 seconds.
Building the CSC structure...
        It takes 2.686 seconds.
Building the CSC structure...
        It takes 1.787 seconds.
        It takes 1.991 seconds.
Building the Feature Vector...
        It takes 2.370 seconds.
        It takes 0.241 seconds.
Building the Label Vector...
        It takes 0.035 seconds.
        It takes 2.353 seconds.
        It takes 2.483 seconds.
        It takes 2.482 seconds.
        It takes 2.473 seconds.
        It takes 2.391 seconds.
Building the Feature Vector...
        It takes 0.274 seconds.
Building the Label Vector...
        It takes 0.038 seconds.
Building the Feature Vector...
GPU 0, layer [0, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.281 seconds.
Building the Label Vector...
        It takes 0.035 seconds.
232965, 114848857, 114848857
Number of vertices per chunk: 29121
        It takes 0.304 seconds.
Building the Label Vector...
        It takes 0.304 seconds.
Building the Label Vector...
        It takes 0.038 seconds.
        It takes 0.039 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.265 seconds.
Building the Label Vector...
        It takes 0.036 seconds.
GPU 0, layer [0, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
        It takes 0.268 seconds.
Building the Label Vector...
        It takes 0.276 seconds.
Building the Label Vector...
        It takes 0.033 seconds.
        It takes 0.032 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/reddit/8_parts
The number of GCNII layers: 4
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
Number of classes: 41
Number of feature dimensions: 602
Number of vertices: 232965
Number of GPUs: 8
GPU 0, layer [0, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
GPU 0, layer [0, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
train nodes 153431, valid nodes 23831, test nodes 55703
GPU 0, layer [0, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 29120) 1-[29120, 58241) 2-[58241, 87362) 3-[87362, 116483) 4-[116483, 145604) 5-[145604, 174724) 6-[174724, 203845) 7-[203845, 232965)
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 55.540 Gbps (per GPU), 444.323 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 55.281 Gbps (per GPU), 442.247 Gbps (aggregated)
The layer-level communication performance: 55.293 Gbps (per GPU), 442.344 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 55.077 Gbps (per GPU), 440.614 Gbps (aggregated)
The layer-level communication performance: 55.057 Gbps (per GPU), 440.458 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 54.857 Gbps (per GPU), 438.854 Gbps (aggregated)
The layer-level communication performance: 54.821 Gbps (per GPU), 438.567 Gbps (aggregated)
The layer-level communication performance: 54.787 Gbps (per GPU), 438.295 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 157.705 Gbps (per GPU), 1261.637 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.651 Gbps (per GPU), 1261.208 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.684 Gbps (per GPU), 1261.469 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.699 Gbps (per GPU), 1261.589 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.684 Gbps (per GPU), 1261.469 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.651 Gbps (per GPU), 1261.208 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.716 Gbps (per GPU), 1261.729 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.687 Gbps (per GPU), 1261.492 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 100.791 Gbps (per GPU), 806.326 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.794 Gbps (per GPU), 806.351 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.791 Gbps (per GPU), 806.326 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.793 Gbps (per GPU), 806.345 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.791 Gbps (per GPU), 806.326 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.794 Gbps (per GPU), 806.351 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.791 Gbps (per GPU), 806.326 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.799 Gbps (per GPU), 806.390 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 32.320 Gbps (per GPU), 258.563 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.320 Gbps (per GPU), 258.560 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.321 Gbps (per GPU), 258.566 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.320 Gbps (per GPU), 258.561 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.320 Gbps (per GPU), 258.563 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.320 Gbps (per GPU), 258.559 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.321 Gbps (per GPU), 258.568 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.321 Gbps (per GPU), 258.566 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0 10.10ms 11.19ms 13.64ms  1.35 29.12K 14.23M
 chk_1  5.72ms  7.00ms  9.39ms  1.64 29.12K  6.56M
 chk_2 16.87ms 18.24ms 20.59ms  1.22 29.12K 24.68M
 chk_3 17.13ms 18.43ms 20.80ms  1.21 29.12K 22.95M
 chk_4  5.54ms  6.86ms  9.19ms  1.66 29.12K  6.33M
 chk_5  9.47ms 10.77ms 13.13ms  1.39 29.12K 12.05M
 chk_6 10.61ms 12.01ms 14.10ms  1.33 29.12K 14.60M
 chk_7  9.92ms 10.96ms 13.22ms  1.33 29.12K 13.21M
   Avg 10.67 11.93 14.26
   Max 17.13 18.43 20.80
   Min  5.54  6.86  9.19
 Ratio  3.09  2.69  2.26
   Var 16.66 16.87 16.89
Profiling takes 3.355 s
*** Node 0, starting model training...
*** Node 1, starting model training...
*** Node 2, starting model training...
*** Node 3, starting model training...
*** Node 4, starting model training...
*** Node 5, starting model training...
*** Node 6, starting model training...
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 57)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 29120
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 57)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 145604, Num Local Vertices: 29120
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 57)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 116483, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 57)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 203845, Num Local Vertices: 29120
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 57)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 58241, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 57)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 29120, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 57)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 87362, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 57)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 174724, Num Local Vertices: 29121
*** Node 7, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 57)...
+++++++++ Node 4 initializing the weights for op[0, 57)...
+++++++++ Node 1 initializing the weights for op[0, 57)...
+++++++++ Node 7 initializing the weights for op[0, 57)...
+++++++++ Node 3 initializing the weights for op[0, 57)...
+++++++++ Node 5 initializing the weights for op[0, 57)...
+++++++++ Node 2 initializing the weights for op[0, 57)...
+++++++++ Node 6 initializing the weights for op[0, 57)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 607420
Node 0, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 4.3945	TrainAcc 0.0338	ValidAcc 0.0325	TestAcc 0.0280	BestValid 0.0325
	Epoch 50:	Loss 0.8180	TrainAcc 0.8788	ValidAcc 0.8875	TestAcc 0.8876	BestValid 0.8875
****** Epoch Time (Excluding Evaluation Cost): 0.117 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 2.972 ms (Max: 4.729, Min: 0.033, Sum: 23.778)
Cluster-Wide Average, Compute: 36.313 ms (Max: 53.119, Min: 23.336, Sum: 290.500)
Cluster-Wide Average, Communication-Layer: 0.008 ms (Max: 0.009, Min: 0.007, Sum: 0.065)
Cluster-Wide Average, Bubble-Imbalance: 0.015 ms (Max: 0.016, Min: 0.014, Sum: 0.119)
Cluster-Wide Average, Communication-Graph: 76.149 ms (Max: 87.364, Min: 62.310, Sum: 609.190)
Cluster-Wide Average, Optimization: 1.273 ms (Max: 1.304, Min: 1.258, Sum: 10.188)
Cluster-Wide Average, Others: 0.650 ms (Max: 0.681, Min: 0.630, Sum: 5.199)
****** Breakdown Sum: 117.380 ms ******
Cluster-Wide Average, GPU Memory Consumption: 4.663 GB (Max: 5.096, Min: 4.585, Sum: 37.308)
Cluster-Wide Average, Graph-Level Communication Throughput: 27.452 Gbps (Max: 49.335, Min: 12.241, Sum: 219.612)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 1.810 GB
Weight-sync communication (cluster-wide, per-epoch): 0.008 GB
Total communication (cluster-wide, per-epoch): 1.818 GB
****** Accuracy Results ******
Highest valid_acc: 0.8875
Target test_acc: 0.8876
Epoch to reach the target acc: 49
[MPI Rank 0] Success 
[MPI Rank 1] Success 
[MPI Rank 4] Success 
[MPI Rank 2] Success 
[MPI Rank 5] Success 
[MPI Rank 3] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
