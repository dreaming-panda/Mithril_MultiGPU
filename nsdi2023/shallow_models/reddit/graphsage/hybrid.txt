Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
DONE MPI INITInitialized node 0 on machine gnerv7
DONE MPI INIT
Initialized node 1 on machine gnerv7
DONE MPI INIT
Initialized node 2 on machine gnerv7

Initialized node 3 on machine gnerv7
DONE MPI INIT
Initialized node 4 on machine gnerv8
DONE MPI INIT
Initialized node 5 on machine gnerv8
DONE MPI INIT
Initialized node 6 on machine gnerv8
DONE MPI INIT
Initialized node 7 on machine gnerv8
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 2.391 seconds.
Building the CSC structure...
        It takes 2.436 seconds.
Building the CSC structure...
        It takes 2.437 seconds.
Building the CSC structure...
        It takes 2.471 seconds.
Building the CSC structure...
        It takes 2.532 seconds.
Building the CSC structure...
        It takes 2.613 seconds.
Building the CSC structure...
        It takes 2.644 seconds.
Building the CSC structure...
        It takes 2.645 seconds.
Building the CSC structure...
        It takes 2.298 seconds.
        It takes 2.341 seconds.
        It takes 2.391 seconds.
        It takes 2.369 seconds.
        It takes 2.467 seconds.
        It takes 2.442 seconds.
        It takes 2.462 seconds.
        It takes 2.552 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.273 seconds.
Building the Label Vector...
        It takes 0.038 seconds.
        It takes 0.271 seconds.
Building the Label Vector...
        It takes 0.305 seconds.
Building the Label Vector...
        It takes 0.032 seconds.
        It takes 0.305 seconds.
Building the Label Vector...
        It takes 0.033 seconds.
        It takes 0.032 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.275 seconds.
Building the Label Vector...
        It takes 0.034 seconds.
        It takes 0.280 seconds.
Building the Label Vector...
        It takes 0.297 seconds.
Building the Label Vector...
        It takes 0.039 seconds.
        It takes 0.299 seconds.
Building the Label Vector...
        It takes 0.037 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/reddit/32_parts
The number of GCNII layers: 4
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
Number of classes: 41
Number of feature dimensions: 602
Number of vertices: 232965
Number of GPUs: 8
        It takes 0.035 seconds.
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
train nodes 153431, valid nodes 23831, test nodes 55703
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 7497) 1-[7497, 14564) 2-[14564, 21631) 3-[21631, 28706) 4-[28706, 35773) 5-[35773, 43271) 6-[43271, 50769) 7-[50769, 57836) 8-[57836, 65334) ... 31-[225467, 232965)
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
The layer-level communication performance: 58.165 Gbps (per GPU), 465.317 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 57.889 Gbps (per GPU), 463.108 Gbps (aggregated)
The layer-level communication performance: 57.899 Gbps (per GPU), 463.194 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 57.652 Gbps (per GPU), 461.219 Gbps (aggregated)
The layer-level communication performance: 57.639 Gbps (per GPU), 461.111 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 57.438 Gbps (per GPU), 459.506 Gbps (aggregated)
The layer-level communication performance: 57.374 Gbps (per GPU), 458.992 Gbps (aggregated)
The layer-level communication performance: 57.358 Gbps (per GPU), 458.863 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.344 Gbps (per GPU), 1266.755 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.308 Gbps (per GPU), 1266.468 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.353 Gbps (per GPU), 1266.826 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.353 Gbps (per GPU), 1266.826 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.422 Gbps (per GPU), 1267.377 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.341 Gbps (per GPU), 1266.731 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.347 Gbps (per GPU), 1266.779 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.350 Gbps (per GPU), 1266.803 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 104.637 Gbps (per GPU), 837.096 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.639 Gbps (per GPU), 837.110 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.626 Gbps (per GPU), 837.005 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.636 Gbps (per GPU), 837.089 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.635 Gbps (per GPU), 837.082 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.635 Gbps (per GPU), 837.082 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.636 Gbps (per GPU), 837.089 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.590 Gbps (per GPU), 836.720 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 39.415 Gbps (per GPU), 315.317 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.415 Gbps (per GPU), 315.317 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.415 Gbps (per GPU), 315.317 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.414 Gbps (per GPU), 315.309 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.415 Gbps (per GPU), 315.316 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.414 Gbps (per GPU), 315.311 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.406 Gbps (per GPU), 315.252 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.405 Gbps (per GPU), 315.244 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  4.30ms  3.50ms  3.32ms  1.29  7.50K  5.22M
 chk_1  4.27ms  3.53ms  3.40ms  1.25  7.07K  5.00M
 chk_2  3.38ms  2.66ms  2.53ms  1.34  7.07K  3.66M
 chk_3  2.97ms  2.26ms  2.12ms  1.40  7.08K  3.05M
 chk_4  4.37ms  3.66ms  3.53ms  1.24  7.07K  5.22M
 chk_5  7.15ms  6.34ms  6.24ms  1.15  7.50K  9.29M
 chk_6  4.97ms  4.21ms  4.07ms  1.22  7.50K  6.01M
 chk_7  4.15ms  4.08ms  3.30ms  1.26  7.07K  4.64M
 chk_8  2.84ms  2.04ms  1.94ms  1.46  7.50K  2.67M
 chk_9  3.10ms  2.37ms  2.23ms  1.39  7.07K  3.20M
chk_10  2.82ms  2.08ms  1.93ms  1.46  7.12K  2.85M
chk_11  2.58ms  1.82ms  1.67ms  1.55  7.50K  2.35M
chk_12  5.57ms  4.84ms  4.68ms  1.19  7.50K  5.46M
chk_13  3.09ms  2.41ms  2.26ms  1.37  7.07K  3.20M
chk_14  3.08ms  2.36ms  2.20ms  1.40  7.50K  2.88M
chk_15  3.02ms  2.28ms  2.13ms  1.42  7.50K  3.06M
chk_16  2.89ms  2.18ms  2.03ms  1.42  7.50K  2.97M
chk_17  2.40ms  1.69ms  1.54ms  1.57  7.50K  1.98M
chk_18  1.85ms  1.12ms  0.95ms  1.94  7.50K  1.01M
chk_19  1.92ms  1.20ms  1.03ms  1.86  7.50K  1.17M
chk_20  2.63ms  1.94ms  1.81ms  1.45  7.06K  2.46M
chk_21  2.83ms  2.14ms  2.01ms  1.41  7.07K  2.80M
chk_22  2.56ms  1.83ms  1.73ms  1.48  7.06K  2.32M
chk_23  4.13ms  3.37ms  3.92ms  1.23  7.50K  4.36M
chk_24  2.43ms  1.74ms  1.55ms  1.56  7.07K  2.03M
chk_25  2.60ms  1.90ms  1.73ms  1.50  7.45K  2.34M
chk_26  4.06ms  3.39ms  3.25ms  1.25  7.00K  5.06M
chk_27  4.19ms  3.49ms  3.37ms  1.24  7.07K  4.98M
chk_28  3.12ms  2.44ms  2.29ms  1.37  7.07K  3.20M
chk_29  4.29ms  3.56ms  3.45ms  1.24  7.50K  5.03M
chk_30  2.54ms  1.83ms  1.71ms  1.48  7.07K  2.21M
chk_31  2.83ms  2.10ms  1.99ms  1.42  7.50K  2.90M
   Avg  3.40  2.70  2.56
   Max  7.15  6.34  6.24
   Min  1.85  1.12  0.95
 Ratio  3.86  5.66  6.54
   Var  1.21  1.23  1.24
Profiling takes 3.252 s
*** Node 0, starting model training...
Num Stages: 2 / 2
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 0 owns the model-level partition [0, 18)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 57836
*** Node 1, starting model training...
Num Stages: 2 / 2
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 1 owns the model-level partition [0, 18)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 57836, Num Local Vertices: 58746
*** Node 2, starting model training...
Num Stages: 2 / 2
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 2 owns the model-level partition [0, 18)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 116582, Num Local Vertices: 58676
*** Node 3, starting model training...
Num Stages: 2 / 2
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 3 owns the model-level partition [0, 18)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 175258, Num Local Vertices: 57707
*** Node 5, starting model training...
Num Stages: 2 / 2
Node 5, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [18, 33)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 57836, Num Local Vertices: 58746
*** Node 6, starting model training...
Num Stages: 2 / 2
Node 6, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [18, 33)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 116582, Num Local Vertices: 58676
*** Node 7, starting model training...
Num Stages: 2 / 2
Node 7, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [18, 33)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 175258, Num Local Vertices: 57707
*** Node 4, starting model training...
Num Stages: 2 / 2
Node 4, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [18, 33)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 57836
*** Node 4, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
+++++++++ Node 3 initializing the weights for op[0, 18)...
+++++++++ Node 6 initializing the weights for op[18, 33)...
+++++++++ Node 7 initializing the weights for op[18, 33)...
+++++++++ Node 5 initializing the weights for op[18, 33)...
+++++++++ Node 4 initializing the weights for op[18, 33)...
+++++++++ Node 0 initializing the weights for op[0, 18)...
+++++++++ Node 1 initializing the weights for op[0, 18)...
+++++++++ Node 2 initializing the weights for op[0, 18)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 909120
Node 0, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 5.1239	TrainAcc 0.1578	ValidAcc 0.1588	TestAcc 0.1534	BestValid 0.1588
	Epoch 50:	Loss 0.9122	TrainAcc 0.8367	ValidAcc 0.8507	TestAcc 0.8479	BestValid 0.8507
****** Epoch Time (Excluding Evaluation Cost): 0.094 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 8.197 ms (Max: 10.501, Min: 5.949, Sum: 65.573)
Cluster-Wide Average, Compute: 41.097 ms (Max: 50.772, Min: 33.810, Sum: 328.778)
Cluster-Wide Average, Communication-Layer: 5.811 ms (Max: 6.750, Min: 4.856, Sum: 46.484)
Cluster-Wide Average, Bubble-Imbalance: 5.289 ms (Max: 8.596, Min: 2.292, Sum: 42.309)
Cluster-Wide Average, Communication-Graph: 29.818 ms (Max: 36.097, Min: 21.499, Sum: 238.542)
Cluster-Wide Average, Optimization: 1.079 ms (Max: 1.159, Min: 1.000, Sum: 8.630)
Cluster-Wide Average, Others: 2.858 ms (Max: 4.811, Min: 0.994, Sum: 22.862)
****** Breakdown Sum: 94.147 ms ******
Cluster-Wide Average, GPU Memory Consumption: 4.006 GB (Max: 5.044, Min: 3.530, Sum: 32.046)
Cluster-Wide Average, Graph-Level Communication Throughput: 54.381 Gbps (Max: 75.895, Min: 41.417, Sum: 435.049)
Cluster-Wide Average, Layer-Level Communication Throughput: 32.781 Gbps (Max: 38.114, Min: 27.420, Sum: 262.244)
Layer-level communication (cluster-wide, per-epoch): 0.174 GB
Graph-level communication (cluster-wide, per-epoch): 1.355 GB
Weight-sync communication (cluster-wide, per-epoch): 0.004 GB
Total communication (cluster-wide, per-epoch): 1.532 GB
****** Accuracy Results ******
Highest valid_acc: 0.8507
Target test_acc: 0.8479
Epoch to reach the target acc: 49
[MPI Rank 0] Success 
[MPI Rank 4] Success 
[MPI Rank 5] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
[MPI Rank 1] Success 
[MPI Rank 2] Success 
[MPI Rank 3] Success 
