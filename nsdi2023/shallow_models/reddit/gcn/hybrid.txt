Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
DONE MPI INIT
Initialized node 5 on machine gnerv8
DONE MPI INIT
Initialized node 6 on machine gnerv8
DONE MPI INIT
Initialized node 7 on machine gnerv8
Initialized node 4 on machine gnerv8
DONE MPI INIT
DONE MPI INIT
DONE MPI INIT
Initialized node 1 on machine gnerv7
DONE MPI INIT
Initialized node 3 on machine gnerv7
Initialized node 0 on machine gnerv7
Initialized node 2 on machine gnerv7
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 3.071 seconds.
Building the CSC structure...
        It takes 3.075 seconds.
Building the CSC structure...
        It takes 3.075 seconds.
Building the CSC structure...
        It takes 3.071 seconds.
Building the CSC structure...
        It takes 3.075 seconds.
Building the CSC structure...
        It takes 3.075 seconds.
Building the CSC structure...
        It takes 3.074 seconds.
Building the CSC structure...
        It takes 3.075 seconds.
Building the CSC structure...
        It takes 3.047 seconds.
        It takes 3.047 seconds.
        It takes 3.047 seconds.
        It takes 3.047 seconds.
        It takes 3.046 seconds.
        It takes 3.046 seconds.
        It takes 3.046 seconds.
        It takes 3.046 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 1.074 seconds.
        It takes 0.638 seconds.
        It takes 1.117 seconds.
        It takes 1.114 seconds.
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
        It takes 0.079 seconds.
        It takes 0.080 seconds.
        It takes 0.080 seconds.
        It takes 0.080 seconds.
        It takes 0.701 seconds.
        It takes 0.574 seconds.
Building the Label Vector...
Building the Label Vector...
        It takes 0.347 seconds.
Building the Label Vector...
        It takes 0.075 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/reddit/32_parts
The number of GCN layers: 4
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
Number of classes: 41
Number of feature dimensions: 602
Number of vertices: 232965
Number of GPUs: 8
        It takes 0.070 seconds.
        It takes 0.075 seconds.
        It takes 0.341 seconds.
Building the Label Vector...
        It takes 0.039 seconds.
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
train nodes 153431, valid nodes 23831, test nodes 55703
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 7497) 1-[7497, 14564) 2-[14564, 21631) 3-[21631, 28706) 4-[28706, 35773) 5-[35773, 43271) 6-[43271, 50769) 7-[50769, 57836) 8-[57836, 65334) ... 31-[225467, 232965)
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 2)
GPU 1, layer [2, 4)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 59.196 Gbps (per GPU), 473.565 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.914 Gbps (per GPU), 471.313 Gbps (aggregated)
The layer-level communication performance: 58.906 Gbps (per GPU), 471.250 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.646 Gbps (per GPU), 469.166 Gbps (aggregated)
The layer-level communication performance: 58.614 Gbps (per GPU), 468.911 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.406 Gbps (per GPU), 467.247 Gbps (aggregated)
The layer-level communication performance: 58.359 Gbps (per GPU), 466.870 Gbps (aggregated)
The layer-level communication performance: 58.327 Gbps (per GPU), 466.613 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 159.192 Gbps (per GPU), 1273.534 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.204 Gbps (per GPU), 1273.630 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.195 Gbps (per GPU), 1273.558 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.201 Gbps (per GPU), 1273.606 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.198 Gbps (per GPU), 1273.582 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.104 Gbps (per GPU), 1272.833 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.198 Gbps (per GPU), 1273.582 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.104 Gbps (per GPU), 1272.833 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 101.993 Gbps (per GPU), 815.946 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.994 Gbps (per GPU), 815.953 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.993 Gbps (per GPU), 815.946 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.995 Gbps (per GPU), 815.960 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.992 Gbps (per GPU), 815.933 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.996 Gbps (per GPU), 815.966 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.993 Gbps (per GPU), 815.946 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.994 Gbps (per GPU), 815.953 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 38.992 Gbps (per GPU), 311.937 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.991 Gbps (per GPU), 311.932 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.992 Gbps (per GPU), 311.933 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.992 Gbps (per GPU), 311.933 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.991 Gbps (per GPU), 311.930 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.990 Gbps (per GPU), 311.921 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.987 Gbps (per GPU), 311.895 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.980 Gbps (per GPU), 311.838 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  3.40ms  3.39ms  3.31ms  1.03  7.50K  5.22M
 chk_1  3.54ms  3.39ms  3.77ms  1.11  7.07K  5.00M
 chk_2  2.65ms  2.50ms  2.37ms  1.12  7.07K  3.66M
 chk_3  2.25ms  2.09ms  1.98ms  1.14  7.08K  3.05M
 chk_4  3.65ms  3.50ms  3.43ms  1.06  7.07K  5.22M
 chk_5  6.33ms  6.18ms  6.13ms  1.03  7.50K  9.29M
 chk_6  4.20ms  4.03ms  3.95ms  1.06  7.50K  6.01M
 chk_7  3.42ms  3.27ms  3.51ms  1.07  7.07K  4.64M
 chk_8  2.08ms  1.91ms  1.80ms  1.15  7.50K  2.67M
 chk_9  2.40ms  2.24ms  2.14ms  1.12  7.07K  3.20M
chk_10  2.08ms  1.93ms  1.84ms  1.13  7.12K  2.85M
chk_11  1.81ms  1.66ms  1.56ms  1.16  7.50K  2.35M
chk_12  4.83ms  4.65ms  4.56ms  1.06  7.50K  5.46M
chk_13  2.39ms  2.23ms  2.16ms  1.11  7.07K  3.20M
chk_14  2.34ms  2.17ms  2.07ms  1.13  7.50K  2.88M
chk_15  2.30ms  2.10ms  2.02ms  1.14  7.50K  3.06M
chk_16  2.18ms  2.00ms  1.92ms  1.13  7.50K  2.97M
chk_17  1.67ms  1.49ms  1.40ms  1.19  7.50K  1.98M
chk_18  1.10ms  0.92ms  0.82ms  1.35  7.50K  1.01M
chk_19  1.18ms  1.00ms  0.90ms  1.31  7.50K  1.17M
chk_20  1.94ms  1.77ms  1.69ms  1.15  7.06K  2.46M
chk_21  2.14ms  1.98ms  1.89ms  1.13  7.07K  2.80M
chk_22  1.84ms  1.69ms  1.60ms  1.15  7.06K  2.32M
chk_23  3.38ms  3.21ms  3.14ms  1.08  7.50K  4.36M
chk_24  1.72ms  1.56ms  1.47ms  1.17  7.07K  2.03M
chk_25  1.89ms  1.72ms  1.64ms  1.15  7.45K  2.34M
chk_26  3.42ms  3.27ms  3.21ms  1.06  7.00K  5.06M
chk_27  3.53ms  3.35ms  3.28ms  1.08  7.07K  4.98M
chk_28  2.47ms  2.26ms  2.17ms  1.14  7.07K  3.20M
chk_29  3.60ms  3.39ms  3.32ms  1.08  7.50K  5.03M
chk_30  1.83ms  1.67ms  1.55ms  1.18  7.07K  2.21M
chk_31  2.12ms  1.93ms  1.85ms  1.14  7.50K  2.90M
   Avg  2.68  2.51  2.45
   Max  6.33  6.18  6.13
   Min  1.10  0.92  0.82
 Ratio  5.75  6.74  7.51
   Var  1.18  1.20  1.27
Profiling takes 2.834 s
*** Node 0, starting model training...
Num Stages: 2 / 2
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 0 owns the model-level partition [0, 11)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 57836
*** Node 1, starting model training...
Num Stages: 2 / 2
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 1 owns the model-level partition [0, 11)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 57836, Num Local Vertices: 58746
*** Node 2, starting model training...
Num Stages: 2 / 2
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 2 owns the model-level partition [0, 11)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 116582, Num Local Vertices: 58676
*** Node 3, starting model training...
Num Stages: 2 / 2
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 3 owns the model-level partition [0, 11)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 175258, Num Local Vertices: 57707
*** Node 4, starting model training...
Num Stages: 2 / 2
Node 4, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [11, 20)
*** Node 4, constructing the helper classes...
*** Node 5, starting model training...
Num Stages: 2 / 2
Node 5, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [11, 20)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 57836, Num Local Vertices: 58746
Node 4, Local Vertex Begin: 0, Num Local Vertices: 57836
*** Node 6, starting model training...
Num Stages: 2 / 2
*** Node 7, starting model training...
Num Stages: 2 / 2
Node 7, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [11, 20)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 175258, Num Local Vertices: 57707
Node 6, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [11, 20)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 116582, Num Local Vertices: 58676
*** Node 1, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 11)...
+++++++++ Node 1 initializing the weights for op[0, 11)...
+++++++++ Node 4 initializing the weights for op[11, 20)...
+++++++++ Node 5 initializing the weights for op[11, 20)...
+++++++++ Node 6 initializing the weights for op[11, 20)...
+++++++++ Node 7 initializing the weights for op[11, 20)...
+++++++++ Node 2 initializing the weights for op[0, 11)...
+++++++++ Node 3 initializing the weights for op[0, 11)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 909120
Node 0, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 4, starting task scheduling...
*** Node 0, starting task scheduling...



*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 3.7065	TrainAcc 0.1245	ValidAcc 0.1044	TestAcc 0.1053	BestValid 0.1044
	Epoch 50:	Loss 0.8277	TrainAcc 0.8495	ValidAcc 0.8652	TestAcc 0.8606	BestValid 0.8652
****** Epoch Time (Excluding Evaluation Cost): 0.086 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 7.350 ms (Max: 9.892, Min: 4.884, Sum: 58.799)
Cluster-Wide Average, Compute: 35.048 ms (Max: 43.204, Min: 29.285, Sum: 280.386)
Cluster-Wide Average, Communication-Layer: 5.565 ms (Max: 6.650, Min: 4.467, Sum: 44.524)
Cluster-Wide Average, Bubble-Imbalance: 4.711 ms (Max: 6.056, Min: 3.736, Sum: 37.689)
Cluster-Wide Average, Communication-Graph: 29.728 ms (Max: 35.738, Min: 21.448, Sum: 237.826)
Cluster-Wide Average, Optimization: 0.823 ms (Max: 0.967, Min: 0.678, Sum: 6.586)
Cluster-Wide Average, Others: 2.794 ms (Max: 4.832, Min: 0.871, Sum: 22.356)
****** Breakdown Sum: 86.020 ms ******
Cluster-Wide Average, GPU Memory Consumption: 3.917 GB (Max: 4.694, Min: 3.538, Sum: 31.333)
Cluster-Wide Average, Graph-Level Communication Throughput: 54.861 Gbps (Max: 76.432, Min: 42.259, Sum: 438.891)
Cluster-Wide Average, Layer-Level Communication Throughput: 34.586 Gbps (Max: 41.454, Min: 27.831, Sum: 276.690)
Layer-level communication (cluster-wide, per-epoch): 0.174 GB
Graph-level communication (cluster-wide, per-epoch): 1.355 GB
Weight-sync communication (cluster-wide, per-epoch): 0.002 GB
Total communication (cluster-wide, per-epoch): 1.530 GB
****** Accuracy Results ******
Highest valid_acc: 0.8652
Target test_acc: 0.8606
Epoch to reach the target acc: 49
[MPI Rank 4] Success 
[MPI Rank 0] Success 
[MPI Rank 5] Success 
[MPI Rank 1] Success 
[MPI Rank 6] Success 
[MPI Rank 2] Success 
[MPI Rank 7] Success 
[MPI Rank 3] Success 
