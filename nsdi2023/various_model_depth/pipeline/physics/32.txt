Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
DONE MPI INIT
DONE MPI INIT
Initialized node 0 on machine gnerv7
DONE MPI INIT
Initialized node 1 on machine gnerv7
Initialized node 2 on machine gnerv7
DONE MPI INIT
Initialized node 3 on machine gnerv7
DONE MPI INITDONE MPI INIT
Initialized node 5 on machine gnerv8
DONE MPI INIT
Initialized node 6 on machine gnerv8
DONE MPI INIT
Initialized node 7 on machine gnerv8

Initialized node 4 on machine gnerv8
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.012 seconds.
Building the CSC structure...
        It takes 0.013 seconds.
Building the CSC structure...
        It takes 0.015 seconds.
Building the CSC structure...
        It takes 0.016 seconds.
Building the CSC structure...
        It takes 0.017 seconds.
Building the CSC structure...
        It takes 0.018 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
        It takes 0.012 seconds.
        It takes 0.013 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.014 seconds.
        It takes 0.012 seconds.
        It takes 0.012 seconds.
        It takes 0.012 seconds.
Building the Feature Vector...
        It takes 0.016 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.466 seconds.
Building the Label Vector...
        It takes 0.460 seconds.
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.003 seconds.
        It takes 0.509 seconds.
Building the Label Vector...
        It takes 0.512 seconds.
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.003 seconds.
        It takes 0.612 seconds.
Building the Label Vector...
        It takes 0.004 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/pipeline_parallel_datasets/physics/32_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
GCN hyper-parameter alpha: 0.100000
GCN hyper-parameter lambda: 0.500000
Number of classes: 5
Number of feature dimensions: 8415
Number of vertices: 34493
Number of GPUs: 8
        It takes 0.617 seconds.
Building the Label Vector...
        It takes 0.620 seconds.
        It takes 0.616 seconds.
Building the Label Vector...
Building the Label Vector...
        It takes 0.006 seconds.
        It takes 0.003 seconds.
        It takes 0.007 seconds.
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
train nodes 100, valid nodes 500, test nodes 1000
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 1025) 1-[1025, 2154) 2-[2154, 3262) 3-[3262, 4284) 4-[4284, 5334) 5-[5334, 6511) 6-[6511, 7597) 7-[7597, 8680) 8-[8680, 9764) ... 31-[33337, 34493)
34493, 530417, 530417
Number of vertices per chunk: 1078
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
The layer-level communication performance: 60.799 Gbps (per GPU), 486.393 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.510 Gbps (per GPU), 484.079 Gbps (aggregated)
The layer-level communication performance: 60.504 Gbps (per GPU), 484.033 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.232 Gbps (per GPU), 481.854 Gbps (aggregated)
The layer-level communication performance: 60.205 Gbps (per GPU), 481.642 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.970 Gbps (per GPU), 479.764 Gbps (aggregated)
The layer-level communication performance: 59.922 Gbps (per GPU), 479.375 Gbps (aggregated)
The layer-level communication performance: 59.893 Gbps (per GPU), 479.148 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.635 Gbps (per GPU), 1269.080 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.626 Gbps (per GPU), 1269.006 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.629 Gbps (per GPU), 1269.030 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.620 Gbps (per GPU), 1268.958 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.629 Gbps (per GPU), 1269.030 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.623 Gbps (per GPU), 1268.982 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.629 Gbps (per GPU), 1269.033 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.623 Gbps (per GPU), 1268.980 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 104.612 Gbps (per GPU), 836.894 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.611 Gbps (per GPU), 836.887 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.612 Gbps (per GPU), 836.894 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.611 Gbps (per GPU), 836.887 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.607 Gbps (per GPU), 836.859 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.592 Gbps (per GPU), 836.734 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.567 Gbps (per GPU), 836.532 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.546 Gbps (per GPU), 836.366 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 38.163 Gbps (per GPU), 305.300 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.161 Gbps (per GPU), 305.290 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.162 Gbps (per GPU), 305.294 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.160 Gbps (per GPU), 305.277 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.162 Gbps (per GPU), 305.297 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.162 Gbps (per GPU), 305.297 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.157 Gbps (per GPU), 305.259 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.161 Gbps (per GPU), 305.288 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  1.28ms  0.29ms  0.44ms  4.35  1.02K  0.02M
 chk_1  1.35ms  0.29ms  0.44ms  4.62  1.13K  0.01M
 chk_2  1.34ms  0.29ms  0.44ms  4.57  1.11K  0.01M
 chk_3  1.27ms  0.29ms  0.43ms  4.39  1.02K  0.02M
 chk_4  1.30ms  0.29ms  0.43ms  4.47  1.05K  0.02M
 chk_5  1.39ms  0.29ms  0.44ms  4.80  1.18K  0.01M
 chk_6  1.33ms  0.29ms  0.44ms  4.57  1.09K  0.02M
 chk_7  1.33ms  0.29ms  0.49ms  4.59  1.08K  0.02M
 chk_8  1.33ms  0.29ms  0.44ms  4.59  1.08K  0.01M
 chk_9  1.80ms  0.29ms  0.43ms  6.23  1.06K  0.02M
chk_10  1.30ms  0.29ms  0.44ms  4.49  1.04K  0.02M
chk_11  1.35ms  0.29ms  0.44ms  4.62  1.11K  0.01M
chk_12  1.35ms  0.29ms  0.44ms  4.58  1.11K  0.01M
chk_13  1.27ms  0.29ms  0.44ms  4.43  1.01K  0.02M
chk_14  1.34ms  0.29ms  0.43ms  4.60  1.09K  0.01M
chk_15  1.29ms  0.29ms  0.43ms  4.47  1.03K  0.02M
chk_16  1.24ms  0.29ms  0.43ms  4.31  0.98K  0.02M
chk_17  1.34ms  0.29ms  0.44ms  4.59  1.09K  0.01M
chk_18  1.29ms  0.29ms  0.44ms  4.45  1.04K  0.02M
chk_19  1.35ms  0.29ms  0.47ms  4.65  1.12K  0.01M
chk_20  1.35ms  0.29ms  0.44ms  4.62  1.13K  0.01M
chk_21  1.30ms  0.29ms  0.43ms  4.48  1.05K  0.02M
chk_22  1.35ms  0.29ms  0.47ms  4.59  1.11K  0.01M
chk_23  1.34ms  0.29ms  0.44ms  4.57  1.10K  0.01M
chk_24  1.27ms  0.29ms  0.43ms  4.40  1.02K  0.02M
chk_25  1.26ms  0.31ms  0.43ms  4.09  1.01K  0.02M
chk_26  1.36ms  0.31ms  0.44ms  4.37  1.12K  0.01M
chk_27  1.32ms  0.31ms  0.44ms  4.25  1.08K  0.02M
chk_28  1.32ms  0.31ms  0.44ms  4.19  1.07K  0.02M
chk_29  1.35ms  0.31ms  0.44ms  4.40  1.11K  0.01M
chk_30  1.33ms  0.31ms  0.47ms  4.32  1.10K  0.01M
chk_31  1.38ms  0.31ms  0.44ms  4.49  1.16K  0.01M
   Avg  1.34  0.29  0.44
   Max  1.80  0.31  0.49
   Min  1.24  0.29  0.43
 Ratio  1.46  1.09  1.14
   Var  0.01  0.00  0.00
Profiling takes 0.896 s
*** Node 0, starting model training...
Num Stages: 8 / 8
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 0 owns the model-level partition [0, 34)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 2, starting model training...
Num Stages: 8 / 8
Node 2, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 2, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 2 owns the model-level partition [62, 90)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 1, starting model training...
Num Stages: 8 / 8
*** Node 3, starting model training...
Num Stages: 8 / 8
Node 3, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 3, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 3 owns the model-level partition [90, 118)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 0, Num Local Vertices: 34493
Node 1, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 1, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 1 owns the model-level partition [34, 62)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 4, starting model training...
Num Stages: 8 / 8
*** Node 5, starting model training...
Num Stages: 8 / 8
Node 5, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 5, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 5 owns the model-level partition [146, 174)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 6, starting model training...
Num Stages: 8 / 8
Node 6, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 6, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 6 owns the model-level partition [174, 202)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 7, starting model training...
Num Stages: 8 / 8
Node 7, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [202, 233)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 0, Num Local Vertices: 34493
Node 4, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 4, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 4 owns the model-level partition [118, 146)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 0, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
+++++++++ Node 1 initializing the weights for op[34, 62)...
+++++++++ Node 3 initializing the weights for op[90, 118)...
+++++++++ Node 5 initializing the weights for op[146, 174)...
+++++++++ Node 7 initializing the weights for op[202, 233)...
+++++++++ Node 2 initializing the weights for op[62, 90)...
+++++++++ Node 0 initializing the weights for op[0, 34)...
+++++++++ Node 6 initializing the weights for op[174, 202)...
+++++++++ Node 4 initializing the weights for op[118, 146)...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 0
Node 0, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
Node 5, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 4, starting task scheduling...
*** Node 5, starting task scheduling...
*** Node 6, starting task scheduling...
*** Node 7, starting task scheduling...
*** Node 0, starting task scheduling...



The learning rate specified by the user: 0.001000000
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 2.1027	TrainAcc 0.6000	ValidAcc 0.2640	TestAcc 0.2830	BestValid 0.2640
	Epoch 50:	Loss 0.3415	TrainAcc 0.9700	ValidAcc 0.9440	TestAcc 0.9420	BestValid 0.9440
****** Epoch Time (Excluding Evaluation Cost): 0.110 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 17.467 ms (Max: 21.340, Min: 12.361, Sum: 139.732)
Cluster-Wide Average, Compute: 49.563 ms (Max: 86.293, Min: 42.183, Sum: 396.506)
Cluster-Wide Average, Communication-Layer: 10.456 ms (Max: 11.785, Min: 8.315, Sum: 83.652)
Cluster-Wide Average, Bubble-Imbalance: 31.108 ms (Max: 39.679, Min: 1.274, Sum: 248.865)
Cluster-Wide Average, Communication-Graph: 0.544 ms (Max: 0.731, Min: 0.451, Sum: 4.354)
Cluster-Wide Average, Optimization: 0.128 ms (Max: 0.330, Min: 0.096, Sum: 1.027)
Cluster-Wide Average, Others: 0.692 ms (Max: 1.580, Min: 0.450, Sum: 5.533)
****** Breakdown Sum: 109.959 ms ******
Cluster-Wide Average, GPU Memory Consumption: 2.624 GB (Max: 4.686, Min: 2.315, Sum: 20.989)
Cluster-Wide Average, Graph-Level Communication Throughput: -nan Gbps (Max: -nan, Min: -nan, Sum: -nan)
Cluster-Wide Average, Layer-Level Communication Throughput: 36.327 Gbps (Max: 41.901, Min: 25.919, Sum: 290.614)
Layer-level communication (cluster-wide, per-epoch): 0.360 GB
Graph-level communication (cluster-wide, per-epoch): 0.000 GB
Weight-sync communication (cluster-wide, per-epoch): 0.000 GB
Total communication (cluster-wide, per-epoch): 0.360 GB
****** Accuracy Results ******
Highest valid_acc: 0.9440
Target test_acc: 0.9420
Epoch to reach the target acc: 49
[MPI Rank 0] Success 
[MPI Rank 4] Success 
[MPI Rank 1] Success 
[MPI Rank 5] Success 
[MPI Rank 2] Success 
[MPI Rank 6] Success 
[MPI Rank 3] Success 
[MPI Rank 7] Success 
