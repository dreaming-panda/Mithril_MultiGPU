Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
DONE MPI INIT
DONE MPI INIT
DONE MPI INIT
Initialized node 2 on machine gnerv7
Initialized node 0 on machine gnerv7
Initialized node 1 on machine gnerv7
DONE MPI INIT
Initialized node 3 on machine gnerv7
DONE MPI INIT
DONE MPI INITDONE MPI INIT
Initialized node 6 on machine gnerv8
Initialized node 4 on machine gnerv8
DONE MPI INIT
Initialized node 7 on machine gnerv8

Initialized node 5 on machine gnerv8
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.012 seconds.
Building the CSC structure...
        It takes 0.012 seconds.
Building the CSC structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.016 seconds.
Building the CSC structure...
        It takes 0.016 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
        It takes 0.012 seconds.
        It takes 0.012 seconds.
        It takes 0.011 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.015 seconds.
Building the Feature Vector...
        It takes 0.012 seconds.
        It takes 0.016 seconds.
        It takes 0.014 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.451 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.467 seconds.
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.509 seconds.
Building the Label Vector...
        It takes 0.509 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.003 seconds.
        It takes 0.610 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/pipeline_parallel_datasets/physics/32_parts
The number of GCNII layers: 128
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
GCN hyper-parameter alpha: 0.100000
GCN hyper-parameter lambda: 0.500000
Number of classes: 5
Number of feature dimensions: 8415
Number of vertices: 34493
Number of GPUs: 8
        It takes 0.613 seconds.
Building the Label Vector...
        It takes 0.611 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.003 seconds.
        It takes 0.612 seconds.
Building the Label Vector...
        It takes 0.008 seconds.
GPU 0, layer [0, 17)
GPU 1, layer [17, 33)
GPU 2, layer [33, 49)
GPU 3, layer [49, 65)
GPU 4, layer [65, 81)
GPU 5, layer [81, 97)
GPU 6, layer [97, 113)
GPU 7, layer [113, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 17)
GPU 1, layer [17, 33)
GPU 2, layer [33, 49)
GPU 3, layer [49, 65)
GPU 4, layer [65, 81)
GPU 5, layer [81, 97)
GPU 6, layer [97, 113)
GPU 7, layer [113, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 17)
GPU 1, layer [17, 33)
GPU 2, layer [33, 49)
GPU 3, layer [49, 65)
GPU 4, layer [65, 81)
GPU 5, layer [81, 97)
GPU 6, layer [97, 113)
GPU 7, layer [113, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 17)
GPU 1, layer [17, 33)
GPU 2, layer [33, 49)
GPU 3, layer [49, 65)
GPU 4, layer [65, 81)
GPU 5, layer [81, 97)
GPU 6, layer [97, 113)
GPU 7, layer [113, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 17)
GPU 1, layer [17, 33)
GPU 2, layer [33, 49)
GPU 3, layer [49, 65)
GPU 4, layer [65, 81)
GPU 5, layer [81, 97)
GPU 6, layer [97, 113)
GPU 7, layer [113, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 17)
GPU 1, layer [17, 33)
GPU 2, layer [33, 49)
GPU 3, layer [49, 65)
GPU 4, layer [65, 81)
GPU 5, layer [81, 97)
GPU 6, layer [97, 113)
GPU 7, layer [113, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 17)
GPU 1, layer [17, 33)
GPU 2, layer [33, 49)
GPU 3, layer [49, 65)
GPU 4, layer [65, 81)
GPU 5, layer [81, 97)
GPU 6, layer [97, 113)
GPU 7, layer [113, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
train nodes 100, valid nodes 500, test nodes 1000
GPU 0, layer [0, 17)
GPU 1, layer [17, 33)
GPU 2, layer [33, 49)
GPU 3, layer [49, 65)
GPU 4, layer [65, 81)
GPU 5, layer [81, 97)
GPU 6, layer [97, 113)
GPU 7, layer [113, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 1025) 1-[1025, 2154) 2-[2154, 3262) 3-[3262, 4284) 4-[4284, 5334) 5-[5334, 6511) 6-[6511, 7597) 7-[7597, 8680) 8-[8680, 9764) ... 31-[33337, 34493)
34493, 530417, 530417
csr in-out ready !Start Cost Model Initialization...
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
The layer-level communication performance: 60.388 Gbps (per GPU), 483.103 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.084 Gbps (per GPU), 480.674 Gbps (aggregated)
The layer-level communication performance: 60.072 Gbps (per GPU), 480.575 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.820 Gbps (per GPU), 478.560 Gbps (aggregated)
The layer-level communication performance: 59.793 Gbps (per GPU), 478.343 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.564 Gbps (per GPU), 476.512 Gbps (aggregated)
The layer-level communication performance: 59.514 Gbps (per GPU), 476.110 Gbps (aggregated)
The layer-level communication performance: 59.484 Gbps (per GPU), 475.870 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 160.076 Gbps (per GPU), 1280.606 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.064 Gbps (per GPU), 1280.508 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.070 Gbps (per GPU), 1280.557 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.055 Gbps (per GPU), 1280.438 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.076 Gbps (per GPU), 1280.606 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.070 Gbps (per GPU), 1280.557 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.070 Gbps (per GPU), 1280.559 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.067 Gbps (per GPU), 1280.532 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 105.100 Gbps (per GPU), 840.802 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.100 Gbps (per GPU), 840.802 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.098 Gbps (per GPU), 840.788 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.099 Gbps (per GPU), 840.795 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.098 Gbps (per GPU), 840.781 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.098 Gbps (per GPU), 840.781 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.098 Gbps (per GPU), 840.787 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.034 Gbps (per GPU), 840.275 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 38.629 Gbps (per GPU), 309.030 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.631 Gbps (per GPU), 309.052 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.629 Gbps (per GPU), 309.035 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.630 Gbps (per GPU), 309.039 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.630 Gbps (per GPU), 309.042 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.628 Gbps (per GPU), 309.025 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.629 Gbps (per GPU), 309.035 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.628 Gbps (per GPU), 309.028 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  1.28ms  0.31ms  0.43ms  4.17  1.02K  0.02M
 chk_1  1.36ms  0.31ms  0.43ms  4.42  1.13K  0.01M
 chk_2  1.35ms  0.31ms  0.43ms  4.37  1.11K  0.01M
 chk_3  1.28ms  0.30ms  0.42ms  4.20  1.02K  0.02M
 chk_4  1.30ms  0.31ms  0.61ms  4.27  1.05K  0.02M
 chk_5  1.40ms  0.31ms  0.41ms  4.58  1.18K  0.01M
 chk_6  1.34ms  0.31ms  0.41ms  4.35  1.09K  0.02M
 chk_7  1.34ms  0.31ms  0.41ms  4.39  1.08K  0.02M
 chk_8  1.34ms  0.31ms  0.41ms  4.39  1.08K  0.01M
 chk_9  1.31ms  0.30ms  0.41ms  4.35  1.06K  0.02M
chk_10  1.31ms  0.30ms  0.40ms  4.30  1.04K  0.02M
chk_11  1.36ms  0.30ms  0.41ms  4.45  1.11K  0.01M
chk_12  1.36ms  0.31ms  0.41ms  4.44  1.11K  0.01M
chk_13  2.22ms  0.30ms  0.40ms  7.43  1.01K  0.02M
chk_14  1.34ms  0.31ms  0.41ms  4.37  1.09K  0.01M
chk_15  1.29ms  0.30ms  0.41ms  4.24  1.03K  0.02M
chk_16  1.24ms  0.30ms  0.40ms  4.14  0.98K  0.02M
chk_17  1.34ms  0.30ms  0.41ms  4.41  1.09K  0.01M
chk_18  1.30ms  0.31ms  0.41ms  4.26  1.04K  0.02M
chk_19  1.36ms  0.30ms  0.41ms  4.47  1.12K  0.01M
chk_20  1.36ms  0.31ms  0.41ms  4.46  1.13K  0.01M
chk_21  1.31ms  0.30ms  0.41ms  4.32  1.05K  0.02M
chk_22  1.36ms  0.31ms  0.41ms  4.43  1.11K  0.01M
chk_23  1.35ms  0.31ms  0.41ms  4.41  1.10K  0.01M
chk_24  1.28ms  0.30ms  0.41ms  4.25  1.02K  0.02M
chk_25  1.27ms  0.30ms  0.40ms  4.26  1.01K  0.02M
chk_26  1.36ms  0.31ms  0.41ms  4.45  1.12K  0.01M
chk_27  1.32ms  0.30ms  0.41ms  4.35  1.08K  0.02M
chk_28  1.32ms  0.31ms  0.41ms  4.27  1.07K  0.02M
chk_29  1.35ms  0.30ms  0.41ms  4.45  1.11K  0.01M
chk_30  1.34ms  0.31ms  0.41ms  4.37  1.10K  0.01M
chk_31  1.39ms  0.30ms  0.41ms  4.57  1.16K  0.01M
   Avg  1.36  0.30  0.42
   Max  2.22  0.31  0.61
   Min  1.24  0.30  0.40
 Ratio  1.79  1.04  1.52
   Var  0.03  0.00  0.00
Profiling takes 0.899 s
*** Node 0, starting model training...
Num Stages: 8 / 8
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 0 owns the model-level partition [0, 118)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 3, starting model training...
Num Stages: 8 / 8
Node 3, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 3, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 3 owns the model-level partition [342, 454)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 1, starting model training...
Num Stages: 8 / 8
*** Node 2, starting model training...
Num Stages: 8 / 8
Node 2, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 2, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 2 owns the model-level partition [230, 342)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 34493
Node 1, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 1, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 1 owns the model-level partition [118, 230)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 4, starting model training...
Num Stages: 8 / 8
Node 4, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 4, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 5, starting model training...
Num Stages: 8 / 8
Node 5, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 5, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 5 owns the model-level partition [566, 678)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 6, starting model training...
Num Stages: 8 / 8
Node 6, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 6, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 6 owns the model-level partition [678, 790)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 7, starting model training...
Num Stages: 8 / 8
Node 7, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [790, 905)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 4 owns the model-level partition [454, 566)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 5, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
+++++++++ Node 4 initializing the weights for op[454, 566)...
+++++++++ Node 0 initializing the weights for op[0, 118)...
+++++++++ Node 3 initializing the weights for op[342, 454)...
+++++++++ Node 5 initializing the weights for op[566, 678)...
+++++++++ Node 7 initializing the weights for op[790, 905)...
+++++++++ Node 6 initializing the weights for op[678, 790)...
+++++++++ Node 1 initializing the weights for op[118, 230)...
+++++++++ Node 2 initializing the weights for op[230, 342)...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 0
Node 0, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******Node 4, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
Node 5, discovering the vertices that will be received across the graph boundary.

Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 6, starting task scheduling...
*** Node 0, starting task scheduling...



*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 2.8247	TrainAcc 0.7700	ValidAcc 0.6400	TestAcc 0.6640	BestValid 0.6400
	Epoch 50:	Loss 17.5603	TrainAcc 0.9300	ValidAcc 0.9260	TestAcc 0.9150	BestValid 0.9260
****** Epoch Time (Excluding Evaluation Cost): 0.255 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 43.628 ms (Max: 46.753, Min: 39.736, Sum: 349.027)
Cluster-Wide Average, Compute: 167.955 ms (Max: 200.870, Min: 157.249, Sum: 1343.641)
Cluster-Wide Average, Communication-Layer: 10.688 ms (Max: 12.289, Min: 8.576, Sum: 85.501)
Cluster-Wide Average, Bubble-Imbalance: 28.443 ms (Max: 40.717, Min: 1.396, Sum: 227.543)
Cluster-Wide Average, Communication-Graph: 2.078 ms (Max: 2.476, Min: 1.811, Sum: 16.626)
Cluster-Wide Average, Optimization: 0.381 ms (Max: 0.594, Min: 0.345, Sum: 3.051)
Cluster-Wide Average, Others: 1.699 ms (Max: 2.498, Min: 1.551, Sum: 13.590)
****** Breakdown Sum: 254.872 ms ******
Cluster-Wide Average, GPU Memory Consumption: 6.606 GB (Max: 9.380, Min: 6.196, Sum: 52.847)
Cluster-Wide Average, Graph-Level Communication Throughput: -nan Gbps (Max: -nan, Min: -nan, Sum: -nan)
Cluster-Wide Average, Layer-Level Communication Throughput: 35.575 Gbps (Max: 41.929, Min: 25.527, Sum: 284.596)
Layer-level communication (cluster-wide, per-epoch): 0.360 GB
Graph-level communication (cluster-wide, per-epoch): 0.000 GB
Weight-sync communication (cluster-wide, per-epoch): 0.000 GB
Total communication (cluster-wide, per-epoch): 0.360 GB
****** Accuracy Results ******
Highest valid_acc: 0.9260
Target test_acc: 0.9150
Epoch to reach the target acc: 49
[MPI Rank 0] Success 
[MPI Rank 4] Success 
[MPI Rank 1] Success 
[MPI Rank 5] Success 
[MPI Rank 2] Success 
[MPI Rank 6] Success 
[MPI Rank 3] Success 
[MPI Rank 7] Success 
