Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
DONE MPI INIT
DONE MPI INIT
Initialized node 0 on machine gnerv7
Initialized node 3 on machine gnerv7
DONE MPI INIT
DONE MPI INIT
Initialized node 1 on machine gnerv7
Initialized node 2 on machine gnerv7
DONE MPI INITDONE MPI INIT
Initialized node 7 on machine gnerv8
DONE MPI INIT
Initialized node 4 on machine gnerv8
DONE MPI INIT
Initialized node 5 on machine gnerv8

Initialized node 6 on machine gnerv8
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.020 seconds.
Building the CSC structure...
        It takes 0.022 seconds.
Building the CSC structure...
        It takes 0.025 seconds.
Building the CSC structure...
        It takes 0.028 seconds.
Building the CSC structure...
        It takes 0.028 seconds.
Building the CSC structure...
        It takes 0.028 seconds.
Building the CSC structure...
        It takes 0.020 seconds.
        It takes 0.020 seconds.
        It takes 0.020 seconds.
        It takes 0.021 seconds.
        It takes 0.020 seconds.
        It takes 0.020 seconds.
        It takes 0.020 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.021 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.104 seconds.
Building the Label Vector...
        It takes 0.101 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.113 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.109 seconds.
Building the Label Vector...
        It takes 0.108 seconds.
Building the Label Vector...
        It takes 0.120 seconds.
Building the Label Vector...
        It takes 0.008 seconds.
        It takes 0.006 seconds.
        It takes 0.007 seconds.
        It takes 0.121 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.121 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/pipeline_parallel_datasets/flickr/32_parts
The number of GCNII layers: 128
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
GCN hyper-parameter alpha: 0.100000
GCN hyper-parameter lambda: 0.500000
Number of classes: 7
Number of feature dimensions: 500
Number of vertices: 89250
Number of GPUs: 8
        It takes 0.008 seconds.
GPU 0, layer [0, 17)
GPU 1, layer [17, 33)
GPU 2, layer [33, 49)
GPU 3, layer [49, 65)
GPU 4, layer [65, 81)
GPU 5, layer [81, 97)
GPU 6, layer [97, 113)
GPU 7, layer [113, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 17)
GPU 1, layer [17, 33)
GPU 2, layer [33, 49)
GPU 3, layer [49, 65)
GPU 4, layer [65, 81)
GPU 5, layer [81, 97)
GPU 6, layer [97, 113)
GPU 7, layer [113, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
89250, 989006, 989006
Number of vertices per chunk: 2790
Number of vertices per chunk: 2790
GPU 0, layer [0, 17)
GPU 1, layer [17, 33)
GPU 2, layer [33, 49)
GPU 3, layer [49, 65)
GPU 4, layer [65, 81)
GPU 5, layer [81, 97)
GPU 6, layer [97, 113)
GPU 7, layer [113, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
89250, 989006, 989006
Number of vertices per chunk: 2790
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 17)
GPU 1, layer [17, 33)
GPU 2, layer [33, 49)
GPU 3, layer [49, 65)
GPU 4, layer [65, 81)
GPU 5, layer [81, 97)
GPU 6, layer [97, 113)
GPU 7, layer [113, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 17)
GPU 1, layer [17, 33)
GPU 2, layer [33, 49)
GPU 3, layer [49, 65)
GPU 4, layer [65, 81)
GPU 5, layer [81, 97)
GPU 6, layer [97, 113)
GPU 7, layer [113, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 17)
GPU 1, layer [17, 33)
GPU 2, layer [33, 49)
GPU 3, layer [49, 65)
GPU 4, layer [65, 81)
GPU 5, layer [81, 97)
GPU 6, layer [97, 113)
GPU 7, layer [113, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 17)
GPU 1, layer [17, 33)
GPU 2, layer [33, 49)
GPU 3, layer [49, 65)
GPU 4, layer [65, 81)
GPU 5, layer [81, 97)
GPU 6, layer [97, 113)
GPU 7, layer [113, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
89250, 989006, 989006
Number of vertices per chunk: 2790
Number of vertices per chunk: 2790
89250, 989006, 989006
Number of vertices per chunk: 2790
89250, 989006, 989006
Number of vertices per chunk: 2790
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
train nodes 44625, valid nodes 22312, test nodes 22313
GPU 0, layer [0, 17)
GPU 1, layer [17, 33)
GPU 2, layer [33, 49)
GPU 3, layer [49, 65)
GPU 4, layer [65, 81)
GPU 5, layer [81, 97)
GPU 6, layer [97, 113)
GPU 7, layer [113, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 2809) 1-[2809, 5626) 2-[5626, 8426) 3-[8426, 11230) 4-[11230, 14047) 5-[14047, 16800) 6-[16800, 19507) 7-[19507, 22266) 8-[22266, 25059) ... 31-[86469, 89250)
89250, 989006, 989006
Number of vertices per chunk: 2790
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
The layer-level communication performance: 60.510 Gbps (per GPU), 484.083 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.216 Gbps (per GPU), 481.729 Gbps (aggregated)
The layer-level communication performance: 60.217 Gbps (per GPU), 481.738 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.959 Gbps (per GPU), 479.676 Gbps (aggregated)
The layer-level communication performance: 59.929 Gbps (per GPU), 479.430 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.717 Gbps (per GPU), 477.735 Gbps (aggregated)
The layer-level communication performance: 59.665 Gbps (per GPU), 477.322 Gbps (aggregated)
The layer-level communication performance: 59.636 Gbps (per GPU), 477.086 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 153.871 Gbps (per GPU), 1230.971 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 153.872 Gbps (per GPU), 1230.972 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 153.874 Gbps (per GPU), 1230.994 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 153.878 Gbps (per GPU), 1231.020 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 153.860 Gbps (per GPU), 1230.881 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 153.886 Gbps (per GPU), 1231.084 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 153.868 Gbps (per GPU), 1230.948 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 153.863 Gbps (per GPU), 1230.904 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 104.260 Gbps (per GPU), 834.079 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.262 Gbps (per GPU), 834.093 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.247 Gbps (per GPU), 833.975 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.249 Gbps (per GPU), 833.996 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.255 Gbps (per GPU), 834.037 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.257 Gbps (per GPU), 834.058 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.259 Gbps (per GPU), 834.072 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.259 Gbps (per GPU), 834.072 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 37.437 Gbps (per GPU), 299.499 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.438 Gbps (per GPU), 299.502 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.436 Gbps (per GPU), 299.489 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.436 Gbps (per GPU), 299.486 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.432 Gbps (per GPU), 299.457 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.433 Gbps (per GPU), 299.462 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.429 Gbps (per GPU), 299.434 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.430 Gbps (per GPU), 299.440 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  0.41ms  0.36ms  0.52ms  1.46  2.81K  0.03M
 chk_1  0.41ms  0.36ms  0.53ms  1.46  2.82K  0.03M
 chk_2  0.41ms  0.66ms  0.52ms  1.59  2.80K  0.03M
 chk_3  0.42ms  0.36ms  0.53ms  1.46  2.80K  0.03M
 chk_4  0.41ms  0.36ms  0.53ms  1.46  2.82K  0.03M
 chk_5  0.41ms  0.36ms  0.53ms  1.45  2.75K  0.03M
 chk_6  0.41ms  0.36ms  0.52ms  1.46  2.71K  0.03M
 chk_7  0.41ms  0.36ms  0.53ms  1.46  2.76K  0.03M
 chk_8  0.41ms  0.36ms  0.53ms  1.46  2.79K  0.03M
 chk_9  0.41ms  0.36ms  0.52ms  1.46  2.81K  0.03M
chk_10  0.41ms  0.36ms  0.52ms  1.46  2.81K  0.03M
chk_11  0.41ms  0.37ms  0.53ms  1.45  2.74K  0.03M
chk_12  0.41ms  0.36ms  0.53ms  1.45  2.76K  0.03M
chk_13  0.41ms  0.36ms  0.53ms  1.46  2.75K  0.03M
chk_14  0.41ms  0.36ms  0.52ms  1.46  2.81K  0.03M
chk_15  0.41ms  0.36ms  0.53ms  1.46  2.77K  0.03M
chk_16  0.41ms  0.36ms  0.52ms  1.46  2.78K  0.03M
chk_17  0.41ms  0.37ms  0.53ms  1.46  2.79K  0.03M
chk_18  0.42ms  0.37ms  0.53ms  1.45  2.82K  0.03M
chk_19  0.41ms  0.35ms  0.52ms  1.47  2.81K  0.03M
chk_20  0.41ms  0.36ms  0.53ms  1.46  2.77K  0.03M
chk_21  0.42ms  0.36ms  0.53ms  1.46  2.84K  0.02M
chk_22  0.41ms  0.36ms  0.52ms  1.46  2.78K  0.03M
chk_23  0.41ms  0.36ms  0.53ms  1.46  2.80K  0.03M
chk_24  0.41ms  0.36ms  0.52ms  1.46  2.80K  0.03M
chk_25  0.42ms  0.36ms  0.53ms  1.47  2.81K  0.03M
chk_26  0.41ms  0.46ms  0.53ms  1.27  2.81K  0.03M
chk_27  0.41ms  0.37ms  0.53ms  1.45  2.79K  0.03M
chk_28  0.41ms  0.37ms  0.53ms  1.44  2.77K  0.03M
chk_29  0.41ms  0.36ms  0.52ms  1.46  2.77K  0.03M
chk_30  0.41ms  0.37ms  0.53ms  1.45  2.80K  0.03M
chk_31  0.41ms  0.36ms  0.53ms  1.45  2.78K  0.03M
   Avg  0.41  0.37  0.53
   Max  0.42  0.66  0.53
   Min  0.41  0.35  0.52
 Ratio  1.03  1.86  1.03
   Var  0.00  0.00  0.00
Profiling takes 0.628 s
*** Node 0, starting model training...
Num Stages: 8 / 8
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 0 owns the model-level partition [0, 118)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 89250
*** Node 1, starting model training...
Num Stages: 8 / 8
*** Node 2, starting model training...
Num Stages: 8 / 8
*** Node 3, starting model training...
Num Stages: 8 / 8
Node 3, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 3, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 3 owns the model-level partition [342, 454)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 0, Num Local Vertices: 89250
Node 1, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 1, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 1 owns the model-level partition [118, 230)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 0, Num Local Vertices: 89250
*** Node 4, starting model training...
Num Stages: 8 / 8
Node 2, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 2, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 2 owns the model-level partition [230, 342)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 89250
*** Node 5, starting model training...
Num Stages: 8 / 8
Node 5, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 5, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 5 owns the model-level partition [566, 678)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 0, Num Local Vertices: 89250
*** Node 6, starting model training...
Num Stages: 8 / 8
Node 6, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 6, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 6 owns the model-level partition [678, 790)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 0, Num Local Vertices: 89250
*** Node 7, starting model training...
Num Stages: 8 / 8
Node 7, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [790, 905)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 0, Num Local Vertices: 89250
Node 4, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 4, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 4 owns the model-level partition [454, 566)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 89250
*** Node 1, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
+++++++++ Node 3 initializing the weights for op[342, 454)...
+++++++++ Node 4 initializing the weights for op[454, 566)...
+++++++++ Node 0 initializing the weights for op[0, 118)...
+++++++++ Node 5 initializing the weights for op[566, 678)...
+++++++++ Node 1 initializing the weights for op[118, 230)...
+++++++++ Node 6 initializing the weights for op[678, 790)...
+++++++++ Node 2 initializing the weights for op[230, 342)...
+++++++++ Node 7 initializing the weights for op[790, 905)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be received across the graph boundary.
The number of mirror vertices: 0
Node 0, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 4, starting task scheduling...
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000



The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 2.0459	TrainAcc 0.4217	ValidAcc 0.4262	TestAcc 0.4249	BestValid 0.4262
	Epoch 50:	Loss 1.6124	TrainAcc 0.4574	ValidAcc 0.4570	TestAcc 0.4565	BestValid 0.4570
****** Epoch Time (Excluding Evaluation Cost): 0.284 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 49.455 ms (Max: 51.009, Min: 48.332, Sum: 395.636)
Cluster-Wide Average, Compute: 195.629 ms (Max: 211.576, Min: 185.959, Sum: 1565.033)
Cluster-Wide Average, Communication-Layer: 21.001 ms (Max: 23.914, Min: 15.926, Sum: 168.007)
Cluster-Wide Average, Bubble-Imbalance: 12.174 ms (Max: 21.314, Min: 2.120, Sum: 97.390)
Cluster-Wide Average, Communication-Graph: 1.976 ms (Max: 2.541, Min: 1.633, Sum: 15.806)
Cluster-Wide Average, Optimization: 0.354 ms (Max: 0.379, Min: 0.341, Sum: 2.835)
Cluster-Wide Average, Others: 3.467 ms (Max: 6.171, Min: 3.039, Sum: 27.736)
****** Breakdown Sum: 284.055 ms ******
Cluster-Wide Average, GPU Memory Consumption: 8.421 GB (Max: 10.448, Min: 8.116, Sum: 67.368)
Cluster-Wide Average, Graph-Level Communication Throughput: -nan Gbps (Max: -nan, Min: -nan, Sum: -nan)
Cluster-Wide Average, Layer-Level Communication Throughput: 46.836 Gbps (Max: 54.430, Min: 32.977, Sum: 374.690)
Layer-level communication (cluster-wide, per-epoch): 0.931 GB
Graph-level communication (cluster-wide, per-epoch): 0.000 GB
Weight-sync communication (cluster-wide, per-epoch): 0.000 GB
Total communication (cluster-wide, per-epoch): 0.931 GB
****** Accuracy Results ******
Highest valid_acc: 0.4570
Target test_acc: 0.4565
Epoch to reach the target acc: 49
[MPI Rank 0] Success 
[MPI Rank 4] Success 
[MPI Rank 1] Success 
[MPI Rank 5] Success 
[MPI Rank 2] Success 
[MPI Rank 6] Success 
[MPI Rank 3] Success 
[MPI Rank 7] Success 
