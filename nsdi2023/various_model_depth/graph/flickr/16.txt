Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
DONE MPI INIT
DONE MPI INIT
DONE MPI INIT
Initialized node 3 on machine gnerv7
DONE MPI INIT
Initialized node 2 on machine gnerv7
Initialized node 0 on machine gnerv7
Initialized node 1 on machine gnerv7
DONE MPI INIT
Initialized node 6 on machine gnerv8
DONE MPI INIT
Initialized node 4 on machine gnerv8
DONE MPI INITDONE MPI INIT
Initialized node 7 on machine gnerv8

Initialized node 5 on machine gnerv8
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.021 seconds.
Building the CSC structure...
        It takes 0.025 seconds.
Building the CSC structure...
        It takes 0.024 seconds.
Building the CSC structure...
        It takes 0.026 seconds.
Building the CSC structure...
        It takes 0.029 seconds.
Building the CSC structure...
        It takes 0.028 seconds.
Building the CSC structure...
        It takes 0.020 seconds.
        It takes 0.021 seconds.
        It takes 0.021 seconds.
        It takes 0.020 seconds.
        It takes 0.021 seconds.
Building the Feature Vector...
        It takes 0.020 seconds.
        It takes 0.019 seconds.
Building the Feature Vector...
        It takes 0.019 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.100 seconds.
Building the Label Vector...
        It takes 0.106 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.008 seconds.
        It takes 0.107 seconds.
        It takes 0.107 seconds.
Building the Label Vector...
Building the Label Vector...
        It takes 0.117 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.007 seconds.
        It takes 0.113 seconds.
        It takes 0.114 seconds.
Building the Label Vector...
Building the Label Vector...
        It takes 0.007 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/flickr/8_parts
The number of GCNII layers: 16
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
GCN hyper-parameter alpha: 0.100000
GCN hyper-parameter lambda: 0.500000
Number of classes: 7
Number of feature dimensions: 500
Number of vertices: 89250
Number of GPUs: 8
        It takes 0.007 seconds.
        It takes 0.007 seconds.
        It takes 0.119 seconds.
Building the Label Vector...
        It takes 0.008 seconds.
GPU 0, layer [0, 17)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
Number of vertices per chunk: 11157
GPU 0, layer [0, 17)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
Number of vertices per chunk: 11157
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 17)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
Number of vertices per chunk: 11157
GPU 0, layer [0, 17)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 17)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 17)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
csr in-out ready !Start Cost Model Initialization...
89250, 989006, 989006
Number of vertices per chunk: 11157
Number of vertices per chunk: 11157
89250, 989006, 989006
Number of vertices per chunk: 11157
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 17)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
train nodes 44625, valid nodes 22312, test nodes 22313
GPU 0, layer [0, 17)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 11156) 1-[11156, 22313) 2-[22313, 33469) 3-[33469, 44625) 4-[44625, 55781) 5-[55781, 66937) 6-[66937, 78093) 7-[78093, 89250)
89250, 989006, 989006
Number of vertices per chunk: 11157
89250, 989006, 989006
Number of vertices per chunk: 11157
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
The layer-level communication performance: 58.944 Gbps (per GPU), 471.554 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.644 Gbps (per GPU), 469.148 Gbps (aggregated)
The layer-level communication performance: 58.638 Gbps (per GPU), 469.100 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.403 Gbps (per GPU), 467.225 Gbps (aggregated)
The layer-level communication performance: 58.376 Gbps (per GPU), 467.006 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.173 Gbps (per GPU), 465.388 Gbps (aggregated)
The layer-level communication performance: 58.126 Gbps (per GPU), 465.007 Gbps (aggregated)
The layer-level communication performance: 58.094 Gbps (per GPU), 464.754 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 160.262 Gbps (per GPU), 1282.100 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.265 Gbps (per GPU), 1282.123 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.271 Gbps (per GPU), 1282.172 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.262 Gbps (per GPU), 1282.098 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.262 Gbps (per GPU), 1282.098 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.259 Gbps (per GPU), 1282.074 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.253 Gbps (per GPU), 1282.025 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.262 Gbps (per GPU), 1282.098 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 48.165 Gbps (per GPU), 385.323 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 48.164 Gbps (per GPU), 385.311 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 48.166 Gbps (per GPU), 385.324 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 48.161 Gbps (per GPU), 385.289 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 48.164 Gbps (per GPU), 385.310 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 48.164 Gbps (per GPU), 385.310 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 48.143 Gbps (per GPU), 385.147 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 48.140 Gbps (per GPU), 385.117 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 37.105 Gbps (per GPU), 296.843 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.104 Gbps (per GPU), 296.831 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.106 Gbps (per GPU), 296.847 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.106 Gbps (per GPU), 296.850 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.103 Gbps (per GPU), 296.820 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.105 Gbps (per GPU), 296.841 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.098 Gbps (per GPU), 296.784 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.100 Gbps (per GPU), 296.804 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  0.97ms  0.80ms  0.96ms  1.22 11.16K  0.12M
 chk_1  0.97ms  0.81ms  0.97ms  1.20 11.16K  0.11M
 chk_2  0.97ms  0.78ms  0.93ms  1.25 11.16K  0.11M
 chk_3  0.97ms  0.92ms  0.90ms  1.09 11.16K  0.12M
 chk_4  0.97ms  0.81ms  0.96ms  1.20 11.16K  0.11M
 chk_5  0.97ms  0.80ms  0.95ms  1.22 11.16K  0.10M
 chk_6  0.97ms  0.80ms  0.96ms  1.22 11.16K  0.12M
 chk_7  0.97ms  0.81ms  0.96ms  1.20 11.16K  0.11M
   Avg  0.97  0.81  0.95
   Max  0.97  0.92  0.97
   Min  0.97  0.78  0.90
 Ratio  1.00  1.19  1.08
   Var  0.00  0.00  0.00
Profiling takes 0.349 s
*** Node 0, starting model training...
*** Node 1, starting model training...
*** Node 2, starting model training...
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 121)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 11156
*** Node 4, starting model training...
*** Node 3, starting model training...
*** Node 5, starting model training...
*** Node 6, starting model training...
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 121)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 11156, Num Local Vertices: 11157
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 121)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 66937, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 121)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 55781, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 121)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 78093, Num Local Vertices: 11157
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 121)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 44625, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 121)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 33469, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 121)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 22313, Num Local Vertices: 11156
*** Node 0, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 121)...
+++++++++ Node 1 initializing the weights for op[0, 121)...
+++++++++ Node 2 initializing the weights for op[0, 121)...
+++++++++ Node 3 initializing the weights for op[0, 121)...
+++++++++ Node 5 initializing the weights for op[0, 121)...
+++++++++ Node 7 initializing the weights for op[0, 121)...
+++++++++ Node 4 initializing the weights for op[0, 121)...
+++++++++ Node 6 initializing the weights for op[0, 121)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 192232
Node 0, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...
*** Node 1, starting task scheduling...
*** Node 2, starting task scheduling...
*** Node 3, starting task scheduling...



The learning rate specified by the user: 0.001000000
*** Node 4, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 3.1413	TrainAcc 0.0837	ValidAcc 0.0811	TestAcc 0.0799	BestValid 0.0811
	Epoch 50:	Loss 1.6458	TrainAcc 0.4277	ValidAcc 0.4302	TestAcc 0.4316	BestValid 0.4302
****** Epoch Time (Excluding Evaluation Cost): 0.079 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 0.189 ms (Max: 0.312, Min: 0.047, Sum: 1.511)
Cluster-Wide Average, Compute: 14.526 ms (Max: 14.897, Min: 13.848, Sum: 116.205)
Cluster-Wide Average, Communication-Layer: 0.008 ms (Max: 0.009, Min: 0.007, Sum: 0.062)
Cluster-Wide Average, Bubble-Imbalance: 0.015 ms (Max: 0.016, Min: 0.014, Sum: 0.119)
Cluster-Wide Average, Communication-Graph: 62.255 ms (Max: 62.823, Min: 61.768, Sum: 498.043)
Cluster-Wide Average, Optimization: 1.479 ms (Max: 1.492, Min: 1.469, Sum: 11.832)
Cluster-Wide Average, Others: 0.287 ms (Max: 0.308, Min: 0.278, Sum: 2.297)
****** Breakdown Sum: 78.759 ms ******
Cluster-Wide Average, GPU Memory Consumption: 2.748 GB (Max: 3.102, Min: 2.684, Sum: 21.985)
Cluster-Wide Average, Graph-Level Communication Throughput: 42.083 Gbps (Max: 51.299, Min: 16.610, Sum: 336.665)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 2.292 GB
Weight-sync communication (cluster-wide, per-epoch): 0.011 GB
Total communication (cluster-wide, per-epoch): 2.303 GB
****** Accuracy Results ******
Highest valid_acc: 0.4302
Target test_acc: 0.4316
Epoch to reach the target acc: 49
[MPI Rank 0] Success 
[MPI Rank 1] Success 
[MPI Rank 4] Success 
[MPI Rank 2] Success 
[MPI Rank 5] Success 
[MPI Rank 3] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
