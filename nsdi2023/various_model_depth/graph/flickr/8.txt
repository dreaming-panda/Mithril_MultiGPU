Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
DONE MPI INIT
Initialized node 0 on machine gnerv7
DONE MPI INIT
DONE MPI INIT
Initialized node 2 on machine gnerv7
DONE MPI INIT
Initialized node 6 on machine gnerv8
DONE MPI INIT
Initialized node 3 on machine gnerv7
DONE MPI INIT
Initialized node 7 on machine gnerv8
DONE MPI INIT
Initialized node 1 on machine gnerv7
DONE MPI INIT
Initialized node 4 on machine gnerv8
Initialized node 5 on machine gnerv8
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.020 seconds.
Building the CSC structure...
        It takes 0.018 seconds.
Building the CSC structure...
        It takes 0.024 seconds.
Building the CSC structure...
        It takes 0.020 seconds.
Building the CSC structure...
        It takes 0.021 seconds.
Building the CSC structure...
        It takes 0.027 seconds.
Building the CSC structure...
        It takes 0.027 seconds.
Building the CSC structure...
        It takes 0.028 seconds.
Building the CSC structure...
        It takes 0.021 seconds.
        It takes 0.019 seconds.
        It takes 0.020 seconds.
        It takes 0.021 seconds.
        It takes 0.020 seconds.
        It takes 0.022 seconds.
        It takes 0.023 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.021 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.104 seconds.
Building the Label Vector...
        It takes 0.102 seconds.
Building the Label Vector...
        It takes 0.108 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.007 seconds.
        It takes 0.118 seconds.
        It takes 0.007 seconds.
Building the Label Vector...
        It takes 0.106 seconds.
Building the Label Vector...
        It takes 0.117 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/flickr/8_parts
The number of GCNII layers: 8
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
GCN hyper-parameter alpha: 0.100000
GCN hyper-parameter lambda: 0.500000
Number of classes: 7
Number of feature dimensions: 500
Number of vertices: 89250
Number of GPUs: 8
        It takes 0.118 seconds.
Building the Label Vector...
        It takes 0.008 seconds.
        It takes 0.007 seconds.
        It takes 0.123 seconds.
Building the Label Vector...
        It takes 0.008 seconds.
        It takes 0.007 seconds.
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
Number of vertices per chunk: 11157
89250, 989006, 989006
Number of vertices per chunk: 11157
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
Number of vertices per chunk: 11157
89250, 989006, 989006
89250, 989006, 989006
Number of vertices per chunk: 11157
Number of vertices per chunk: 11157
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
89250, 989006, 989006
Number of vertices per chunk: 11157
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
train nodes 44625, valid nodes 22312, test nodes 22313
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 11156) 1-[11156, 22313) 2-[22313, 33469) 3-[33469, 44625) 4-[44625, 55781) 5-[55781, 66937) 6-[66937, 78093) 7-[78093, 89250)
89250, 989006, 989006
Number of vertices per chunk: 11157
GPU 0, layer [0, 9)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
Number of vertices per chunk: 11157
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 60.628 Gbps (per GPU), 485.026 Gbps (aggregated)
The layer-level communication performance: 60.623 Gbps (per GPU), 484.983 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.358 Gbps (per GPU), 482.864 Gbps (aggregated)
The layer-level communication performance: 60.325 Gbps (per GPU), 482.604 Gbps (aggregated)
The layer-level communication performance: 60.934 Gbps (per GPU), 487.472 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.089 Gbps (per GPU), 480.714 Gbps (aggregated)
The layer-level communication performance: 60.042 Gbps (per GPU), 480.333 Gbps (aggregated)
The layer-level communication performance: 60.009 Gbps (per GPU), 480.072 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.821 Gbps (per GPU), 1270.566 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.824 Gbps (per GPU), 1270.592 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.791 Gbps (per GPU), 1270.324 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.809 Gbps (per GPU), 1270.472 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.818 Gbps (per GPU), 1270.544 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.803 Gbps (per GPU), 1270.425 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.789 Gbps (per GPU), 1270.309 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.803 Gbps (per GPU), 1270.424 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 104.463 Gbps (per GPU), 835.706 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.459 Gbps (per GPU), 835.671 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.463 Gbps (per GPU), 835.706 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.462 Gbps (per GPU), 835.699 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.464 Gbps (per GPU), 835.712 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.463 Gbps (per GPU), 835.706 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.460 Gbps (per GPU), 835.679 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.462 Gbps (per GPU), 835.699 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 37.276 Gbps (per GPU), 298.210 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.276 Gbps (per GPU), 298.207 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.276 Gbps (per GPU), 298.209 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.276 Gbps (per GPU), 298.206 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.277 Gbps (per GPU), 298.218 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.277 Gbps (per GPU), 298.217 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.273 Gbps (per GPU), 298.184 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.272 Gbps (per GPU), 298.179 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  0.98ms  0.81ms  0.98ms  1.21 11.16K  0.12M
 chk_1  0.98ms  0.82ms  0.98ms  1.20 11.16K  0.11M
 chk_2  0.98ms  0.78ms  0.95ms  1.25 11.16K  0.11M
 chk_3  0.98ms  0.78ms  0.91ms  1.25 11.16K  0.12M
 chk_4  0.98ms  0.82ms  0.98ms  1.20 11.16K  0.11M
 chk_5  0.98ms  0.81ms  0.97ms  1.21 11.16K  0.10M
 chk_6  0.98ms  0.81ms  0.97ms  1.21 11.16K  0.12M
 chk_7  0.98ms  0.82ms  0.98ms  1.20 11.16K  0.11M
   Avg  0.98  0.81  0.97
   Max  0.98  0.82  0.98
   Min  0.98  0.78  0.91
 Ratio  1.00  1.05  1.08
   Var  0.00  0.00  0.00
Profiling takes 0.343 s
*** Node 0, starting model training...
*** Node 2, starting model training...
*** Node 1, starting model training...
*** Node 3, starting model training...
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 65)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 11156
*** Node 4, starting model training...
*** Node 5, starting model training...
*** Node 7, starting model training...
*** Node 6, starting model training...
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 65)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 55781, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 65)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 44625, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 65)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 22313, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 65)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 11156, Num Local Vertices: 11157
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 65)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 33469, Num Local Vertices: 11156
Num Stages: 1 / 1
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 65)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 78093, Num Local Vertices: 11157
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 65)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 66937, Num Local Vertices: 11156
*** Node 1, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 65)...
+++++++++ Node 5 initializing the weights for op[0, 65)...
+++++++++ Node 2 initializing the weights for op[0, 65)...
+++++++++ Node 6 initializing the weights for op[0, 65)...
+++++++++ Node 3 initializing the weights for op[0, 65)...
+++++++++ Node 4 initializing the weights for op[0, 65)...
+++++++++ Node 1 initializing the weights for op[0, 65)...
+++++++++ Node 7 initializing the weights for op[0, 65)...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 192232
Node 0, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 4, starting task scheduling...
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 2.9815	TrainAcc 0.2110	ValidAcc 0.2091	TestAcc 0.2097	BestValid 0.2091
	Epoch 50:	Loss 1.6314	TrainAcc 0.4577	ValidAcc 0.4581	TestAcc 0.4592	BestValid 0.4581
****** Epoch Time (Excluding Evaluation Cost): 0.040 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 0.187 ms (Max: 0.317, Min: 0.038, Sum: 1.498)
Cluster-Wide Average, Compute: 7.901 ms (Max: 8.048, Min: 7.523, Sum: 63.208)
Cluster-Wide Average, Communication-Layer: 0.008 ms (Max: 0.009, Min: 0.007, Sum: 0.063)
Cluster-Wide Average, Bubble-Imbalance: 0.015 ms (Max: 0.016, Min: 0.014, Sum: 0.118)
Cluster-Wide Average, Communication-Graph: 31.146 ms (Max: 31.424, Min: 30.844, Sum: 249.171)
Cluster-Wide Average, Optimization: 0.867 ms (Max: 0.873, Min: 0.858, Sum: 6.932)
Cluster-Wide Average, Others: 0.213 ms (Max: 0.230, Min: 0.202, Sum: 1.706)
****** Breakdown Sum: 40.337 ms ******
Cluster-Wide Average, GPU Memory Consumption: 2.109 GB (Max: 2.391, Min: 2.055, Sum: 16.872)
Cluster-Wide Average, Graph-Level Communication Throughput: 41.944 Gbps (Max: 50.753, Min: 16.580, Sum: 335.556)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 1.146 GB
Weight-sync communication (cluster-wide, per-epoch): 0.007 GB
Total communication (cluster-wide, per-epoch): 1.153 GB
****** Accuracy Results ******
Highest valid_acc: 0.4581
Target test_acc: 0.4592
Epoch to reach the target acc: 49
[MPI Rank 0] Success 
[MPI Rank 1] Success 
[MPI Rank 4] Success 
[MPI Rank 2] Success 
[MPI Rank 5] Success 
[MPI Rank 3] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
