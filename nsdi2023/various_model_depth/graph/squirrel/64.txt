Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
DONE MPI INIT
Initialized node 5 on machine gnerv4
DONE MPI INIT
Initialized node 6 on machine gnerv4
DONE MPI INIT
Initialized node 7 on machine gnerv4
DONE MPI INITDONE MPI INIT

DONE MPI INITDONE MPI INIT
Initialized node 3 on machine gnerv2
Initialized node 0 on machine gnerv2
Initialized node 4 on machine gnerv4

Initialized node 1 on machine gnerv2
DONE MPI INIT
Initialized node 2 on machine gnerv2
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.007 seconds.
Building the CSC structure...
        It takes 0.009 seconds.
Building the CSC structure...
        It takes 0.009 seconds.
Building the CSC structure...
        It takes 0.009 seconds.
Building the CSC structure...
        It takes 0.008 seconds.
Building the CSC structure...
        It takes 0.008 seconds.
Building the CSC structure...
        It takes 0.009 seconds.
Building the CSC structure...
        It takes 0.013 seconds.
Building the CSC structure...
        It takes 0.008 seconds.
        It takes 0.008 seconds.
        It takes 0.008 seconds.
        It takes 0.008 seconds.
        It takes 0.008 seconds.
Building the Feature Vector...
        It takes 0.014 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.008 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.016 seconds.
Building the Feature Vector...
        It takes 0.024 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.025 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.027 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/squirrel/8_parts
The number of GCNII layers: 64
The number of hidden units: 1000
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
GCN hyper-parameter alpha: 0.100000
GCN hyper-parameter lambda: 0.500000
Number of classes: 5
Number of feature dimensions: 2089
Number of vertices: 5201
Number of GPUs: 8
        It takes 0.024 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.028 seconds.
Building the Label Vector...
        It takes 0.033 seconds.
        It takes 0.000 seconds.
Building the Label Vector...
        It takes 0.024 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.000 seconds.
        It takes 0.031 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
GPU 0, layer [0, 65)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 651
GPU 0, layer [0, 65)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 651
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 65)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 65)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 651
5201, 401907, 401907
Number of vertices per chunk: 651
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
train nodes 2496, valid nodes 1664, test nodes 1041
GPU 0, layer [0, 65)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 651) 1-[651, 1301) 2-[1301, 1951) 3-[1951, 2601) 4-[2601, 3251) 5-[3251, 3901) 6-[3901, 4551) 7-[4551, 5201)
5201, 401907, 401907
Number of vertices per chunk: 651
GPU 0, layer [0, 65)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
5201, 401907, 401907
Number of vertices per chunk: 651
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 65)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
GPU 0, layer [0, 65)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Number of vertices per chunk: 651
5201, 401907, 401907
Number of vertices per chunk: 651
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 55.582 Gbps (per GPU), 444.655 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 55.332 Gbps (per GPU), 442.653 Gbps (aggregated)
The layer-level communication performance: 55.319 Gbps (per GPU), 442.554 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 55.365 Gbps (per GPU), 442.921 Gbps (aggregated)
The layer-level communication performance: 55.070 Gbps (per GPU), 440.563 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 54.868 Gbps (per GPU), 438.940 Gbps (aggregated)
The layer-level communication performance: 55.089 Gbps (per GPU), 440.708 Gbps (aggregated)
The layer-level communication performance: 54.796 Gbps (per GPU), 438.368 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 156.134 Gbps (per GPU), 1249.071 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.131 Gbps (per GPU), 1249.048 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.117 Gbps (per GPU), 1248.932 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.076 Gbps (per GPU), 1248.607 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.117 Gbps (per GPU), 1248.932 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.134 Gbps (per GPU), 1249.071 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.117 Gbps (per GPU), 1248.932 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.090 Gbps (per GPU), 1248.723 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 101.122 Gbps (per GPU), 808.976 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.124 Gbps (per GPU), 808.995 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.125 Gbps (per GPU), 809.002 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.124 Gbps (per GPU), 808.995 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.124 Gbps (per GPU), 808.995 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.122 Gbps (per GPU), 808.976 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.125 Gbps (per GPU), 809.002 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.124 Gbps (per GPU), 808.989 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 29.262 Gbps (per GPU), 234.099 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 29.264 Gbps (per GPU), 234.110 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 29.263 Gbps (per GPU), 234.103 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 29.264 Gbps (per GPU), 234.111 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 29.258 Gbps (per GPU), 234.065 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 29.262 Gbps (per GPU), 234.095 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 29.259 Gbps (per GPU), 234.075 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 29.258 Gbps (per GPU), 234.065 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  1.03ms  1.65ms  2.23ms  2.17  0.65K  0.22M
 chk_1  1.03ms  0.98ms  1.11ms  1.14  0.65K  0.05M
 chk_2  1.03ms  0.84ms  0.98ms  1.22  0.65K  0.02M
 chk_3  1.04ms  0.85ms  0.99ms  1.22  0.65K  0.02M
 chk_4  1.04ms  0.80ms  0.94ms  1.30  0.65K  0.01M
 chk_5  1.04ms  0.79ms  0.93ms  1.32  0.65K  0.01M
 chk_6  1.04ms  0.99ms  1.13ms  1.15  0.65K  0.06M
 chk_7  1.04ms  0.81ms  0.96ms  1.29  0.65K  0.01M
   Avg  1.04  0.96  1.16
   Max  1.04  1.65  2.23
   Min  1.03  0.79  0.93
 Ratio  1.02  2.08  2.39
   Var  0.00  0.07  0.17
Profiling takes 0.365 s
*** Node 0, starting model training...
*** Node 1, starting model training...
*** Node 4, starting model training...
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 457)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 651
*** Node 5, starting model training...
*** Node 2, starting model training...
*** Node 6, starting model training...
*** Node 3, starting model training...
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 457)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 2601, Num Local Vertices: 650
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 457)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 651, Num Local Vertices: 650
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 457)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 3251, Num Local Vertices: 650
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 457)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 1301, Num Local Vertices: 650
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 457)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 4551, Num Local Vertices: 650
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 457)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 3901, Num Local Vertices: 650
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 457)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 1951, Num Local Vertices: 650
*** Node 5, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
+++++++++ Node 4 initializing the weights for op[0, 457)...
+++++++++ Node 5 initializing the weights for op[0, 457)...
+++++++++ Node 1 initializing the weights for op[0, 457)...
+++++++++ Node 0 initializing the weights for op[0, 457)...
+++++++++ Node 2 initializing the weights for op[0, 457)...
+++++++++ Node 3 initializing the weights for op[0, 457)...
+++++++++ Node 7 initializing the weights for op[0, 457)...
+++++++++ Node 6 initializing the weights for op[0, 457)...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 11547
Node 0, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 4, starting task scheduling...
*** Node 0, starting task scheduling...



The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 1.6131	TrainAcc 0.2007	ValidAcc 0.2001	TestAcc 0.1969	BestValid 0.2001
	Epoch 50:	Loss 1.2036	TrainAcc 0.5413	ValidAcc 0.3071	TestAcc 0.2997	BestValid 0.3071
****** Epoch Time (Excluding Evaluation Cost): 0.382 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 0.440 ms (Max: 0.678, Min: 0.035, Sum: 3.517)
Cluster-Wide Average, Compute: 58.488 ms (Max: 88.588, Min: 51.279, Sum: 467.900)
Cluster-Wide Average, Communication-Layer: 0.008 ms (Max: 0.009, Min: 0.008, Sum: 0.067)
Cluster-Wide Average, Bubble-Imbalance: 0.016 ms (Max: 0.017, Min: 0.014, Sum: 0.125)
Cluster-Wide Average, Communication-Graph: 229.736 ms (Max: 237.021, Min: 200.128, Sum: 1837.885)
Cluster-Wide Average, Optimization: 91.321 ms (Max: 91.680, Min: 91.035, Sum: 730.571)
Cluster-Wide Average, Others: 1.802 ms (Max: 1.828, Min: 1.775, Sum: 14.412)
****** Breakdown Sum: 381.810 ms ******
Cluster-Wide Average, GPU Memory Consumption: 6.575 GB (Max: 7.260, Min: 6.464, Sum: 52.599)
Cluster-Wide Average, Graph-Level Communication Throughput: 27.567 Gbps (Max: 47.285, Min: 9.626, Sum: 220.537)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 5.506 GB
Weight-sync communication (cluster-wide, per-epoch): 3.447 GB
Total communication (cluster-wide, per-epoch): 8.953 GB
****** Accuracy Results ******
Highest valid_acc: 0.3071
Target test_acc: 0.2997
Epoch to reach the target acc: 49
[MPI Rank 0] Success 
[MPI Rank 4] Success 
[MPI Rank 1] Success 
[MPI Rank 5] Success 
[MPI Rank 2] Success 
[MPI Rank 6] Success 
[MPI Rank 3] Success 
[MPI Rank 7] Success 
