Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
DONE MPI INITDONE MPI INIT
Initialized node 3 on machine gnerv2
DONE MPI INIT
DONE MPI INIT
Initialized node 1 on machine gnerv2
Initialized node 0 on machine gnerv2

Initialized node 2 on machine gnerv2
DONE MPI INIT
DONE MPI INIT
Initialized node 6 on machine gnerv4
DONE MPI INIT
Initialized node 7 on machine gnerv4
Initialized node 5 on machine gnerv4
DONE MPI INIT
Initialized node 4 on machine gnerv4
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.009 seconds.
Building the CSC structure...
        It takes 0.008 seconds.
Building the CSC structure...
        It takes 0.009 seconds.
Building the CSC structure...
        It takes 0.008 seconds.
Building the CSC structure...
        It takes 0.009 seconds.
Building the CSC structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.014 seconds.
Building the CSC structure...
        It takes 0.006 seconds.
        It takes 0.008 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.011 seconds.
        It takes 0.014 seconds.
        It takes 0.009 seconds.
        It takes 0.014 seconds.
        It takes 0.013 seconds.
        It takes 0.017 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.024 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.027 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.025 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.024 seconds.
Building the Label Vector...
        It takes 0.026 seconds.
        It takes 0.000 seconds.
Building the Label Vector...
        It takes 0.027 seconds.
        It takes 0.000 seconds.
Building the Label Vector...
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/squirrel/8_parts
The number of GCNII layers: 128
The number of hidden units: 1000
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
GCN hyper-parameter alpha: 0.100000
GCN hyper-parameter lambda: 0.500000
Number of classes: 5
Number of feature dimensions: 2089
Number of vertices: 5201
Number of GPUs: 8
        It takes 0.000 seconds.
        It takes 0.029 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.032 seconds.
Building the Label Vector...
        It takes 0.001 seconds.
GPU 0, layer [0, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 651
5201, 401907, 401907
Number of vertices per chunk: 651
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
5201, 401907, 401907
Number of vertices per chunk: 651
Number of vertices per chunk: 651
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
train nodes 2496, valid nodes 1664, test nodes 1041
GPU 0, layer [0, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 651) 1-[651, 1301) 2-[1301, 1951) 3-[1951, 2601) 4-[2601, 3251) 5-[3251, 3901) 6-[3901, 4551) 7-[4551, 5201)
5201, 401907, 401907
Number of vertices per chunk: 651
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
GPU 0, layer [0, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 651
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 129)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 651
5201, 401907, 401907
Number of vertices per chunk: 651
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 59.447 Gbps (per GPU), 475.575 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.166 Gbps (per GPU), 473.329 Gbps (aggregated)
The layer-level communication performance: 59.155 Gbps (per GPU), 473.239 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.906 Gbps (per GPU), 471.245 Gbps (aggregated)
The layer-level communication performance: 58.877 Gbps (per GPU), 471.013 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.652 Gbps (per GPU), 469.218 Gbps (aggregated)
The layer-level communication performance: 58.609 Gbps (per GPU), 468.875 Gbps (aggregated)
The layer-level communication performance: 58.572 Gbps (per GPU), 468.578 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.097 Gbps (per GPU), 1264.773 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.100 Gbps (per GPU), 1264.797 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.109 Gbps (per GPU), 1264.868 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.109 Gbps (per GPU), 1264.868 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.088 Gbps (per GPU), 1264.702 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.094 Gbps (per GPU), 1264.749 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.103 Gbps (per GPU), 1264.825 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.088 Gbps (per GPU), 1264.702 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 102.431 Gbps (per GPU), 819.448 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.427 Gbps (per GPU), 819.419 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.430 Gbps (per GPU), 819.440 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.432 Gbps (per GPU), 819.453 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.433 Gbps (per GPU), 819.467 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.432 Gbps (per GPU), 819.453 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.433 Gbps (per GPU), 819.460 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.431 Gbps (per GPU), 819.447 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 30.563 Gbps (per GPU), 244.502 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.562 Gbps (per GPU), 244.493 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.856 Gbps (per GPU), 246.851 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.559 Gbps (per GPU), 244.472 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.855 Gbps (per GPU), 246.837 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.558 Gbps (per GPU), 244.466 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.559 Gbps (per GPU), 244.469 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.556 Gbps (per GPU), 244.448 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  1.02ms  1.65ms  1.78ms  1.75  0.65K  0.22M
 chk_1  1.01ms  0.95ms  1.09ms  1.14  0.65K  0.05M
 chk_2  1.01ms  0.82ms  0.95ms  1.23  0.65K  0.02M
 chk_3  1.02ms  0.84ms  0.97ms  1.22  0.65K  0.02M
 chk_4  1.03ms  0.79ms  0.91ms  1.31  0.65K  0.01M
 chk_5  1.03ms  0.78ms  0.91ms  1.32  0.65K  0.01M
 chk_6  1.03ms  0.98ms  1.10ms  1.13  0.65K  0.06M
 chk_7  1.03ms  0.80ms  0.93ms  1.30  0.65K  0.01M
   Avg  1.02  0.95  1.08
   Max  1.03  1.65  1.78
   Min  1.01  0.78  0.91
 Ratio  1.02  2.12  1.96
   Var  0.00  0.07  0.07
Profiling takes 0.354 s
*** Node 0, starting model training...
*** Node 1, starting model training...
*** Node 2, starting model training...
*** Node 3, starting model training...
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 905)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 651
*** Node 4, starting model training...
*** Node 5, starting model training...
*** Node 6, starting model training...
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 905)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 3901, Num Local Vertices: 650
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 905)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 1951, Num Local Vertices: 650
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 905)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 3251, Num Local Vertices: 650
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 905)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 2601, Num Local Vertices: 650
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 905)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 4551, Num Local Vertices: 650
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 905)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 1301, Num Local Vertices: 650
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 905)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 651, Num Local Vertices: 650
*** Node 5, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 905)...
+++++++++ Node 5 initializing the weights for op[0, 905)...
+++++++++ Node 1 initializing the weights for op[0, 905)...
+++++++++ Node 4 initializing the weights for op[0, 905)...
+++++++++ Node 3 initializing the weights for op[0, 905)...
+++++++++ Node 7 initializing the weights for op[0, 905)...
+++++++++ Node 6 initializing the weights for op[0, 905)...
+++++++++ Node 2 initializing the weights for op[0, 905)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 11547
Node 0, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...
*** Node 4, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000



The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 1.6117	TrainAcc 0.2003	ValidAcc 0.2007	TestAcc 0.1979	BestValid 0.2007
	Epoch 50:	Loss 1.2193	TrainAcc 0.5361	ValidAcc 0.2927	TestAcc 0.2872	BestValid 0.2927
****** Epoch Time (Excluding Evaluation Cost): 0.754 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 0.408 ms (Max: 0.718, Min: 0.037, Sum: 3.262)
Cluster-Wide Average, Compute: 114.983 ms (Max: 174.308, Min: 100.461, Sum: 919.862)
Cluster-Wide Average, Communication-Layer: 0.008 ms (Max: 0.009, Min: 0.008, Sum: 0.064)
Cluster-Wide Average, Bubble-Imbalance: 0.014 ms (Max: 0.015, Min: 0.013, Sum: 0.115)
Cluster-Wide Average, Communication-Graph: 455.475 ms (Max: 469.868, Min: 396.726, Sum: 3643.799)
Cluster-Wide Average, Optimization: 178.652 ms (Max: 179.264, Min: 178.032, Sum: 1429.219)
Cluster-Wide Average, Others: 3.484 ms (Max: 3.510, Min: 3.457, Sum: 27.870)
****** Breakdown Sum: 753.024 ms ******
Cluster-Wide Average, GPU Memory Consumption: 11.898 GB (Max: 13.071, Min: 11.717, Sum: 95.187)
Cluster-Wide Average, Graph-Level Communication Throughput: 27.876 Gbps (Max: 47.884, Min: 9.691, Sum: 223.009)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 11.012 GB
Weight-sync communication (cluster-wide, per-epoch): 6.785 GB
Total communication (cluster-wide, per-epoch): 17.797 GB
****** Accuracy Results ******
Highest valid_acc: 0.2927
Target test_acc: 0.2872
Epoch to reach the target acc: 49
[MPI Rank 0] Success 
[MPI Rank 4] Success 
[MPI Rank 1] Success 
[MPI Rank 5] Success 
[MPI Rank 2] Success 
[MPI Rank 6] Success 
[MPI Rank 3] Success 
[MPI Rank 7] Success 
