Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
Initialized node 0 on machine gnerv7
DONE MPI INIT
Initialized node 1 on machine gnerv7
DONE MPI INIT
Initialized node 2 on machine gnerv7
DONE MPI INIT
Initialized node 3 on machine gnerv7
DONE MPI INIT
Initialized node 4 on machine gnerv8
DONE MPI INITDONE MPI INIT
Initialized node 7 on machine gnerv8
DONE MPI INIT
Initialized node 6 on machine gnerv8

Initialized node 5 on machine gnerv8
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.010 seconds.
        It takes 0.012 seconds.
        It takes 0.011 seconds.
        It takes 0.012 seconds.
        It takes 0.011 seconds.
        It takes 0.012 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.017 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.018 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.470 seconds.
        It takes 0.471 seconds.
Building the Label Vector...
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.002 seconds.
        It takes 0.507 seconds.
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.512 seconds.
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.603 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/physics/8_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 300
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 1
Number of classes: 5
Number of feature dimensions: 8415
Number of vertices: 34493
Number of GPUs: 8
        It takes 0.614 seconds.
Building the Label Vector...
        It takes 0.616 seconds.
Building the Label Vector...
        It takes 0.618 seconds.
        It takes 0.007 seconds.
        It takes 0.003 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
train nodes 100, valid nodes 500, test nodes 1000
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 4311) 1-[4311, 8623) 2-[8623, 12935) 3-[12935, 17247) 4-[17247, 21558) 5-[21558, 25870) 6-[25870, 30181) 7-[30181, 34493)
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 60.586 Gbps (per GPU), 484.688 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.279 Gbps (per GPU), 482.231 Gbps (aggregated)
The layer-level communication performance: 60.273 Gbps (per GPU), 482.184 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.007 Gbps (per GPU), 480.053 Gbps (aggregated)
The layer-level communication performance: 59.977 Gbps (per GPU), 479.815 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.754 Gbps (per GPU), 478.030 Gbps (aggregated)
The layer-level communication performance: 59.702 Gbps (per GPU), 477.615 Gbps (aggregated)
The layer-level communication performance: 59.671 Gbps (per GPU), 477.369 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.530 Gbps (per GPU), 1268.239 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.524 Gbps (per GPU), 1268.191 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.473 Gbps (per GPU), 1267.784 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.521 Gbps (per GPU), 1268.167 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.530 Gbps (per GPU), 1268.239 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.506 Gbps (per GPU), 1268.047 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.470 Gbps (per GPU), 1267.764 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.509 Gbps (per GPU), 1268.071 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 104.362 Gbps (per GPU), 834.895 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.357 Gbps (per GPU), 834.854 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.360 Gbps (per GPU), 834.881 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.360 Gbps (per GPU), 834.881 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.362 Gbps (per GPU), 834.895 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.359 Gbps (per GPU), 834.868 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.361 Gbps (per GPU), 834.888 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.361 Gbps (per GPU), 834.888 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 39.180 Gbps (per GPU), 313.440 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.181 Gbps (per GPU), 313.445 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.178 Gbps (per GPU), 313.421 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.181 Gbps (per GPU), 313.446 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.176 Gbps (per GPU), 313.406 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.178 Gbps (per GPU), 313.425 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.177 Gbps (per GPU), 313.416 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.173 Gbps (per GPU), 313.381 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  5.98ms  0.51ms  0.32ms 18.65  4.31K  0.10M
 chk_1  6.49ms  0.50ms  0.32ms 20.15  4.31K  0.10M
 chk_2  6.01ms  0.48ms  0.31ms 19.37  4.31K  0.06M
 chk_3  6.04ms  0.48ms  0.31ms 19.64  4.31K  0.06M
 chk_4  6.02ms  0.46ms  0.29ms 20.97  4.31K  0.04M
 chk_5  6.00ms  0.46ms  0.28ms 21.08  4.31K  0.04M
 chk_6  6.15ms  0.46ms  0.28ms 21.98  4.31K  0.04M
 chk_7  6.02ms  0.46ms  0.29ms 20.91  4.31K  0.06M
   Avg  6.09  0.48  0.30
   Max  6.49  0.51  0.32
   Min  5.98  0.46  0.28
 Ratio  1.09  1.11  1.15
   Var  0.03  0.00  0.00
Profiling takes 0.701 s
*** Node 0, starting model training...
*** Node 2, starting model training...
*** Node 3, starting model training...
*** Node 4, starting model training...
*** Node 5, starting model training...
*** Node 1, starting model training...
*** Node 6, starting model training...
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 257)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 21558, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 257)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 8623, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 257)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 12935, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 257)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 4311
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 257)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 4311, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 257)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 30181, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 257)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 17247, Num Local Vertices: 4311
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 257)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 25870, Num Local Vertices: 4311
*** Node 5, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
+++++++++ Node 2 initializing the weights for op[0, 257)...
+++++++++ Node 1 initializing the weights for op[0, 257)...
+++++++++ Node 4 initializing the weights for op[0, 257)...
+++++++++ Node 5 initializing the weights for op[0, 257)...
+++++++++ Node 3 initializing the weights for op[0, 257)...
+++++++++ Node 6 initializing the weights for op[0, 257)...
+++++++++ Node 7 initializing the weights for op[0, 257)...
+++++++++ Node 0 initializing the weights for op[0, 257)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 34236
Node 0, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 1.9974	TrainAcc 0.2300	ValidAcc 0.5220	TestAcc 0.5290	BestValid 0.5220
	Epoch 10:	Loss 1.5979	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.5220
	Epoch 20:	Loss 1.5111	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.5220
	Epoch 30:	Loss 1.3875	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.5220
	Epoch 40:	Loss 1.3725	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.5220
	Epoch 50:	Loss 1.3543	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.5220
	Epoch 60:	Loss 1.3296	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.5220
	Epoch 70:	Loss 1.3169	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.5220
	Epoch 80:	Loss 1.3067	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.5220
	Epoch 90:	Loss 1.3027	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.5220
	Epoch 100:	Loss 1.2836	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.5220
	Epoch 110:	Loss 1.2620	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.5220
	Epoch 120:	Loss 1.2585	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.5220
	Epoch 130:	Loss 1.2523	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.5220
	Epoch 140:	Loss 1.2469	TrainAcc 0.2500	ValidAcc 0.1080	TestAcc 0.1270	BestValid 0.5220
	Epoch 150:	Loss 1.2543	TrainAcc 0.3000	ValidAcc 0.1340	TestAcc 0.1510	BestValid 0.5220
	Epoch 160:	Loss 1.2540	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.5220
	Epoch 170:	Loss 1.2543	TrainAcc 0.3200	ValidAcc 0.1500	TestAcc 0.1530	BestValid 0.5220
	Epoch 180:	Loss 1.2366	TrainAcc 0.2600	ValidAcc 0.1020	TestAcc 0.1100	BestValid 0.5220
	Epoch 190:	Loss 1.2409	TrainAcc 0.3200	ValidAcc 0.1280	TestAcc 0.1580	BestValid 0.5220
	Epoch 200:	Loss 1.2446	TrainAcc 0.3600	ValidAcc 0.1580	TestAcc 0.1560	BestValid 0.5220
	Epoch 210:	Loss 1.2271	TrainAcc 0.3600	ValidAcc 0.1520	TestAcc 0.1510	BestValid 0.5220
	Epoch 220:	Loss 1.2253	TrainAcc 0.3200	ValidAcc 0.1340	TestAcc 0.1390	BestValid 0.5220
	Epoch 230:	Loss 1.2395	TrainAcc 0.3700	ValidAcc 0.1580	TestAcc 0.1580	BestValid 0.5220
	Epoch 240:	Loss 1.2145	TrainAcc 0.2700	ValidAcc 0.1200	TestAcc 0.1420	BestValid 0.5220
	Epoch 250:	Loss 1.2067	TrainAcc 0.3100	ValidAcc 0.1300	TestAcc 0.1490	BestValid 0.5220
	Epoch 260:	Loss 1.1990	TrainAcc 0.3900	ValidAcc 0.1500	TestAcc 0.1510	BestValid 0.5220
	Epoch 270:	Loss 1.1702	TrainAcc 0.3800	ValidAcc 0.1560	TestAcc 0.1550	BestValid 0.5220
	Epoch 280:	Loss 1.2400	TrainAcc 0.3700	ValidAcc 0.1580	TestAcc 0.1560	BestValid 0.5220
	Epoch 290:	Loss 1.1897	TrainAcc 0.3500	ValidAcc 0.1380	TestAcc 0.1380	BestValid 0.5220
	Epoch 300:	Loss 1.1808	TrainAcc 0.3800	ValidAcc 0.1600	TestAcc 0.1560	BestValid 0.5220
****** Epoch Time (Excluding Evaluation Cost): 0.069 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 0.093 ms (Max: 0.147, Min: 0.043, Sum: 0.743)
Cluster-Wide Average, Compute: 23.913 ms (Max: 24.479, Min: 23.407, Sum: 191.304)
Cluster-Wide Average, Communication-Layer: 0.009 ms (Max: 0.010, Min: 0.008, Sum: 0.069)
Cluster-Wide Average, Bubble-Imbalance: 0.015 ms (Max: 0.016, Min: 0.014, Sum: 0.121)
Cluster-Wide Average, Communication-Graph: 37.296 ms (Max: 37.861, Min: 36.691, Sum: 298.366)
Cluster-Wide Average, Optimization: 7.295 ms (Max: 7.322, Min: 7.266, Sum: 58.361)
Cluster-Wide Average, Others: 0.718 ms (Max: 0.776, Min: 0.662, Sum: 5.747)
****** Breakdown Sum: 69.339 ms ******
Cluster-Wide Average, GPU Memory Consumption: 3.768 GB (Max: 4.204, Min: 3.692, Sum: 30.142)
Cluster-Wide Average, Graph-Level Communication Throughput: 26.286 Gbps (Max: 40.608, Min: 8.466, Sum: 210.285)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 0.816 GB
Weight-sync communication (cluster-wide, per-epoch): 0.119 GB
Total communication (cluster-wide, per-epoch): 0.935 GB
****** Accuracy Results ******
Highest valid_acc: 0.5220
Target test_acc: 0.5290
Epoch to reach the target acc: 0
[MPI Rank 0] Success 
[MPI Rank 1] Success 
[MPI Rank 4] Success 
[MPI Rank 2] Success 
[MPI Rank 5] Success 
[MPI Rank 3] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
