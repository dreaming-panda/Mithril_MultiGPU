Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
Initialized node 7 on machine gnerv8
DONE MPI INITDONE MPI INIT
Initialized node 5 on machine gnerv8
DONE MPI INIT
Initialized node 6 on machine gnerv8

Initialized node 4 on machine gnerv8
DONE MPI INIT
DONE MPI INITDONE MPI INIT
Initialized node 2 on machine gnerv7
DONE MPI INIT
Initialized node 3 on machine gnerv7
Initialized node 0 on machine gnerv7

Initialized node 1 on machine gnerv7
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.012 seconds.
        It takes 0.010 seconds.
        It takes 0.010 seconds.
        It takes 0.014 seconds.
Building the CSC structure...
Building the Feature Vector...
        It takes 0.015 seconds.
Building the Feature Vector...
        It takes 0.010 seconds.
Building the Feature Vector...
        It takes 0.012 seconds.
        It takes 0.013 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.012 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.473 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.505 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.509 seconds.
Building the Label Vector...
        It takes 0.512 seconds.
Building the Label Vector...
        It takes 0.006 seconds.
        It takes 0.003 seconds.
        It takes 0.588 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.602 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.625 seconds.
Building the Label Vector...
        It takes 0.625 seconds.
Building the Label Vector...
        It takes 0.004 seconds.
        It takes 0.003 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/physics/8_parts
The number of GCN layers: 32
The number of hidden units: 100
The number of training epoches: 300
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 1
Number of classes: 5
Number of feature dimensions: 8415
Number of vertices: 34493
Number of GPUs: 8
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
train nodes 100, valid nodes 500, test nodes 1000
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 4311) 1-[4311, 8623) 2-[8623, 12935) 3-[12935, 17247) 4-[17247, 21558) 5-[21558, 25870) 6-[25870, 30181) 7-[30181, 34493)
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 60.238 Gbps (per GPU), 481.905 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.931 Gbps (per GPU), 479.446 Gbps (aggregated)
The layer-level communication performance: 59.926 Gbps (per GPU), 479.410 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.689 Gbps (per GPU), 477.508 Gbps (aggregated)
The layer-level communication performance: 59.668 Gbps (per GPU), 477.347 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.453 Gbps (per GPU), 475.621 Gbps (aggregated)
The layer-level communication performance: 59.400 Gbps (per GPU), 475.200 Gbps (aggregated)
The layer-level communication performance: 59.368 Gbps (per GPU), 474.947 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.539 Gbps (per GPU), 1268.311 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.500 Gbps (per GPU), 1268.002 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.530 Gbps (per GPU), 1268.240 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.509 Gbps (per GPU), 1268.071 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.524 Gbps (per GPU), 1268.195 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.500 Gbps (per GPU), 1267.999 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.530 Gbps (per GPU), 1268.240 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.503 Gbps (per GPU), 1268.023 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 102.284 Gbps (per GPU), 818.274 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.284 Gbps (per GPU), 818.274 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.269 Gbps (per GPU), 818.148 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.247 Gbps (per GPU), 817.975 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.261 Gbps (per GPU), 818.088 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.213 Gbps (per GPU), 817.703 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.205 Gbps (per GPU), 817.636 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.119 Gbps (per GPU), 816.953 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 38.218 Gbps (per GPU), 305.745 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.217 Gbps (per GPU), 305.738 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.218 Gbps (per GPU), 305.743 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.218 Gbps (per GPU), 305.745 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.216 Gbps (per GPU), 305.728 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.217 Gbps (per GPU), 305.738 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.211 Gbps (per GPU), 305.690 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.215 Gbps (per GPU), 305.719 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  1.75ms  0.33ms  0.21ms  8.24  4.31K  0.10M
 chk_1  1.77ms  0.34ms  0.21ms  8.41  4.31K  0.10M
 chk_2  1.83ms  0.32ms  0.20ms  9.17  4.31K  0.06M
 chk_3  1.84ms  0.32ms  0.20ms  9.28  4.31K  0.06M
 chk_4  1.82ms  0.29ms  0.17ms 10.52  4.31K  0.04M
 chk_5  1.83ms  0.29ms  0.18ms 10.37  4.31K  0.04M
 chk_6  1.82ms  0.29ms  0.17ms 10.56  4.31K  0.04M
 chk_7  2.37ms  0.30ms  0.18ms 13.11  4.31K  0.06M
   Avg  1.88  0.31  0.19
   Max  2.37  0.34  0.21
   Min  1.75  0.29  0.17
 Ratio  1.35  1.17  1.23
   Var  0.04  0.00  0.00
Profiling takes 0.285 s
*** Node 0, starting model training...
*** Node 1, starting model training...
*** Node 2, starting model training...
*** Node 3, starting model training...
*** Node 4, starting model training...
*** Node 6, starting model training...
*** Node 7, starting model training...
*** Node 5, starting model training...
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 160)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 30181, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 160)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 4311
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 160)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 4311, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 160)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 8623, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 160)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 12935, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 160)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 25870, Num Local Vertices: 4311
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 160)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 21558, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 160)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 17247, Num Local Vertices: 4311
*** Node 5, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 160)...
+++++++++ Node 3 initializing the weights for op[0, 160)...
+++++++++ Node 1 initializing the weights for op[0, 160)...
+++++++++ Node 2 initializing the weights for op[0, 160)...
+++++++++ Node 6 initializing the weights for op[0, 160)...
+++++++++ Node 4 initializing the weights for op[0, 160)...
+++++++++ Node 5 initializing the weights for op[0, 160)...
+++++++++ Node 7 initializing the weights for op[0, 160)...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be received across the graph boundary.
The number of mirror vertices: 34236
Node 0, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 4, starting task scheduling...
*** Node 0, starting task scheduling...



*** Node 5, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 1.6094	TrainAcc 0.2100	ValidAcc 0.4900	TestAcc 0.4840	BestValid 0.4900
	Epoch 10:	Loss 1.6073	TrainAcc 0.2000	ValidAcc 0.4960	TestAcc 0.4990	BestValid 0.4960
	Epoch 20:	Loss 1.5750	TrainAcc 0.2000	ValidAcc 0.4960	TestAcc 0.4990	BestValid 0.4960
	Epoch 30:	Loss 1.6089	TrainAcc 0.2000	ValidAcc 0.4960	TestAcc 0.5000	BestValid 0.4960
	Epoch 40:	Loss 1.6091	TrainAcc 0.2000	ValidAcc 0.4960	TestAcc 0.5010	BestValid 0.4960
	Epoch 50:	Loss 1.6091	TrainAcc 0.2000	ValidAcc 0.4960	TestAcc 0.5060	BestValid 0.4960
	Epoch 60:	Loss 1.6088	TrainAcc 0.2100	ValidAcc 0.5080	TestAcc 0.5150	BestValid 0.5080
	Epoch 70:	Loss 1.4692	TrainAcc 0.2100	ValidAcc 0.1900	TestAcc 0.1760	BestValid 0.5080
	Epoch 80:	Loss 1.4111	TrainAcc 0.2600	ValidAcc 0.3280	TestAcc 0.3380	BestValid 0.5080
	Epoch 90:	Loss 1.3611	TrainAcc 0.3600	ValidAcc 0.6620	TestAcc 0.6590	BestValid 0.6620
	Epoch 100:	Loss 1.1998	TrainAcc 0.3900	ValidAcc 0.6720	TestAcc 0.6750	BestValid 0.6720
	Epoch 110:	Loss 1.0769	TrainAcc 0.3500	ValidAcc 0.6780	TestAcc 0.6600	BestValid 0.6780
	Epoch 120:	Loss 0.8533	TrainAcc 0.4700	ValidAcc 0.7180	TestAcc 0.6960	BestValid 0.7180
	Epoch 130:	Loss 0.9567	TrainAcc 0.4900	ValidAcc 0.7060	TestAcc 0.6920	BestValid 0.7180
	Epoch 140:	Loss 0.8865	TrainAcc 0.4600	ValidAcc 0.7140	TestAcc 0.6920	BestValid 0.7180
	Epoch 150:	Loss 0.8584	TrainAcc 0.4600	ValidAcc 0.7060	TestAcc 0.6900	BestValid 0.7180
	Epoch 160:	Loss 0.7877	TrainAcc 0.4900	ValidAcc 0.7160	TestAcc 0.6990	BestValid 0.7180
	Epoch 170:	Loss 0.7378	TrainAcc 0.4800	ValidAcc 0.7000	TestAcc 0.6850	BestValid 0.7180
	Epoch 180:	Loss 0.8536	TrainAcc 0.5100	ValidAcc 0.6640	TestAcc 0.6590	BestValid 0.7180
	Epoch 190:	Loss 0.7199	TrainAcc 0.4700	ValidAcc 0.6400	TestAcc 0.6310	BestValid 0.7180
	Epoch 200:	Loss 0.6691	TrainAcc 0.5000	ValidAcc 0.6580	TestAcc 0.6500	BestValid 0.7180
	Epoch 210:	Loss 0.8107	TrainAcc 0.5000	ValidAcc 0.6560	TestAcc 0.6490	BestValid 0.7180
	Epoch 220:	Loss 0.6764	TrainAcc 0.5200	ValidAcc 0.6900	TestAcc 0.6830	BestValid 0.7180
	Epoch 230:	Loss 0.6431	TrainAcc 0.4900	ValidAcc 0.6560	TestAcc 0.6580	BestValid 0.7180
	Epoch 240:	Loss 0.6512	TrainAcc 0.4000	ValidAcc 0.5700	TestAcc 0.5770	BestValid 0.7180
	Epoch 250:	Loss 0.5745	TrainAcc 0.4900	ValidAcc 0.6800	TestAcc 0.6800	BestValid 0.7180
	Epoch 260:	Loss 0.5356	TrainAcc 0.5200	ValidAcc 0.7080	TestAcc 0.7000	BestValid 0.7180
	Epoch 270:	Loss 0.5765	TrainAcc 0.5100	ValidAcc 0.6880	TestAcc 0.6870	BestValid 0.7180
	Epoch 280:	Loss 0.5486	TrainAcc 0.5200	ValidAcc 0.6820	TestAcc 0.6760	BestValid 0.7180
	Epoch 290:	Loss 0.4724	TrainAcc 0.5100	ValidAcc 0.7080	TestAcc 0.7020	BestValid 0.7180
	Epoch 300:	Loss 0.5360	TrainAcc 0.5200	ValidAcc 0.7200	TestAcc 0.7100	BestValid 0.7200
****** Epoch Time (Excluding Evaluation Cost): 0.052 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 0.106 ms (Max: 0.147, Min: 0.050, Sum: 0.849)
Cluster-Wide Average, Compute: 12.455 ms (Max: 12.893, Min: 11.920, Sum: 99.643)
Cluster-Wide Average, Communication-Layer: 0.008 ms (Max: 0.010, Min: 0.007, Sum: 0.068)
Cluster-Wide Average, Bubble-Imbalance: 0.015 ms (Max: 0.016, Min: 0.013, Sum: 0.121)
Cluster-Wide Average, Communication-Graph: 35.584 ms (Max: 36.133, Min: 35.165, Sum: 284.673)
Cluster-Wide Average, Optimization: 3.616 ms (Max: 3.640, Min: 3.588, Sum: 28.929)
Cluster-Wide Average, Others: 0.381 ms (Max: 0.414, Min: 0.346, Sum: 3.051)
****** Breakdown Sum: 52.167 ms ******
Cluster-Wide Average, GPU Memory Consumption: 3.059 GB (Max: 3.372, Min: 3.001, Sum: 24.470)
Cluster-Wide Average, Graph-Level Communication Throughput: 27.671 Gbps (Max: 42.688, Min: 8.853, Sum: 221.365)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 0.816 GB
Weight-sync communication (cluster-wide, per-epoch): 0.060 GB
Total communication (cluster-wide, per-epoch): 0.876 GB
****** Accuracy Results ******
Highest valid_acc: 0.7200
Target test_acc: 0.7100
Epoch to reach the target acc: 299
[MPI Rank 4] Success 
[MPI Rank 0] Success 
[MPI Rank 5] Success 
[MPI Rank 1] Success 
[MPI Rank 6] Success 
[MPI Rank 2] Success 
[MPI Rank 7] Success 
[MPI Rank 3] Success 
