Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
DONE MPI INIT
Initialized node 1 on machine gnerv7
DONE MPI INITInitialized node 0 on machine gnerv7
DONE MPI INIT
Initialized node 2 on machine gnerv7

Initialized node 3 on machine gnerv7
DONE MPI INIT
DONE MPI INITInitialized node 4 on machine gnerv8
DONE MPI INIT
Initialized node 5 on machine gnerv8
DONE MPI INIT
Initialized node 7 on machine gnerv8

Initialized node 6 on machine gnerv8
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.016 seconds.
Building the CSC structure...
        It takes 0.018 seconds.
Building the CSC structure...
        It takes 0.020 seconds.
Building the CSC structure...
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.018 seconds.
Building the CSC structure...
        It takes 0.012 seconds.
        It takes 0.019 seconds.
Building the CSC structure...
Building the Feature Vector...
        It takes 0.012 seconds.
        It takes 0.011 seconds.
        It takes 0.014 seconds.
        It takes 0.011 seconds.
Building the Feature Vector...
        It takes 0.012 seconds.
        It takes 0.011 seconds.
Building the Feature Vector...
        It takes 0.012 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.476 seconds.
        It takes 0.470 seconds.
Building the Label Vector...
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.003 seconds.
        It takes 0.510 seconds.
Building the Label Vector...
        It takes 0.510 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.003 seconds.
        It takes 0.596 seconds.
Building the Label Vector...
        It takes 0.004 seconds.
        It takes 0.610 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/physics/8_parts
The number of GCN layers: 32
The number of hidden units: 100
The number of training epoches: 300
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 2
Number of classes: 5
Number of feature dimensions: 8415
Number of vertices: 34493
Number of GPUs: 8
        It takes 0.608 seconds.
Building the Label Vector...
        It takes 0.614 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.007 seconds.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
csr in-out ready !Start Cost Model Initialization...
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
train nodes 100, valid nodes 500, test nodes 1000
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 4311) 1-[4311, 8623) 2-[8623, 12935) 3-[12935, 17247) 4-[17247, 21558) 5-[21558, 25870) 6-[25870, 30181) 7-[30181, 34493)
34493, 530417, 530417
Number of vertices per chunk: 4312
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 60.660 Gbps (per GPU), 485.284 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.385 Gbps (per GPU), 483.082 Gbps (aggregated)
The layer-level communication performance: 60.378 Gbps (per GPU), 483.026 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.147 Gbps (per GPU), 481.177 Gbps (aggregated)
The layer-level communication performance: 60.126 Gbps (per GPU), 481.012 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.886 Gbps (per GPU), 479.087 Gbps (aggregated)
The layer-level communication performance: 59.836 Gbps (per GPU), 478.691 Gbps (aggregated)
The layer-level communication performance: 59.807 Gbps (per GPU), 478.460 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.476 Gbps (per GPU), 1267.807 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.470 Gbps (per GPU), 1267.760 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.419 Gbps (per GPU), 1267.353 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.455 Gbps (per GPU), 1267.640 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.476 Gbps (per GPU), 1267.808 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.461 Gbps (per GPU), 1267.688 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.410 Gbps (per GPU), 1267.281 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.467 Gbps (per GPU), 1267.735 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 104.766 Gbps (per GPU), 838.127 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.763 Gbps (per GPU), 838.106 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.769 Gbps (per GPU), 838.148 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.766 Gbps (per GPU), 838.127 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.769 Gbps (per GPU), 838.148 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.768 Gbps (per GPU), 838.141 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.769 Gbps (per GPU), 838.148 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.763 Gbps (per GPU), 838.106 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 38.269 Gbps (per GPU), 306.152 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.268 Gbps (per GPU), 306.145 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.267 Gbps (per GPU), 306.139 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.270 Gbps (per GPU), 306.161 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.267 Gbps (per GPU), 306.136 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.268 Gbps (per GPU), 306.146 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.269 Gbps (per GPU), 306.150 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.260 Gbps (per GPU), 306.084 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  1.76ms  0.34ms  0.22ms  7.99  4.31K  0.10M
 chk_1  2.41ms  0.34ms  0.22ms 10.89  4.31K  0.10M
 chk_2  1.83ms  0.33ms  0.21ms  8.83  4.31K  0.06M
 chk_3  1.84ms  0.33ms  0.20ms  8.98  4.31K  0.06M
 chk_4  1.83ms  0.33ms  0.18ms 10.11  4.31K  0.04M
 chk_5  1.86ms  0.30ms  0.18ms 10.17  4.31K  0.04M
 chk_6  1.84ms  0.30ms  0.18ms 10.26  4.31K  0.04M
 chk_7  1.85ms  0.30ms  0.19ms  9.92  4.31K  0.06M
   Avg  1.90  0.32  0.20
   Max  2.41  0.34  0.22
   Min  1.76  0.30  0.18
 Ratio  1.37  1.14  1.23
   Var  0.04  0.00  0.00
Profiling takes 0.289 s
*** Node 0, starting model training...
*** Node 1, starting model training...
*** Node 2, starting model training...
*** Node 3, starting model training...
*** Node 5, starting model training...
*** Node 6, starting model training...
*** Node 4, starting model training...
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 160)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 21558, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 160)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 4311
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 160)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 4311, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 160)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 8623, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 160)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 25870, Num Local Vertices: 4311
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 160)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 30181, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 160)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 17247, Num Local Vertices: 4311
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 160)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 12935, Num Local Vertices: 4312
*** Node 5, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
+++++++++ Node 4 initializing the weights for op[0, 160)...
+++++++++ Node 2 initializing the weights for op[0, 160)...
+++++++++ Node 0 initializing the weights for op[0, 160)...
+++++++++ Node 3 initializing the weights for op[0, 160)...
+++++++++ Node 5 initializing the weights for op[0, 160)...
+++++++++ Node 6 initializing the weights for op[0, 160)...
+++++++++ Node 7 initializing the weights for op[0, 160)...
+++++++++ Node 1 initializing the weights for op[0, 160)...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 34236
Node 0, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 1.6094	TrainAcc 0.2000	ValidAcc 0.1800	TestAcc 0.1740	BestValid 0.1800
	Epoch 10:	Loss 1.6094	TrainAcc 0.2000	ValidAcc 0.0740	TestAcc 0.0750	BestValid 0.1800
	Epoch 20:	Loss 1.4640	TrainAcc 0.2000	ValidAcc 0.1860	TestAcc 0.1750	BestValid 0.1860
	Epoch 30:	Loss 1.4169	TrainAcc 0.2000	ValidAcc 0.0740	TestAcc 0.0750	BestValid 0.1860
	Epoch 40:	Loss 1.3464	TrainAcc 0.2000	ValidAcc 0.0740	TestAcc 0.0750	BestValid 0.1860
	Epoch 50:	Loss 1.2867	TrainAcc 0.2000	ValidAcc 0.0740	TestAcc 0.0750	BestValid 0.1860
	Epoch 60:	Loss 1.3257	TrainAcc 0.2900	ValidAcc 0.1160	TestAcc 0.1150	BestValid 0.1860
	Epoch 70:	Loss 1.1236	TrainAcc 0.4000	ValidAcc 0.1580	TestAcc 0.1710	BestValid 0.1860
	Epoch 80:	Loss 1.0252	TrainAcc 0.4000	ValidAcc 0.5700	TestAcc 0.5770	BestValid 0.5700
	Epoch 90:	Loss 0.9660	TrainAcc 0.3900	ValidAcc 0.5720	TestAcc 0.5760	BestValid 0.5720
	Epoch 100:	Loss 0.9393	TrainAcc 0.4100	ValidAcc 0.5760	TestAcc 0.5830	BestValid 0.5760
	Epoch 110:	Loss 0.9093	TrainAcc 0.4100	ValidAcc 0.5940	TestAcc 0.5840	BestValid 0.5940
	Epoch 120:	Loss 0.8806	TrainAcc 0.4300	ValidAcc 0.5820	TestAcc 0.5990	BestValid 0.5940
	Epoch 130:	Loss 0.8564	TrainAcc 0.4000	ValidAcc 0.5860	TestAcc 0.5930	BestValid 0.5940
	Epoch 140:	Loss 0.7802	TrainAcc 0.4300	ValidAcc 0.5880	TestAcc 0.5930	BestValid 0.5940
	Epoch 150:	Loss 0.7451	TrainAcc 0.4400	ValidAcc 0.6160	TestAcc 0.6120	BestValid 0.6160
	Epoch 160:	Loss 0.7124	TrainAcc 0.4500	ValidAcc 0.6100	TestAcc 0.6130	BestValid 0.6160
	Epoch 170:	Loss 0.6841	TrainAcc 0.4500	ValidAcc 0.6260	TestAcc 0.6230	BestValid 0.6260
	Epoch 180:	Loss 0.7581	TrainAcc 0.4500	ValidAcc 0.6280	TestAcc 0.6250	BestValid 0.6280
	Epoch 190:	Loss 0.7321	TrainAcc 0.4500	ValidAcc 0.6300	TestAcc 0.6110	BestValid 0.6300
	Epoch 200:	Loss 0.6227	TrainAcc 0.4400	ValidAcc 0.6160	TestAcc 0.6140	BestValid 0.6300
	Epoch 210:	Loss 0.5782	TrainAcc 0.4600	ValidAcc 0.6200	TestAcc 0.6210	BestValid 0.6300
	Epoch 220:	Loss 0.5787	TrainAcc 0.4100	ValidAcc 0.6040	TestAcc 0.6160	BestValid 0.6300
	Epoch 230:	Loss 0.6014	TrainAcc 0.4100	ValidAcc 0.6100	TestAcc 0.6220	BestValid 0.6300
	Epoch 240:	Loss 0.5344	TrainAcc 0.4800	ValidAcc 0.6440	TestAcc 0.6430	BestValid 0.6440
	Epoch 250:	Loss 0.5185	TrainAcc 0.4700	ValidAcc 0.6400	TestAcc 0.6380	BestValid 0.6440
	Epoch 260:	Loss 0.5731	TrainAcc 0.4700	ValidAcc 0.6120	TestAcc 0.6200	BestValid 0.6440
	Epoch 270:	Loss 0.3942	TrainAcc 0.3900	ValidAcc 0.5940	TestAcc 0.6070	BestValid 0.6440
	Epoch 280:	Loss 0.4324	TrainAcc 0.3900	ValidAcc 0.5940	TestAcc 0.6060	BestValid 0.6440
	Epoch 290:	Loss 0.6367	TrainAcc 0.4500	ValidAcc 0.6020	TestAcc 0.6230	BestValid 0.6440
	Epoch 300:	Loss 0.4665	TrainAcc 0.4600	ValidAcc 0.6200	TestAcc 0.6340	BestValid 0.6440
****** Epoch Time (Excluding Evaluation Cost): 0.053 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 0.086 ms (Max: 0.121, Min: 0.045, Sum: 0.690)
Cluster-Wide Average, Compute: 12.493 ms (Max: 12.938, Min: 12.148, Sum: 99.942)
Cluster-Wide Average, Communication-Layer: 0.008 ms (Max: 0.009, Min: 0.007, Sum: 0.064)
Cluster-Wide Average, Bubble-Imbalance: 0.015 ms (Max: 0.016, Min: 0.013, Sum: 0.118)
Cluster-Wide Average, Communication-Graph: 36.290 ms (Max: 36.621, Min: 35.886, Sum: 290.317)
Cluster-Wide Average, Optimization: 3.648 ms (Max: 3.673, Min: 3.629, Sum: 29.185)
Cluster-Wide Average, Others: 0.370 ms (Max: 0.396, Min: 0.336, Sum: 2.962)
****** Breakdown Sum: 52.910 ms ******
Cluster-Wide Average, GPU Memory Consumption: 3.059 GB (Max: 3.372, Min: 3.001, Sum: 24.470)
Cluster-Wide Average, Graph-Level Communication Throughput: 27.058 Gbps (Max: 41.872, Min: 8.612, Sum: 216.465)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 0.816 GB
Weight-sync communication (cluster-wide, per-epoch): 0.060 GB
Total communication (cluster-wide, per-epoch): 0.876 GB
****** Accuracy Results ******
Highest valid_acc: 0.6440
Target test_acc: 0.6430
Epoch to reach the target acc: 239
[MPI Rank 0] Success 
[MPI Rank 4] Success 
[MPI Rank 1] Success 
[MPI Rank 5] Success 
[MPI Rank 2] Success 
[MPI Rank 6] Success 
[MPI Rank 3] Success 
[MPI Rank 7] Success 
