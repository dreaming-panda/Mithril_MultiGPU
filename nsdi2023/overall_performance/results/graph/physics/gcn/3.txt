Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
DONE MPI INITDONE MPI INIT
Initialized node 2 on machine gnerv7
Initialized node 0 on machine gnerv7

Initialized node 1 on machine gnerv7
DONE MPI INIT
Initialized node 3 on machine gnerv7
DONE MPI INIT
Initialized node 6 on machine gnerv8
DONE MPI INITDONE MPI INIT
Initialized node 5 on machine gnerv8
DONE MPI INIT
Initialized node 7 on machine gnerv8

Initialized node 4 on machine gnerv8
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.010 seconds.
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.020 seconds.
Building the CSC structure...
        It takes 0.012 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.012 seconds.
        It takes 0.011 seconds.
        It takes 0.011 seconds.
        It takes 0.011 seconds.
        It takes 0.011 seconds.
        It takes 0.011 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.467 seconds.
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.470 seconds.
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.516 seconds.
Building the Label Vector...
        It takes 0.518 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.007 seconds.
        It takes 0.605 seconds.
Building the Label Vector...
        It takes 0.004 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/physics/8_parts
The number of GCN layers: 32
The number of hidden units: 100
The number of training epoches: 300
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 3
Number of classes: 5
Number of feature dimensions: 8415
Number of vertices: 34493
Number of GPUs: 8
        It takes 0.609 seconds.
Building the Label Vector...
        It takes 0.609 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.003 seconds.
        It takes 0.616 seconds.
Building the Label Vector...
        It takes 0.008 seconds.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
train nodes 100, valid nodes 500, test nodes 1000
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 4311) 1-[4311, 8623) 2-[8623, 12935) 3-[12935, 17247) 4-[17247, 21558) 5-[21558, 25870) 6-[25870, 30181) 7-[30181, 34493)
34493, 530417, 530417
Number of vertices per chunk: 4312
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 59.923 Gbps (per GPU), 479.387 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.642 Gbps (per GPU), 477.134 Gbps (aggregated)
The layer-level communication performance: 59.636 Gbps (per GPU), 477.085 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.380 Gbps (per GPU), 475.041 Gbps (aggregated)
The layer-level communication performance: 59.361 Gbps (per GPU), 474.891 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.158 Gbps (per GPU), 473.267 Gbps (aggregated)
The layer-level communication performance: 59.099 Gbps (per GPU), 472.789 Gbps (aggregated)
The layer-level communication performance: 59.067 Gbps (per GPU), 472.535 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.335 Gbps (per GPU), 1266.683 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.326 Gbps (per GPU), 1266.611 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.339 Gbps (per GPU), 1266.708 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.311 Gbps (per GPU), 1266.492 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.252 Gbps (per GPU), 1266.014 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.314 Gbps (per GPU), 1266.516 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.255 Gbps (per GPU), 1266.038 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.318 Gbps (per GPU), 1266.541 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 105.370 Gbps (per GPU), 842.956 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.371 Gbps (per GPU), 842.970 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.345 Gbps (per GPU), 842.759 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.373 Gbps (per GPU), 842.984 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.345 Gbps (per GPU), 842.759 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.371 Gbps (per GPU), 842.970 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.343 Gbps (per GPU), 842.744 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.299 Gbps (per GPU), 842.392 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 37.247 Gbps (per GPU), 297.979 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.246 Gbps (per GPU), 297.967 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.244 Gbps (per GPU), 297.952 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.244 Gbps (per GPU), 297.953 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.245 Gbps (per GPU), 297.960 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.247 Gbps (per GPU), 297.974 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.244 Gbps (per GPU), 297.953 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.246 Gbps (per GPU), 297.964 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  1.76ms  0.34ms  0.22ms  8.16  4.31K  0.10M
 chk_1  1.80ms  0.34ms  0.22ms  8.25  4.31K  0.10M
 chk_2  1.84ms  0.35ms  0.21ms  8.96  4.31K  0.06M
 chk_3  1.86ms  0.32ms  0.20ms  9.12  4.31K  0.06M
 chk_4  1.87ms  0.30ms  0.18ms 10.39  4.31K  0.04M
 chk_5  1.85ms  0.30ms  0.18ms 10.17  4.31K  0.04M
 chk_6  1.85ms  0.30ms  0.20ms  9.25  4.31K  0.04M
 chk_7  1.83ms  0.30ms  0.18ms  9.93  4.31K  0.06M
   Avg  1.83  0.32  0.20
   Max  1.87  0.35  0.22
   Min  1.76  0.30  0.18
 Ratio  1.06  1.15  1.21
   Var  0.00  0.00  0.00
Profiling takes 0.291 s
*** Node 0, starting model training...
*** Node 2, starting model training...
*** Node 3, starting model training...
*** Node 4, starting model training...
*** Node 5, starting model training...
*** Node 1, starting model training...
*** Node 6, starting model training...
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 160)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 4311
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 160)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 17247, Num Local Vertices: 4311
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 160)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 21558, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 160)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 8623, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 160)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 12935, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 160)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 30181, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 160)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 25870, Num Local Vertices: 4311
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 160)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 4311, Num Local Vertices: 4312
*** Node 2, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
+++++++++ Node 2 initializing the weights for op[0, 160)...
+++++++++ Node 3 initializing the weights for op[0, 160)...
+++++++++ Node 0 initializing the weights for op[0, 160)...
+++++++++ Node 4 initializing the weights for op[0, 160)...
+++++++++ Node 7 initializing the weights for op[0, 160)...
+++++++++ Node 5 initializing the weights for op[0, 160)...
+++++++++ Node 1 initializing the weights for op[0, 160)...
+++++++++ Node 6 initializing the weights for op[0, 160)...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 34236
Node 0, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...
*** Node 1, starting task scheduling...
*** Node 2, starting task scheduling...
*** Node 3, starting task scheduling...



The learning rate specified by the user: 0.001000000
*** Node 4, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 1.6094	TrainAcc 0.1700	ValidAcc 0.1620	TestAcc 0.1500	BestValid 0.1620
	Epoch 10:	Loss 1.6094	TrainAcc 0.2000	ValidAcc 0.1860	TestAcc 0.1750	BestValid 0.1860
	Epoch 20:	Loss 1.6006	TrainAcc 0.2000	ValidAcc 0.1860	TestAcc 0.1750	BestValid 0.1860
	Epoch 30:	Loss 1.6094	TrainAcc 0.2000	ValidAcc 0.1860	TestAcc 0.1750	BestValid 0.1860
	Epoch 40:	Loss 1.6094	TrainAcc 0.2000	ValidAcc 0.0740	TestAcc 0.0740	BestValid 0.1860
	Epoch 50:	Loss 1.6094	TrainAcc 0.2000	ValidAcc 0.0720	TestAcc 0.0740	BestValid 0.1860
	Epoch 60:	Loss 1.6094	TrainAcc 0.2000	ValidAcc 0.0720	TestAcc 0.0740	BestValid 0.1860
	Epoch 70:	Loss 1.6094	TrainAcc 0.1800	ValidAcc 0.0720	TestAcc 0.0710	BestValid 0.1860
	Epoch 80:	Loss 1.6094	TrainAcc 0.1700	ValidAcc 0.0680	TestAcc 0.0620	BestValid 0.1860
	Epoch 90:	Loss 1.6094	TrainAcc 0.2000	ValidAcc 0.1860	TestAcc 0.1750	BestValid 0.1860
	Epoch 100:	Loss 1.6094	TrainAcc 0.2000	ValidAcc 0.1860	TestAcc 0.1750	BestValid 0.1860
	Epoch 110:	Loss 1.6094	TrainAcc 0.2000	ValidAcc 0.1860	TestAcc 0.1750	BestValid 0.1860
	Epoch 120:	Loss 1.6094	TrainAcc 0.2000	ValidAcc 0.1860	TestAcc 0.1750	BestValid 0.1860
	Epoch 130:	Loss 1.6092	TrainAcc 0.2000	ValidAcc 0.1860	TestAcc 0.1750	BestValid 0.1860
	Epoch 140:	Loss 1.6069	TrainAcc 0.2000	ValidAcc 0.1860	TestAcc 0.1750	BestValid 0.1860
	Epoch 150:	Loss 1.4904	TrainAcc 0.2000	ValidAcc 0.1860	TestAcc 0.1750	BestValid 0.1860
	Epoch 160:	Loss 1.4140	TrainAcc 0.2000	ValidAcc 0.1860	TestAcc 0.1750	BestValid 0.1860
	Epoch 170:	Loss 1.4099	TrainAcc 0.2000	ValidAcc 0.1860	TestAcc 0.1750	BestValid 0.1860
	Epoch 180:	Loss 1.3810	TrainAcc 0.2000	ValidAcc 0.1860	TestAcc 0.1750	BestValid 0.1860
	Epoch 190:	Loss 1.3713	TrainAcc 0.2000	ValidAcc 0.1860	TestAcc 0.1750	BestValid 0.1860
	Epoch 200:	Loss 1.3462	TrainAcc 0.2300	ValidAcc 0.2220	TestAcc 0.2200	BestValid 0.2220
	Epoch 210:	Loss 1.1139	TrainAcc 0.3800	ValidAcc 0.6740	TestAcc 0.6670	BestValid 0.6740
	Epoch 220:	Loss 1.0671	TrainAcc 0.3800	ValidAcc 0.5800	TestAcc 0.5780	BestValid 0.6740
	Epoch 230:	Loss 1.0164	TrainAcc 0.3500	ValidAcc 0.6860	TestAcc 0.6790	BestValid 0.6860
	Epoch 240:	Loss 0.9910	TrainAcc 0.4200	ValidAcc 0.7060	TestAcc 0.6800	BestValid 0.7060
	Epoch 250:	Loss 0.9432	TrainAcc 0.4500	ValidAcc 0.7080	TestAcc 0.6850	BestValid 0.7080
	Epoch 260:	Loss 0.8776	TrainAcc 0.4800	ValidAcc 0.7140	TestAcc 0.6970	BestValid 0.7140
	Epoch 270:	Loss 0.9539	TrainAcc 0.4900	ValidAcc 0.7140	TestAcc 0.7000	BestValid 0.7140
	Epoch 280:	Loss 0.7849	TrainAcc 0.4800	ValidAcc 0.6940	TestAcc 0.6790	BestValid 0.7140
	Epoch 290:	Loss 0.8007	TrainAcc 0.4800	ValidAcc 0.6860	TestAcc 0.6770	BestValid 0.7140
	Epoch 300:	Loss 0.6840	TrainAcc 0.5000	ValidAcc 0.6980	TestAcc 0.6850	BestValid 0.7140
****** Epoch Time (Excluding Evaluation Cost): 0.053 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 0.089 ms (Max: 0.141, Min: 0.049, Sum: 0.714)
Cluster-Wide Average, Compute: 12.534 ms (Max: 13.015, Min: 12.117, Sum: 100.268)
Cluster-Wide Average, Communication-Layer: 0.008 ms (Max: 0.010, Min: 0.007, Sum: 0.066)
Cluster-Wide Average, Bubble-Imbalance: 0.015 ms (Max: 0.017, Min: 0.013, Sum: 0.119)
Cluster-Wide Average, Communication-Graph: 36.221 ms (Max: 36.610, Min: 35.767, Sum: 289.766)
Cluster-Wide Average, Optimization: 3.653 ms (Max: 3.674, Min: 3.632, Sum: 29.226)
Cluster-Wide Average, Others: 0.376 ms (Max: 0.417, Min: 0.346, Sum: 3.007)
****** Breakdown Sum: 52.896 ms ******
Cluster-Wide Average, GPU Memory Consumption: 3.059 GB (Max: 3.372, Min: 3.001, Sum: 24.470)
Cluster-Wide Average, Graph-Level Communication Throughput: 27.086 Gbps (Max: 41.995, Min: 8.679, Sum: 216.686)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 0.816 GB
Weight-sync communication (cluster-wide, per-epoch): 0.060 GB
Total communication (cluster-wide, per-epoch): 0.876 GB
****** Accuracy Results ******
Highest valid_acc: 0.7140
Target test_acc: 0.6970
Epoch to reach the target acc: 259
[MPI Rank 0] Success 
[MPI Rank 4] Success 
[MPI Rank 1] Success 
[MPI Rank 5] Success 
[MPI Rank 2] Success 
[MPI Rank 6] Success 
[MPI Rank 3] Success 
[MPI Rank 7] Success 
