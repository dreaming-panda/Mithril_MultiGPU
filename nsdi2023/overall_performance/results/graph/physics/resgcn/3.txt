Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
Initialized node 4 on machine gnerv8
DONE MPI INIT
Initialized node 5 on machine gnerv8
DONE MPI INITDONE MPI INIT
Initialized node 7 on machine gnerv8

Initialized node 6 on machine gnerv8
DONE MPI INIT
DONE MPI INIT
Initialized node 1 on machine gnerv7
DONE MPI INIT
Initialized node 0 on machine gnerv7
Initialized node 2 on machine gnerv7
DONE MPI INIT
Initialized node 3 on machine gnerv7
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.013 seconds.
Building the CSC structure...
        It takes 0.014 seconds.
Building the CSC structure...
        It takes 0.014 seconds.
Building the CSC structure...
        It takes 0.014 seconds.
Building the CSC structure...
        It takes 0.014 seconds.
Building the CSC structure...
        It takes 0.013 seconds.
        It takes 0.012 seconds.
        It takes 0.013 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.014 seconds.
        It takes 0.016 seconds.
        It takes 0.015 seconds.
        It takes 0.015 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.466 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.501 seconds.
Building the Label Vector...
        It takes 0.500 seconds.
        It takes 0.003 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.594 seconds.
Building the Label Vector...
        It takes 0.004 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/physics/8_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 300
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 3
Number of classes: 5
Number of feature dimensions: 8415
Number of vertices: 34493
Number of GPUs: 8
        It takes 0.604 seconds.
Building the Label Vector...
        It takes 0.610 seconds.
Building the Label Vector...
        It takes 0.008 seconds.
        It takes 0.613 seconds.
Building the Label Vector...
        It takes 0.004 seconds.
        It takes 0.007 seconds.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
train nodes 100, valid nodes 500, test nodes 1000
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 4311) 1-[4311, 8623) 2-[8623, 12935) 3-[12935, 17247) 4-[17247, 21558) 5-[21558, 25870) 6-[25870, 30181) 7-[30181, 34493)
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
Building the CSR structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the Feature Vector...
        It takes 0.429 seconds.
Building the Label Vector...
        It takes 0.002 seconds.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 59.926 Gbps (per GPU), 479.406 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.624 Gbps (per GPU), 476.995 Gbps (aggregated)
The layer-level communication performance: 59.609 Gbps (per GPU), 476.874 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.372 Gbps (per GPU), 474.980 Gbps (aggregated)
The layer-level communication performance: 59.316 Gbps (per GPU), 474.525 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.109 Gbps (per GPU), 472.871 Gbps (aggregated)
The layer-level communication performance: 59.069 Gbps (per GPU), 472.551 Gbps (aggregated)
The layer-level communication performance: 59.003 Gbps (per GPU), 472.023 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.019 Gbps (per GPU), 1264.154 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.984 Gbps (per GPU), 1263.868 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.986 Gbps (per GPU), 1263.892 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.981 Gbps (per GPU), 1263.844 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.992 Gbps (per GPU), 1263.939 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.981 Gbps (per GPU), 1263.850 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.921 Gbps (per GPU), 1263.368 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.984 Gbps (per GPU), 1263.868 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 105.167 Gbps (per GPU), 841.336 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 103.962 Gbps (per GPU), 831.694 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.163 Gbps (per GPU), 841.308 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 103.962 Gbps (per GPU), 831.694 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.164 Gbps (per GPU), 841.315 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 103.962 Gbps (per GPU), 831.694 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.163 Gbps (per GPU), 841.308 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 103.962 Gbps (per GPU), 831.695 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 38.831 Gbps (per GPU), 310.651 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.831 Gbps (per GPU), 310.646 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.831 Gbps (per GPU), 310.645 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.830 Gbps (per GPU), 310.641 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.828 Gbps (per GPU), 310.620 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.828 Gbps (per GPU), 310.627 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.827 Gbps (per GPU), 310.615 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.824 Gbps (per GPU), 310.595 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  1.96ms  0.98ms  1.67ms  1.99  4.31K  0.10M
 chk_1  1.96ms  0.98ms  1.66ms  2.01  4.31K  0.10M
 chk_2  2.02ms  0.96ms  1.67ms  2.10  4.31K  0.06M
 chk_3  2.04ms  0.96ms  1.65ms  2.12  4.31K  0.06M
 chk_4  2.01ms  0.95ms  1.64ms  2.12  4.31K  0.04M
 chk_5  2.01ms  0.94ms  1.63ms  2.12  4.31K  0.04M
 chk_6  2.01ms  0.95ms  1.64ms  2.12  4.31K  0.04M
 chk_7  2.01ms  0.95ms  1.66ms  2.12  4.31K  0.06M
   Avg  2.00  0.96  1.65
   Max  2.04  0.98  1.67
   Min  1.96  0.94  1.63
 Ratio  1.04  1.04  1.03
   Var  0.00  0.00  0.00
Profiling takes 0.497 s
*** Node 0, starting model training...
*** Node 1, starting model training...
*** Node 2, starting model training...
*** Node 3, starting model training...
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 421)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 4311
*** Node 4, starting model training...
*** Node 5, starting model training...
*** Node 6, starting model training...
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 421)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 17247, Num Local Vertices: 4311
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 421)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 21558, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 421)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 30181, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 421)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 4311, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 421)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 12935, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 421)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 8623, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 421)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 25870, Num Local Vertices: 4311
*** Node 5, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
+++++++++ Node 7 initializing the weights for op[0, 421)...
+++++++++ Node 5 initializing the weights for op[0, 421)...
+++++++++ Node 2 initializing the weights for op[0, 421)...
+++++++++ Node 1 initializing the weights for op[0, 421)...
+++++++++ Node 0 initializing the weights for op[0, 421)...
+++++++++ Node 3 initializing the weights for op[0, 421)...
+++++++++ Node 4 initializing the weights for op[0, 421)...
+++++++++ Node 6 initializing the weights for op[0, 421)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be received across the graph boundary.
The number of mirror vertices: 34236
Node 0, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 4, starting task scheduling...
*** Node 0, starting task scheduling...



*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 2.3491	TrainAcc 0.2000	ValidAcc 0.1580	TestAcc 0.1650	BestValid 0.1580
	Epoch 10:	Loss 0.8265	TrainAcc 0.9000	ValidAcc 0.9140	TestAcc 0.8990	BestValid 0.9140
	Epoch 20:	Loss 0.1946	TrainAcc 1.0000	ValidAcc 0.9300	TestAcc 0.9260	BestValid 0.9300
	Epoch 30:	Loss 0.0466	TrainAcc 1.0000	ValidAcc 0.9260	TestAcc 0.9150	BestValid 0.9300
	Epoch 40:	Loss 0.0254	TrainAcc 1.0000	ValidAcc 0.9400	TestAcc 0.9270	BestValid 0.9400
	Epoch 50:	Loss 0.0247	TrainAcc 1.0000	ValidAcc 0.9420	TestAcc 0.9260	BestValid 0.9420
	Epoch 60:	Loss 0.0106	TrainAcc 1.0000	ValidAcc 0.9380	TestAcc 0.9230	BestValid 0.9420
	Epoch 70:	Loss 0.0142	TrainAcc 1.0000	ValidAcc 0.9400	TestAcc 0.9240	BestValid 0.9420
	Epoch 80:	Loss 0.0100	TrainAcc 1.0000	ValidAcc 0.9380	TestAcc 0.9260	BestValid 0.9420
	Epoch 90:	Loss 0.0080	TrainAcc 1.0000	ValidAcc 0.9320	TestAcc 0.9250	BestValid 0.9420
	Epoch 100:	Loss 0.0050	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9290	BestValid 0.9420
	Epoch 110:	Loss 0.0119	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9290	BestValid 0.9420
	Epoch 120:	Loss 0.0058	TrainAcc 1.0000	ValidAcc 0.9320	TestAcc 0.9250	BestValid 0.9420
	Epoch 130:	Loss 0.0069	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9240	BestValid 0.9420
	Epoch 140:	Loss 0.0055	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9240	BestValid 0.9420
	Epoch 150:	Loss 0.0057	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9240	BestValid 0.9420
	Epoch 160:	Loss 0.0037	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9260	BestValid 0.9420
	Epoch 170:	Loss 0.0067	TrainAcc 1.0000	ValidAcc 0.9320	TestAcc 0.9300	BestValid 0.9420
	Epoch 180:	Loss 0.0061	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9300	BestValid 0.9420
	Epoch 190:	Loss 0.0046	TrainAcc 1.0000	ValidAcc 0.9320	TestAcc 0.9300	BestValid 0.9420
	Epoch 200:	Loss 0.0073	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9320	BestValid 0.9420
	Epoch 210:	Loss 0.0115	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9310	BestValid 0.9420
	Epoch 220:	Loss 0.0063	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9300	BestValid 0.9420
	Epoch 230:	Loss 0.0066	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9300	BestValid 0.9420
	Epoch 240:	Loss 0.0032	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9300	BestValid 0.9420
	Epoch 250:	Loss 0.0031	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9270	BestValid 0.9420
	Epoch 260:	Loss 0.0040	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9280	BestValid 0.9420
	Epoch 270:	Loss 0.0025	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9270	BestValid 0.9420
	Epoch 280:	Loss 0.0027	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9270	BestValid 0.9420
	Epoch 290:	Loss 0.0041	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9290	BestValid 0.9420
	Epoch 300:	Loss 0.0034	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9290	BestValid 0.9420
****** Epoch Time (Excluding Evaluation Cost): 0.080 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 0.118 ms (Max: 0.184, Min: 0.066, Sum: 0.944)
Cluster-Wide Average, Compute: 32.568 ms (Max: 33.223, Min: 32.203, Sum: 260.542)
Cluster-Wide Average, Communication-Layer: 0.009 ms (Max: 0.010, Min: 0.008, Sum: 0.072)
Cluster-Wide Average, Bubble-Imbalance: 0.016 ms (Max: 0.017, Min: 0.015, Sum: 0.129)
Cluster-Wide Average, Communication-Graph: 37.120 ms (Max: 37.430, Min: 36.448, Sum: 296.963)
Cluster-Wide Average, Optimization: 8.841 ms (Max: 8.859, Min: 8.821, Sum: 70.728)
Cluster-Wide Average, Others: 1.346 ms (Max: 1.452, Min: 1.283, Sum: 10.765)
****** Breakdown Sum: 80.018 ms ******
Cluster-Wide Average, GPU Memory Consumption: 3.718 GB (Max: 4.110, Min: 3.649, Sum: 29.747)
Cluster-Wide Average, Graph-Level Communication Throughput: 26.464 Gbps (Max: 40.850, Min: 8.567, Sum: 211.711)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 0.816 GB
Weight-sync communication (cluster-wide, per-epoch): 0.078 GB
Total communication (cluster-wide, per-epoch): 0.894 GB
****** Accuracy Results ******
Highest valid_acc: 0.9420
Target test_acc: 0.9260
Epoch to reach the target acc: 49
[MPI Rank 4] Success 
[MPI Rank 0] Success 
[MPI Rank 5] Success 
[MPI Rank 1] Success 
[MPI Rank 7] Success 
[MPI Rank 2] Success 
[MPI Rank 6] Success 
[MPI Rank 3] Success 
