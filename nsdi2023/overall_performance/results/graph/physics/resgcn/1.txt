Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
DONE MPI INIT
Initialized node 3 on machine gnerv7
Initialized node 1 on machine gnerv7
DONE MPI INIT
Initialized node 0 on machine gnerv7
DONE MPI INIT
Initialized node 2 on machine gnerv7
DONE MPI INIT
DONE MPI INIT
Initialized node 6 on machine gnerv8
DONE MPI INITDONE MPI INIT
Initialized node 4 on machine gnerv8
Initialized node 5 on machine gnerv8

Initialized node 7 on machine gnerv8
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.012 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.012 seconds.
        It takes 0.013 seconds.
        It takes 0.020 seconds.
Building the CSC structure...
        It takes 0.020 seconds.
Building the CSC structure...
        It takes 0.020 seconds.
Building the CSC structure...
        It takes 0.015 seconds.
        It takes 0.012 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.016 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.011 seconds.
Building the Feature Vector...
        It takes 0.011 seconds.
        It takes 0.012 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.475 seconds.
        It takes 0.476 seconds.
Building the Label Vector...
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.002 seconds.
        It takes 0.510 seconds.
Building the Label Vector...
        It takes 0.506 seconds.
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.007 seconds.
        It takes 0.584 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.605 seconds.
Building the Label Vector...
        It takes 0.004 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/physics/8_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 300
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 1
Number of classes: 5
Number of feature dimensions: 8415
Number of vertices: 34493
Number of GPUs: 8
        It takes 0.607 seconds.
Building the Label Vector...
        It takes 0.612 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.003 seconds.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
34493, 530417, 530417
Number of vertices per chunk: 4312
train nodes 100, valid nodes 500, test nodes 1000
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 4311) 1-[4311, 8623) 2-[8623, 12935) 3-[12935, 17247) 4-[17247, 21558) 5-[21558, 25870) 6-[25870, 30181) 7-[30181, 34493)
34493, 530417, 530417
csr in-out ready !Start Cost Model Initialization...
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
The layer-level communication performance: 60.400 Gbps (per GPU), 483.199 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.112 Gbps (per GPU), 480.898 Gbps (aggregated)
The layer-level communication performance: 60.104 Gbps (per GPU), 480.836 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.861 Gbps (per GPU), 478.885 Gbps (aggregated)
The layer-level communication performance: 59.837 Gbps (per GPU), 478.693 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.616 Gbps (per GPU), 476.929 Gbps (aggregated)
The layer-level communication performance: 59.564 Gbps (per GPU), 476.512 Gbps (aggregated)
The layer-level communication performance: 59.533 Gbps (per GPU), 476.263 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.344 Gbps (per GPU), 1266.755 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.335 Gbps (per GPU), 1266.683 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.350 Gbps (per GPU), 1266.802 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.323 Gbps (per GPU), 1266.587 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.341 Gbps (per GPU), 1266.732 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.323 Gbps (per GPU), 1266.587 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.344 Gbps (per GPU), 1266.755 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.329 Gbps (per GPU), 1266.635 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 104.513 Gbps (per GPU), 836.102 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.513 Gbps (per GPU), 836.102 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.513 Gbps (per GPU), 836.102 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.512 Gbps (per GPU), 836.095 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.458 Gbps (per GPU), 835.664 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.461 Gbps (per GPU), 835.685 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.457 Gbps (per GPU), 835.657 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.351 Gbps (per GPU), 834.812 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 38.681 Gbps (per GPU), 309.449 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.683 Gbps (per GPU), 309.464 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.681 Gbps (per GPU), 309.448 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.678 Gbps (per GPU), 309.423 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.682 Gbps (per GPU), 309.455 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.679 Gbps (per GPU), 309.433 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.681 Gbps (per GPU), 309.446 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.678 Gbps (per GPU), 309.422 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  1.94ms  1.02ms  1.67ms  1.91  4.31K  0.10M
 chk_1  2.02ms  0.98ms  1.67ms  2.06  4.31K  0.10M
 chk_2  2.04ms  0.97ms  1.66ms  2.10  4.31K  0.06M
 chk_3  2.04ms  0.96ms  1.65ms  2.11  4.31K  0.06M
 chk_4  2.03ms  0.95ms  1.64ms  2.13  4.31K  0.04M
 chk_5  2.03ms  0.95ms  1.63ms  2.13  4.31K  0.04M
 chk_6  2.03ms  0.95ms  1.64ms  2.13  4.31K  0.04M
 chk_7  2.03ms  0.95ms  1.64ms  2.13  4.31K  0.06M
   Avg  2.02  0.97  1.65
   Max  2.04  1.02  1.67
   Min  1.94  0.95  1.63
 Ratio  1.05  1.07  1.02
   Var  0.00  0.00  0.00
Profiling takes 0.506 s
*** Node 0, starting model training...
*** Node 2, starting model training...
*** Node 1, starting model training...
*** Node 3, starting model training...
*** Node 4, starting model training...
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 421)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 4311
*** Node 5, starting model training...
*** Node 6, starting model training...
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 421)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 8623, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 421)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 17247, Num Local Vertices: 4311
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 421)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 21558, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 421)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 25870, Num Local Vertices: 4311
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 421)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 30181, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 421)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 4311, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 421)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 12935, Num Local Vertices: 4312
*** Node 3, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 421)...
+++++++++ Node 1 initializing the weights for op[0, 421)...
+++++++++ Node 3 initializing the weights for op[0, 421)...
+++++++++ Node 4 initializing the weights for op[0, 421)...
+++++++++ Node 2 initializing the weights for op[0, 421)...
+++++++++ Node 5 initializing the weights for op[0, 421)...
+++++++++ Node 7 initializing the weights for op[0, 421)...
+++++++++ Node 6 initializing the weights for op[0, 421)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 34236
Node 0, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 4, starting task scheduling...
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000



The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 2.2408	TrainAcc 0.2700	ValidAcc 0.4300	TestAcc 0.4000	BestValid 0.4300
	Epoch 10:	Loss 1.0488	TrainAcc 0.9300	ValidAcc 0.8860	TestAcc 0.9020	BestValid 0.8860
	Epoch 20:	Loss 0.1211	TrainAcc 0.9900	ValidAcc 0.9360	TestAcc 0.9300	BestValid 0.9360
	Epoch 30:	Loss 0.0385	TrainAcc 1.0000	ValidAcc 0.9240	TestAcc 0.9210	BestValid 0.9360
	Epoch 40:	Loss 0.0180	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9270	BestValid 0.9360
	Epoch 50:	Loss 0.0163	TrainAcc 1.0000	ValidAcc 0.9320	TestAcc 0.9260	BestValid 0.9360
	Epoch 60:	Loss 0.0128	TrainAcc 1.0000	ValidAcc 0.9260	TestAcc 0.9210	BestValid 0.9360
	Epoch 70:	Loss 0.0103	TrainAcc 1.0000	ValidAcc 0.9300	TestAcc 0.9210	BestValid 0.9360
	Epoch 80:	Loss 0.0084	TrainAcc 1.0000	ValidAcc 0.9280	TestAcc 0.9210	BestValid 0.9360
	Epoch 90:	Loss 0.0121	TrainAcc 1.0000	ValidAcc 0.9280	TestAcc 0.9200	BestValid 0.9360
	Epoch 100:	Loss 0.0050	TrainAcc 1.0000	ValidAcc 0.9300	TestAcc 0.9190	BestValid 0.9360
	Epoch 110:	Loss 0.0086	TrainAcc 1.0000	ValidAcc 0.9280	TestAcc 0.9200	BestValid 0.9360
	Epoch 120:	Loss 0.0058	TrainAcc 1.0000	ValidAcc 0.9280	TestAcc 0.9200	BestValid 0.9360
	Epoch 130:	Loss 0.0076	TrainAcc 1.0000	ValidAcc 0.9280	TestAcc 0.9200	BestValid 0.9360
	Epoch 140:	Loss 0.0050	TrainAcc 1.0000	ValidAcc 0.9300	TestAcc 0.9210	BestValid 0.9360
	Epoch 150:	Loss 0.0064	TrainAcc 1.0000	ValidAcc 0.9320	TestAcc 0.9220	BestValid 0.9360
	Epoch 160:	Loss 0.0076	TrainAcc 1.0000	ValidAcc 0.9320	TestAcc 0.9230	BestValid 0.9360
	Epoch 170:	Loss 0.0046	TrainAcc 1.0000	ValidAcc 0.9320	TestAcc 0.9220	BestValid 0.9360
	Epoch 180:	Loss 0.0040	TrainAcc 1.0000	ValidAcc 0.9300	TestAcc 0.9220	BestValid 0.9360
	Epoch 190:	Loss 0.0037	TrainAcc 1.0000	ValidAcc 0.9300	TestAcc 0.9210	BestValid 0.9360
	Epoch 200:	Loss 0.0039	TrainAcc 1.0000	ValidAcc 0.9300	TestAcc 0.9220	BestValid 0.9360
	Epoch 210:	Loss 0.0028	TrainAcc 1.0000	ValidAcc 0.9320	TestAcc 0.9220	BestValid 0.9360
	Epoch 220:	Loss 0.0034	TrainAcc 1.0000	ValidAcc 0.9320	TestAcc 0.9220	BestValid 0.9360
	Epoch 230:	Loss 0.0050	TrainAcc 1.0000	ValidAcc 0.9300	TestAcc 0.9210	BestValid 0.9360
	Epoch 240:	Loss 0.0041	TrainAcc 1.0000	ValidAcc 0.9300	TestAcc 0.9210	BestValid 0.9360
	Epoch 250:	Loss 0.0098	TrainAcc 1.0000	ValidAcc 0.9300	TestAcc 0.9210	BestValid 0.9360
	Epoch 260:	Loss 0.0030	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9220	BestValid 0.9360
	Epoch 270:	Loss 0.0019	TrainAcc 1.0000	ValidAcc 0.9320	TestAcc 0.9200	BestValid 0.9360
	Epoch 280:	Loss 0.0031	TrainAcc 1.0000	ValidAcc 0.9300	TestAcc 0.9190	BestValid 0.9360
	Epoch 290:	Loss 0.0040	TrainAcc 1.0000	ValidAcc 0.9300	TestAcc 0.9200	BestValid 0.9360
	Epoch 300:	Loss 0.0018	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9190	BestValid 0.9360
****** Epoch Time (Excluding Evaluation Cost): 0.080 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 0.115 ms (Max: 0.149, Min: 0.047, Sum: 0.922)
Cluster-Wide Average, Compute: 32.085 ms (Max: 33.252, Min: 31.276, Sum: 256.681)
Cluster-Wide Average, Communication-Layer: 0.008 ms (Max: 0.009, Min: 0.007, Sum: 0.065)
Cluster-Wide Average, Bubble-Imbalance: 0.015 ms (Max: 0.015, Min: 0.014, Sum: 0.116)
Cluster-Wide Average, Communication-Graph: 37.643 ms (Max: 38.570, Min: 36.384, Sum: 301.143)
Cluster-Wide Average, Optimization: 8.643 ms (Max: 8.696, Min: 8.588, Sum: 69.145)
Cluster-Wide Average, Others: 1.256 ms (Max: 1.366, Min: 1.147, Sum: 10.046)
****** Breakdown Sum: 79.765 ms ******
Cluster-Wide Average, GPU Memory Consumption: 3.719 GB (Max: 4.112, Min: 3.649, Sum: 29.749)
Cluster-Wide Average, Graph-Level Communication Throughput: 26.029 Gbps (Max: 41.009, Min: 8.346, Sum: 208.236)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 0.816 GB
Weight-sync communication (cluster-wide, per-epoch): 0.078 GB
Total communication (cluster-wide, per-epoch): 0.894 GB
****** Accuracy Results ******
Highest valid_acc: 0.9360
Target test_acc: 0.9300
Epoch to reach the target acc: 19
[MPI Rank 0] Success 
[MPI Rank 4] Success 
[MPI Rank 1] Success 
[MPI Rank 5] Success 
[MPI Rank 2] Success 
[MPI Rank 6] Success 
[MPI Rank 3] Success 
[MPI Rank 7] Success 
