Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
DONE MPI INITInitialized node 5 on machine gnerv8

Initialized node 7 on machine gnerv8
DONE MPI INIT
DONE MPI INIT
Initialized node 4 on machine gnerv8
Initialized node 6 on machine gnerv8
DONE MPI INITDONE MPI INIT
Initialized node 2 on machine gnerv7

Initialized node 0 on machine gnerv7
DONE MPI INIT
Initialized node 1 on machine gnerv7
DONE MPI INIT
Initialized node 3 on machine gnerv7
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.015 seconds.
Building the CSC structure...
        It takes 0.015 seconds.
Building the CSC structure...
        It takes 0.015 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
        It takes 0.011 seconds.
        It takes 0.012 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.012 seconds.
Building the Feature Vector...
        It takes 0.018 seconds.
        It takes 0.019 seconds.
        It takes 0.013 seconds.
        It takes 0.015 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.472 seconds.
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.472 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.512 seconds.
Building the Label Vector...
        It takes 0.512 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.006 seconds.
        It takes 0.565 seconds.
Building the Label Vector...
        It takes 0.004 seconds.
        It takes 0.593 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/physics/8_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 300
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 2
Number of classes: 5
Number of feature dimensions: 8415
Number of vertices: 34493
Number of GPUs: 8
        It takes 0.608 seconds.
Building the Label Vector...
        It takes 0.607 seconds.
Building the Label Vector...
        It takes 0.006 seconds.
        It takes 0.003 seconds.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 4312
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
train nodes 100, valid nodes 500, test nodes 1000
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 4311) 1-[4311, 8623) 2-[8623, 12935) 3-[12935, 17247) 4-[17247, 21558) 5-[21558, 25870) 6-[25870, 30181) 7-[30181, 34493)
34493, 530417, 530417
Number of vertices per chunk: 4312
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
The layer-level communication performance: 60.048 Gbps (per GPU), 480.381 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.750 Gbps (per GPU), 478.004 Gbps (aggregated)
The layer-level communication performance: 59.744 Gbps (per GPU), 477.955 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.905 Gbps (per GPU), 479.240 Gbps (aggregated)
The layer-level communication performance: 59.457 Gbps (per GPU), 475.656 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.230 Gbps (per GPU), 473.841 Gbps (aggregated)
The layer-level communication performance: 59.598 Gbps (per GPU), 476.783 Gbps (aggregated)
The layer-level communication performance: 59.149 Gbps (per GPU), 473.190 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 156.580 Gbps (per GPU), 1252.639 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.403 Gbps (per GPU), 1283.226 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.565 Gbps (per GPU), 1252.522 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.577 Gbps (per GPU), 1252.615 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.559 Gbps (per GPU), 1252.475 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.577 Gbps (per GPU), 1252.615 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.571 Gbps (per GPU), 1252.570 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.568 Gbps (per GPU), 1252.545 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 104.823 Gbps (per GPU), 838.582 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.820 Gbps (per GPU), 838.560 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.823 Gbps (per GPU), 838.581 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.821 Gbps (per GPU), 838.567 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.823 Gbps (per GPU), 838.581 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.817 Gbps (per GPU), 838.539 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.824 Gbps (per GPU), 838.588 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.818 Gbps (per GPU), 838.546 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 39.259 Gbps (per GPU), 314.068 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.260 Gbps (per GPU), 314.078 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.257 Gbps (per GPU), 314.054 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.259 Gbps (per GPU), 314.070 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.255 Gbps (per GPU), 314.041 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.257 Gbps (per GPU), 314.060 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.251 Gbps (per GPU), 314.010 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.250 Gbps (per GPU), 314.001 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  1.95ms  0.99ms  1.68ms  1.97  4.31K  0.10M
 chk_1  2.06ms  0.98ms  1.67ms  2.09  4.31K  0.10M
 chk_2  2.03ms  0.97ms  2.24ms  2.31  4.31K  0.06M
 chk_3  2.04ms  0.97ms  1.66ms  2.11  4.31K  0.06M
 chk_4  2.01ms  0.96ms  1.65ms  2.10  4.31K  0.04M
 chk_5  1.99ms  0.95ms  1.64ms  2.09  4.31K  0.04M
 chk_6  2.00ms  0.96ms  1.65ms  2.10  4.31K  0.04M
 chk_7  2.01ms  0.95ms  1.64ms  2.11  4.31K  0.06M
   Avg  2.01  0.97  1.73
   Max  2.06  0.99  2.24
   Min  1.95  0.95  1.64
 Ratio  1.05  1.04  1.36
   Var  0.00  0.00  0.04
Profiling takes 0.508 s
*** Node 0, starting model training...
*** Node 2, starting model training...
*** Node 3, starting model training...
*** Node 1, starting model training...
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 421)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 4311
*** Node 4, starting model training...
*** Node 5, starting model training...
*** Node 6, starting model training...
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 421)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 21558, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 421)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 17247, Num Local Vertices: 4311
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 421)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 30181, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 421)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 8623, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 421)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 12935, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 421)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 4311, Num Local Vertices: 4312
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 421)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 25870, Num Local Vertices: 4311
*** Node 5, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 421)...
+++++++++ Node 3 initializing the weights for op[0, 421)...
+++++++++ Node 2 initializing the weights for op[0, 421)...
+++++++++ Node 4 initializing the weights for op[0, 421)...
+++++++++ Node 6 initializing the weights for op[0, 421)...
+++++++++ Node 7 initializing the weights for op[0, 421)...
+++++++++ Node 5 initializing the weights for op[0, 421)...
+++++++++ Node 1 initializing the weights for op[0, 421)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 34236
Node 0, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...
*** Node 1, starting task scheduling...
*** Node 4, starting task scheduling...
*** Node 2, starting task scheduling...
*** Node 5, starting task scheduling...
*** Node 3, starting task scheduling...
*** Node 6, starting task scheduling...



*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 1.9221	TrainAcc 0.4300	ValidAcc 0.5740	TestAcc 0.5710	BestValid 0.5740
	Epoch 10:	Loss 0.7279	TrainAcc 0.9100	ValidAcc 0.9220	TestAcc 0.9110	BestValid 0.9220
	Epoch 20:	Loss 0.1055	TrainAcc 1.0000	ValidAcc 0.9280	TestAcc 0.9380	BestValid 0.9280
	Epoch 30:	Loss 0.0451	TrainAcc 1.0000	ValidAcc 0.9360	TestAcc 0.9260	BestValid 0.9360
	Epoch 40:	Loss 0.0235	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9290	BestValid 0.9360
	Epoch 50:	Loss 0.0124	TrainAcc 1.0000	ValidAcc 0.9360	TestAcc 0.9300	BestValid 0.9360
	Epoch 60:	Loss 0.0164	TrainAcc 1.0000	ValidAcc 0.9360	TestAcc 0.9270	BestValid 0.9360
	Epoch 70:	Loss 0.0130	TrainAcc 1.0000	ValidAcc 0.9360	TestAcc 0.9240	BestValid 0.9360
	Epoch 80:	Loss 0.0068	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9240	BestValid 0.9360
	Epoch 90:	Loss 0.0139	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9250	BestValid 0.9360
	Epoch 100:	Loss 0.0108	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9280	BestValid 0.9360
	Epoch 110:	Loss 0.0077	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9260	BestValid 0.9360
	Epoch 120:	Loss 0.0080	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9260	BestValid 0.9360
	Epoch 130:	Loss 0.0097	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9260	BestValid 0.9360
	Epoch 140:	Loss 0.0090	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9260	BestValid 0.9360
	Epoch 150:	Loss 0.0075	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9280	BestValid 0.9360
	Epoch 160:	Loss 0.0049	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9280	BestValid 0.9360
	Epoch 170:	Loss 0.0035	TrainAcc 1.0000	ValidAcc 0.9320	TestAcc 0.9260	BestValid 0.9360
	Epoch 180:	Loss 0.0026	TrainAcc 1.0000	ValidAcc 0.9320	TestAcc 0.9240	BestValid 0.9360
	Epoch 190:	Loss 0.0046	TrainAcc 1.0000	ValidAcc 0.9320	TestAcc 0.9240	BestValid 0.9360
	Epoch 200:	Loss 0.0042	TrainAcc 1.0000	ValidAcc 0.9320	TestAcc 0.9230	BestValid 0.9360
	Epoch 210:	Loss 0.0029	TrainAcc 1.0000	ValidAcc 0.9320	TestAcc 0.9250	BestValid 0.9360
	Epoch 220:	Loss 0.0047	TrainAcc 1.0000	ValidAcc 0.9320	TestAcc 0.9250	BestValid 0.9360
	Epoch 230:	Loss 0.0038	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9250	BestValid 0.9360
	Epoch 240:	Loss 0.0060	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9250	BestValid 0.9360
	Epoch 250:	Loss 0.0039	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9250	BestValid 0.9360
	Epoch 260:	Loss 0.0065	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9250	BestValid 0.9360
	Epoch 270:	Loss 0.0047	TrainAcc 1.0000	ValidAcc 0.9320	TestAcc 0.9250	BestValid 0.9360
	Epoch 280:	Loss 0.0070	TrainAcc 1.0000	ValidAcc 0.9320	TestAcc 0.9280	BestValid 0.9360
	Epoch 290:	Loss 0.0046	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9290	BestValid 0.9360
	Epoch 300:	Loss 0.0036	TrainAcc 1.0000	ValidAcc 0.9340	TestAcc 0.9300	BestValid 0.9360
****** Epoch Time (Excluding Evaluation Cost): 0.080 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 0.095 ms (Max: 0.123, Min: 0.046, Sum: 0.760)
Cluster-Wide Average, Compute: 32.050 ms (Max: 33.017, Min: 31.338, Sum: 256.399)
Cluster-Wide Average, Communication-Layer: 0.008 ms (Max: 0.009, Min: 0.007, Sum: 0.066)
Cluster-Wide Average, Bubble-Imbalance: 0.015 ms (Max: 0.016, Min: 0.014, Sum: 0.119)
Cluster-Wide Average, Communication-Graph: 37.406 ms (Max: 38.225, Min: 36.346, Sum: 299.250)
Cluster-Wide Average, Optimization: 8.705 ms (Max: 8.745, Min: 8.654, Sum: 69.638)
Cluster-Wide Average, Others: 1.260 ms (Max: 1.365, Min: 1.162, Sum: 10.077)
****** Breakdown Sum: 79.539 ms ******
Cluster-Wide Average, GPU Memory Consumption: 3.719 GB (Max: 4.112, Min: 3.649, Sum: 29.749)
Cluster-Wide Average, Graph-Level Communication Throughput: 26.191 Gbps (Max: 40.963, Min: 8.353, Sum: 209.529)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 0.816 GB
Weight-sync communication (cluster-wide, per-epoch): 0.078 GB
Total communication (cluster-wide, per-epoch): 0.894 GB
****** Accuracy Results ******
Highest valid_acc: 0.9360
Target test_acc: 0.9260
Epoch to reach the target acc: 29
[MPI Rank 0] Success 
[MPI Rank 1] Success 
[MPI Rank 4] Success 
[MPI Rank 2] Success 
[MPI Rank 5] Success 
[MPI Rank 3] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
