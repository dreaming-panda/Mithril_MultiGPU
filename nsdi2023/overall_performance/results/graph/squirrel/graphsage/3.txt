Initialized node 0 on machine gnerv2
Initialized node 1 on machine gnerv2
Initialized node 2 on machine gnerv2
Initialized node 3 on machine gnerv2
Initialized node 4 on machine gnerv3
Initialized node 5 on machine gnerv3
Initialized node 6 on machine gnerv3
Initialized node 7 on machine gnerv3
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.007 seconds.
Building the CSC structure...
        It takes 0.008 seconds.
Building the CSC structure...
        It takes 0.008 seconds.
Building the CSC structure...
        It takes 0.009 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.012 seconds.
Building the CSC structure...
        It takes 0.013 seconds.
Building the CSC structure...
        It takes 0.006 seconds.
Building the Feature Vector...
        It takes 0.008 seconds.
        It takes 0.009 seconds.
        It takes 0.006 seconds.
        It takes 0.010 seconds.
        It takes 0.018 seconds.
Building the CSC structure...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.011 seconds.
        It takes 0.012 seconds.
Building the Feature Vector...
        It takes 0.009 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.022 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/squirrel/8_parts
The number of GCNII layers: 32
The number of hidden units: 1000
The number of training epoches: 1000
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 3
Number of classes: 5
Number of feature dimensions: 2089
Number of vertices: 5201
Number of GPUs: 8
        It takes 0.023 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.024 seconds.
Building the Label Vector...
        It takes 0.024 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.000 seconds.
        It takes 0.026 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.023 seconds.
Building the Label Vector...
        It takes 0.026 seconds.
        It takes 0.000 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.023 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 651
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 651
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 651
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 651
5201, 401907, 401907
Number of vertices per chunk: 651
train nodes 2496, valid nodes 1664, test nodes 1041
GPU 0, layer [0, 32)
Chunks (number of global chunks: 8): 0-[0, 651) 1-[651, 1301) 2-[1301, 1951) 3-[1951, 2601) 4-[2601, 3251) 5-[3251, 3901) 6-[3901, 4551) 7-[4551, 5201)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
5201, 401907, 401907
Number of vertices per chunk: 651
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
5201, 401907, 401907
Number of vertices per chunk: 651
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 651
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 59.548 Gbps (per GPU), 476.386 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.250 Gbps (per GPU), 474.001 Gbps (aggregated)
The layer-level communication performance: 59.257 Gbps (per GPU), 474.055 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.969 Gbps (per GPU), 471.749 Gbps (aggregated)
The layer-level communication performance: 58.999 Gbps (per GPU), 471.990 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.757 Gbps (per GPU), 470.057 Gbps (aggregated)
The layer-level communication performance: 58.714 Gbps (per GPU), 469.712 Gbps (aggregated)
The layer-level communication performance: 58.675 Gbps (per GPU), 469.400 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 155.489 Gbps (per GPU), 1243.909 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 155.460 Gbps (per GPU), 1243.677 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 155.497 Gbps (per GPU), 1243.978 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 155.503 Gbps (per GPU), 1244.025 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 155.500 Gbps (per GPU), 1244.001 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 155.515 Gbps (per GPU), 1244.121 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 155.494 Gbps (per GPU), 1243.955 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 155.500 Gbps (per GPU), 1244.001 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 100.482 Gbps (per GPU), 803.859 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.484 Gbps (per GPU), 803.872 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.486 Gbps (per GPU), 803.885 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.486 Gbps (per GPU), 803.891 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.485 Gbps (per GPU), 803.879 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.486 Gbps (per GPU), 803.885 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.486 Gbps (per GPU), 803.892 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.470 Gbps (per GPU), 803.757 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 35.929 Gbps (per GPU), 287.434 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 35.932 Gbps (per GPU), 287.458 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 35.931 Gbps (per GPU), 287.449 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 35.933 Gbps (per GPU), 287.463 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 35.926 Gbps (per GPU), 287.410 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 35.930 Gbps (per GPU), 287.442 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 35.930 Gbps (per GPU), 287.443 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 35.920 Gbps (per GPU), 287.360 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  2.66ms  2.04ms  1.24ms  2.13  0.65K  0.22M
 chk_1  2.05ms  1.35ms  0.53ms  3.89  0.65K  0.05M
 chk_2  1.91ms  1.20ms  0.39ms  4.93  0.65K  0.02M
 chk_3  1.93ms  1.21ms  0.40ms  4.83  0.65K  0.02M
 chk_4  1.87ms  1.15ms  0.34ms  5.55  0.65K  0.01M
 chk_5  1.87ms  1.14ms  0.33ms  5.63  0.65K  0.01M
 chk_6  2.07ms  1.34ms  0.54ms  3.85  0.65K  0.06M
 chk_7  1.88ms  1.16ms  0.36ms  5.26  0.65K  0.01M
   Avg  2.03  1.32  0.52
   Max  2.66  2.04  1.24
   Min  1.87  1.14  0.33
 Ratio  1.42  1.79  3.76
   Var  0.06  0.08  0.08
Profiling takes 0.423 s
Evaluating the performance of the pure model-parallel execution plan.
The bottleneck stage in the optimal plan: 46.513 ms
Partition 0 [0, 3) has cost: 37.428 ms
Partition 1 [3, 7) has cost: 42.392 ms
Partition 2 [7, 11) has cost: 42.392 ms
Partition 3 [11, 15) has cost: 42.392 ms
Partition 4 [15, 19) has cost: 42.392 ms
Partition 5 [19, 23) has cost: 42.392 ms
Partition 6 [23, 27) has cost: 42.392 ms
Partition 7 [27, 32) has cost: 46.513 ms
The optimal partitioning:
[0, 3)
[3, 7)
[7, 11)
[11, 15)
[15, 19)
[19, 23)
[23, 27)
[27, 32)
****** Estimating the Forwarding Pipeline Cost ******
Simulation Results: Total Runtime: 37.044 ms
GPU 0, Compute+Comm Time: 14.179 ms, Bubble Time: 13.915 ms, Imbalance Overhead: 8.950 ms
GPU 1, Compute+Comm Time: 15.484 ms, Bubble Time: 14.239 ms, Imbalance Overhead: 7.321 ms
GPU 2, Compute+Comm Time: 15.484 ms, Bubble Time: 15.179 ms, Imbalance Overhead: 6.381 ms
GPU 3, Compute+Comm Time: 15.484 ms, Bubble Time: 16.120 ms, Imbalance Overhead: 5.440 ms
GPU 4, Compute+Comm Time: 15.484 ms, Bubble Time: 17.060 ms, Imbalance Overhead: 4.500 ms
GPU 5, Compute+Comm Time: 15.484 ms, Bubble Time: 18.001 ms, Imbalance Overhead: 3.559 ms
GPU 6, Compute+Comm Time: 15.484 ms, Bubble Time: 18.764 ms, Imbalance Overhead: 2.795 ms
GPU 7, Compute+Comm Time: 16.842 ms, Bubble Time: 19.819 ms, Imbalance Overhead: 0.382 ms
****** Estimating the Backwarding Pipeline Cost *******
Simulation Results: Total Runtime: 76.823 ms
GPU 0, Compute+Comm Time: 35.261 ms, Bubble Time: 40.755 ms, Imbalance Overhead: 0.807 ms
GPU 1, Compute+Comm Time: 32.498 ms, Bubble Time: 38.667 ms, Imbalance Overhead: 5.659 ms
GPU 2, Compute+Comm Time: 32.498 ms, Bubble Time: 37.177 ms, Imbalance Overhead: 7.149 ms
GPU 3, Compute+Comm Time: 32.498 ms, Bubble Time: 35.327 ms, Imbalance Overhead: 8.998 ms
GPU 4, Compute+Comm Time: 32.498 ms, Bubble Time: 33.477 ms, Imbalance Overhead: 10.848 ms
GPU 5, Compute+Comm Time: 32.498 ms, Bubble Time: 31.627 ms, Imbalance Overhead: 12.698 ms
GPU 6, Compute+Comm Time: 32.498 ms, Bubble Time: 29.777 ms, Imbalance Overhead: 14.548 ms
GPU 7, Compute+Comm Time: 28.838 ms, Bubble Time: 29.277 ms, Imbalance Overhead: 18.708 ms
The estimated cost of the whole pipeline: 119.560 ms

Evaluating the hybrid-parallelism execution plan with 2 DP ways.
The bottleneck stage in the optimal plan: 88.905 ms
Partition 0 [0, 7) has cost: 79.819 ms
Partition 1 [7, 15) has cost: 84.783 ms
Partition 2 [15, 23) has cost: 84.783 ms
Partition 3 [23, 32) has cost: 88.905 ms
****** Estimating the Forwarding Pipeline Cost ******
Simulation Results: Total Runtime: 38.963 ms
GPU 0, Compute+Comm Time: 18.179 ms, Bubble Time: 13.693 ms, Imbalance Overhead: 7.092 ms
GPU 1, Compute+Comm Time: 19.332 ms, Bubble Time: 14.820 ms, Imbalance Overhead: 4.812 ms
GPU 2, Compute+Comm Time: 19.332 ms, Bubble Time: 16.457 ms, Imbalance Overhead: 3.174 ms
GPU 3, Compute+Comm Time: 20.499 ms, Bubble Time: 18.465 ms, Imbalance Overhead: 0.000 ms
****** Estimating the Backwarding Pipeline Cost *******
Simulation Results: Total Runtime: 76.484 ms
GPU 0, Compute+Comm Time: 40.152 ms, Bubble Time: 36.332 ms, Imbalance Overhead: 0.000 ms
GPU 1, Compute+Comm Time: 38.074 ms, Bubble Time: 32.271 ms, Imbalance Overhead: 6.138 ms
GPU 2, Compute+Comm Time: 38.074 ms, Bubble Time: 28.998 ms, Imbalance Overhead: 9.412 ms
GPU 3, Compute+Comm Time: 35.515 ms, Bubble Time: 26.796 ms, Imbalance Overhead: 14.173 ms
    The estimated cost with 2 DP ways is 121.219 ms

Evaluating the hybrid-parallelism execution plan with 4 DP ways.
The bottleneck stage in the optimal plan: 173.688 ms
Partition 0 [0, 15) has cost: 164.602 ms
Partition 1 [15, 32) has cost: 173.688 ms
****** Estimating the Forwarding Pipeline Cost ******
Simulation Results: Total Runtime: 46.360 ms
GPU 0, Compute+Comm Time: 28.121 ms, Bubble Time: 13.282 ms, Imbalance Overhead: 4.957 ms
GPU 1, Compute+Comm Time: 30.559 ms, Bubble Time: 15.801 ms, Imbalance Overhead: 0.000 ms
****** Estimating the Backwarding Pipeline Cost *******
Simulation Results: Total Runtime: 79.635 ms
GPU 0, Compute+Comm Time: 52.104 ms, Bubble Time: 27.531 ms, Imbalance Overhead: 0.000 ms
GPU 1, Compute+Comm Time: 48.221 ms, Bubble Time: 22.140 ms, Imbalance Overhead: 9.275 ms
    The estimated cost with 4 DP ways is 132.295 ms

Evaluating the hybrid-parallelism execution plan with 8 DP ways.
The bottleneck stage in the optimal plan: 338.290 ms
Partition 0 [0, 32) has cost: 338.290 ms
****** Estimating the Forwarding Pipeline Cost ******
Simulation Results: Total Runtime: 85.263 ms
GPU 0, Compute+Comm Time: 85.263 ms, Bubble Time: 0.000 ms, Imbalance Overhead: 0.000 ms
****** Estimating the Backwarding Pipeline Cost *******
Simulation Results: Total Runtime: 109.680 ms
GPU 0, Compute+Comm Time: 109.680 ms, Bubble Time: 0.000 ms, Imbalance Overhead: 0.000 ms
    The estimated cost with 8 DP ways is 204.690 ms

*** Node 4, starting model training...
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 257)
*** Node 4, constructing the helper classes...
*** Node 0, starting model training...
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 257)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 651
*** Node 5, starting model training...
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 257)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 3251, Num Local Vertices: 650
*** Node 1, starting model training...
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 257)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 651, Num Local Vertices: 650
*** Node 6, starting model training...
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 257)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 3901, Num Local Vertices: 650
*** Node 2, starting model training...
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 257)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 1301, Num Local Vertices: 650
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 257)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 4551, Num Local Vertices: 650
*** Node 3, starting model training...
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 257)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 1951, Num Local Vertices: 650
Node 4, Local Vertex Begin: 2601, Num Local Vertices: 650
*** Node 1, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
+++++++++ Node 4 initializing the weights for op[0, 257)...
+++++++++ Node 1 initializing the weights for op[0, 257)...
+++++++++ Node 0 initializing the weights for op[0, 257)...
+++++++++ Node 5 initializing the weights for op[0, 257)...
+++++++++ Node 2 initializing the weights for op[0, 257)...
+++++++++ Node 3 initializing the weights for op[0, 257)...
+++++++++ Node 6 initializing the weights for op[0, 257)...
+++++++++ Node 7 initializing the weights for op[0, 257)...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be received across the graph boundary.
The number of mirror vertices: 11547
Node 0, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 4, starting task scheduling...
*** Node 0, starting task scheduling...



*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 50:	Loss 1.6093	TrainAcc 0.2003	ValidAcc 0.2007	TestAcc 0.1979	BestValid 0.2007
	Epoch 100:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 150:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 200:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 250:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 300:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 350:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 400:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 450:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 500:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 550:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 600:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 650:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 700:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 750:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 800:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 850:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 900:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 950:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1000:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
****** Epoch Time (Excluding Evaluation Cost): 0.268 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 0.283 ms (Max: 0.436, Min: 0.040, Sum: 2.262)
Cluster-Wide Average, Compute: 50.841 ms (Max: 73.313, Min: 44.729, Sum: 406.730)
Cluster-Wide Average, Communication-Layer: 0.009 ms (Max: 0.010, Min: 0.007, Sum: 0.068)
Cluster-Wide Average, Bubble-Imbalance: 0.016 ms (Max: 0.018, Min: 0.014, Sum: 0.130)
Cluster-Wide Average, Communication-Graph: 123.113 ms (Max: 129.239, Min: 100.750, Sum: 984.900)
Cluster-Wide Average, Optimization: 88.859 ms (Max: 89.179, Min: 88.716, Sum: 710.869)
Cluster-Wide Average, Others: 4.857 ms (Max: 4.904, Min: 4.822, Sum: 38.858)
****** Breakdown Sum: 267.977 ms ******
Cluster-Wide Average, GPU Memory Consumption: 6.250 GB (Max: 6.630, Min: 6.182, Sum: 49.999)
Cluster-Wide Average, Graph-Level Communication Throughput: 26.018 Gbps (Max: 47.443, Min: 8.783, Sum: 208.144)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 2.753 GB
Weight-sync communication (cluster-wide, per-epoch): 3.348 GB
Total communication (cluster-wide, per-epoch): 6.101 GB
****** Accuracy Results ******
Highest valid_acc: 0.2055
Target test_acc: 0.2046
Epoch to reach the target acc: 99
[MPI Rank 4] Success 
[MPI Rank 0] Success 
[MPI Rank 5] Success 
[MPI Rank 1] Success 
[MPI Rank 6] Success 
[MPI Rank 2] Success 
[MPI Rank 7] Success 
[MPI Rank 3] Success 
