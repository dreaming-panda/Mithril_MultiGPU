Initialized node 1 on machine gnerv2
Initialized node 3 on machine gnerv2
Initialized node 0 on machine gnerv2
Initialized node 2 on machine gnerv2
Initialized node 4 on machine gnerv3
Initialized node 5 on machine gnerv3
Initialized node 6 on machine gnerv3
Initialized node 7 on machine gnerv3
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.008 seconds.
Building the CSC structure...
        It takes 0.008 seconds.
Building the CSC structure...
        It takes 0.009 seconds.
Building the CSC structure...
        It takes 0.008 seconds.
Building the CSC structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.014 seconds.
Building the CSC structure...
        It takes 0.012 seconds.
Building the CSC structure...
        It takes 0.008 seconds.
        It takes 0.010 seconds.
        It takes 0.008 seconds.
        It takes 0.008 seconds.
Building the Feature Vector...
        It takes 0.009 seconds.
        It takes 0.008 seconds.
        It takes 0.008 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.015 seconds.
Building the Feature Vector...
        It takes 0.022 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.022 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/squirrel/8_parts
The number of GCNII layers: 32
The number of hidden units: 1000
The number of training epoches: 5000
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 2
Number of classes: 5
Number of feature dimensions: 2089
Number of vertices: 5201
Number of GPUs: 8
        It takes 0.022 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.028 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.026 seconds.
Building the Label Vector...
        It takes 0.030 seconds.
        It takes 0.000 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.027 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.027 seconds.
Building the Label Vector...
        It takes 0.001 seconds.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 651
5201, 401907, 401907
Number of vertices per chunk: 651
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 651
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
train nodes 2496, valid nodes 1664, test nodes 1041
GPU 0, layer [0, 32)
Chunks (number of global chunks: 8): 0-[0, 651) 1-[651, 1301) 2-[1301, 1951) 3-[1951, 2601) 4-[2601, 3251)WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
 5-[3251, 3901) 6-[3901, 4551) 7-[4551, 5201)
5201, 401907, 401907
Number of vertices per chunk: 651
csr in-out ready !Start Cost Model Initialization...
5201, 401907, 401907
Number of vertices per chunk: 651
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
5201, 401907, 401907
Number of vertices per chunk: 651
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 651
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 651
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 59.857 Gbps (per GPU), 478.858 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.553 Gbps (per GPU), 476.425 Gbps (aggregated)
The layer-level communication performance: 59.558 Gbps (per GPU), 476.464 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.277 Gbps (per GPU), 474.215 Gbps (aggregated)
The layer-level communication performance: 59.302 Gbps (per GPU), 474.414 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.068 Gbps (per GPU), 472.547 Gbps (aggregated)
The layer-level communication performance: 58.994 Gbps (per GPU), 471.950 Gbps (aggregated)
The layer-level communication performance: 59.024 Gbps (per GPU), 472.193 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 157.894 Gbps (per GPU), 1263.154 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.906 Gbps (per GPU), 1263.249 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.894 Gbps (per GPU), 1263.154 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.915 Gbps (per GPU), 1263.321 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.885 Gbps (per GPU), 1263.081 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.790 Gbps (per GPU), 1262.323 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.886 Gbps (per GPU), 1263.087 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.805 Gbps (per GPU), 1262.441 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 100.944 Gbps (per GPU), 807.548 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.943 Gbps (per GPU), 807.542 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.939 Gbps (per GPU), 807.516 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.944 Gbps (per GPU), 807.555 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.944 Gbps (per GPU), 807.548 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.944 Gbps (per GPU), 807.548 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.941 Gbps (per GPU), 807.528 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.942 Gbps (per GPU), 807.535 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 34.547 Gbps (per GPU), 276.377 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.549 Gbps (per GPU), 276.391 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.542 Gbps (per GPU), 276.336 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.542 Gbps (per GPU), 276.333 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.544 Gbps (per GPU), 276.355 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.543 Gbps (per GPU), 276.346 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.542 Gbps (per GPU), 276.333 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.538 Gbps (per GPU), 276.303 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  2.61ms  2.05ms  1.23ms  2.13  0.65K  0.22M
 chk_1  2.05ms  1.32ms  0.51ms  4.01  0.65K  0.05M
 chk_2  1.88ms  1.21ms  0.38ms  5.02  0.65K  0.02M
 chk_3  1.89ms  1.18ms  0.39ms  4.87  0.65K  0.02M
 chk_4  1.83ms  1.12ms  0.33ms  5.61  0.65K  0.01M
 chk_5  1.83ms  1.11ms  0.32ms  5.69  0.65K  0.01M
 chk_6  2.04ms  1.31ms  0.53ms  3.88  0.65K  0.06M
 chk_7  1.86ms  1.14ms  0.35ms  5.36  0.65K  0.01M
   Avg  2.00  1.31  0.50
   Max  2.61  2.05  1.23
   Min  1.83  1.11  0.32
 Ratio  1.43  1.84  3.81
   Var  0.06  0.08  0.08
Profiling takes 0.420 s
Evaluating the performance of the pure model-parallel execution plan.
The bottleneck stage in the optimal plan: 45.800 ms
Partition 0 [0, 3) has cost: 36.886 ms
Partition 1 [3, 7) has cost: 41.779 ms
Partition 2 [7, 11) has cost: 41.779 ms
Partition 3 [11, 15) has cost: 41.779 ms
Partition 4 [15, 19) has cost: 41.779 ms
Partition 5 [19, 23) has cost: 41.779 ms
Partition 6 [23, 27) has cost: 41.779 ms
Partition 7 [27, 32) has cost: 45.800 ms
The optimal partitioning:
[0, 3)
[3, 7)
[7, 11)
[11, 15)
[15, 19)
[19, 23)
[23, 27)
[27, 32)
****** Estimating the Forwarding Pipeline Cost ******
Simulation Results: Total Runtime: 36.856 ms
GPU 0, Compute+Comm Time: 13.974 ms, Bubble Time: 13.649 ms, Imbalance Overhead: 9.232 ms
GPU 1, Compute+Comm Time: 15.251 ms, Bubble Time: 13.997 ms, Imbalance Overhead: 7.607 ms
GPU 2, Compute+Comm Time: 15.251 ms, Bubble Time: 14.988 ms, Imbalance Overhead: 6.616 ms
GPU 3, Compute+Comm Time: 15.251 ms, Bubble Time: 15.980 ms, Imbalance Overhead: 5.625 ms
GPU 4, Compute+Comm Time: 15.251 ms, Bubble Time: 16.971 ms, Imbalance Overhead: 4.634 ms
GPU 5, Compute+Comm Time: 15.251 ms, Bubble Time: 17.962 ms, Imbalance Overhead: 3.642 ms
GPU 6, Compute+Comm Time: 15.251 ms, Bubble Time: 18.780 ms, Imbalance Overhead: 2.825 ms
GPU 7, Compute+Comm Time: 16.581 ms, Bubble Time: 19.887 ms, Imbalance Overhead: 0.388 ms
****** Estimating the Backwarding Pipeline Cost *******
Simulation Results: Total Runtime: 76.444 ms
GPU 0, Compute+Comm Time: 34.780 ms, Bubble Time: 40.925 ms, Imbalance Overhead: 0.739 ms
GPU 1, Compute+Comm Time: 32.089 ms, Bubble Time: 38.752 ms, Imbalance Overhead: 5.603 ms
GPU 2, Compute+Comm Time: 32.089 ms, Bubble Time: 37.142 ms, Imbalance Overhead: 7.213 ms
GPU 3, Compute+Comm Time: 32.089 ms, Bubble Time: 35.181 ms, Imbalance Overhead: 9.174 ms
GPU 4, Compute+Comm Time: 32.089 ms, Bubble Time: 33.219 ms, Imbalance Overhead: 11.136 ms
GPU 5, Compute+Comm Time: 32.089 ms, Bubble Time: 31.258 ms, Imbalance Overhead: 13.097 ms
GPU 6, Compute+Comm Time: 32.089 ms, Bubble Time: 29.296 ms, Imbalance Overhead: 15.059 ms
GPU 7, Compute+Comm Time: 28.473 ms, Bubble Time: 28.712 ms, Imbalance Overhead: 19.259 ms
The estimated cost of the whole pipeline: 118.965 ms

Evaluating the hybrid-parallelism execution plan with 2 DP ways.
The bottleneck stage in the optimal plan: 87.579 ms
Partition 0 [0, 7) has cost: 78.665 ms
Partition 1 [7, 15) has cost: 83.558 ms
Partition 2 [15, 23) has cost: 83.558 ms
Partition 3 [23, 32) has cost: 87.579 ms
****** Estimating the Forwarding Pipeline Cost ******
Simulation Results: Total Runtime: 38.740 ms
GPU 0, Compute+Comm Time: 17.959 ms, Bubble Time: 13.425 ms, Imbalance Overhead: 7.357 ms
GPU 1, Compute+Comm Time: 19.096 ms, Bubble Time: 14.617 ms, Imbalance Overhead: 5.027 ms
GPU 2, Compute+Comm Time: 19.096 ms, Bubble Time: 16.360 ms, Imbalance Overhead: 3.284 ms
GPU 3, Compute+Comm Time: 20.244 ms, Bubble Time: 18.496 ms, Imbalance Overhead: 0.000 ms
****** Estimating the Backwarding Pipeline Cost *******
Simulation Results: Total Runtime: 76.040 ms
GPU 0, Compute+Comm Time: 39.593 ms, Bubble Time: 36.447 ms, Imbalance Overhead: 0.000 ms
GPU 1, Compute+Comm Time: 37.564 ms, Bubble Time: 32.114 ms, Imbalance Overhead: 6.362 ms
GPU 2, Compute+Comm Time: 37.564 ms, Bubble Time: 28.609 ms, Imbalance Overhead: 9.867 ms
GPU 3, Compute+Comm Time: 35.047 ms, Bubble Time: 26.200 ms, Imbalance Overhead: 14.794 ms
    The estimated cost with 2 DP ways is 120.519 ms

Evaluating the hybrid-parallelism execution plan with 4 DP ways.
The bottleneck stage in the optimal plan: 171.138 ms
Partition 0 [0, 15) has cost: 162.224 ms
Partition 1 [15, 32) has cost: 171.138 ms
****** Estimating the Forwarding Pipeline Cost ******
Simulation Results: Total Runtime: 46.255 ms
GPU 0, Compute+Comm Time: 28.015 ms, Bubble Time: 13.146 ms, Imbalance Overhead: 5.095 ms
GPU 1, Compute+Comm Time: 30.446 ms, Bubble Time: 15.809 ms, Imbalance Overhead: 0.000 ms
****** Estimating the Backwarding Pipeline Cost *******
Simulation Results: Total Runtime: 79.378 ms
GPU 0, Compute+Comm Time: 51.792 ms, Bubble Time: 27.586 ms, Imbalance Overhead: 0.000 ms
GPU 1, Compute+Comm Time: 47.934 ms, Bubble Time: 21.744 ms, Imbalance Overhead: 9.700 ms
    The estimated cost with 4 DP ways is 131.915 ms

Evaluating the hybrid-parallelism execution plan with 8 DP ways.
The bottleneck stage in the optimal plan: 333.362 ms
Partition 0 [0, 32) has cost: 333.362 ms
****** Estimating the Forwarding Pipeline Cost ******
Simulation Results: Total Runtime: 87.969 ms
GPU 0, Compute+Comm Time: 87.969 ms, Bubble Time: 0.000 ms, Imbalance Overhead: 0.000 ms
****** Estimating the Backwarding Pipeline Cost *******
Simulation Results: Total Runtime: 112.494 ms
GPU 0, Compute+Comm Time: 112.494 ms, Bubble Time: 0.000 ms, Imbalance Overhead: 0.000 ms
    The estimated cost with 8 DP ways is 210.487 ms

*** Node 4, starting model training...
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 257)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 2601, Num Local Vertices: 650
*** Node 0, starting model training...
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 257)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 651
*** Node 5, starting model training...
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 257)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 3251, Num Local Vertices: 650
*** Node 1, starting model training...
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 257)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 651, Num Local Vertices: 650
*** Node 6, starting model training...
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 257)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 3901, Num Local Vertices: 650
*** Node 2, starting model training...
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 257)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 1301, Num Local Vertices: 650
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 257)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 4551, Num Local Vertices: 650
*** Node 3, starting model training...
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 257)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 1951, Num Local Vertices: 650
*** Node 5, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
+++++++++ Node 5 initializing the weights for op[0, 257)...
+++++++++ Node 4 initializing the weights for op[0, 257)...
+++++++++ Node 1 initializing the weights for op[0, 257)...
+++++++++ Node 7 initializing the weights for op[0, 257)...
+++++++++ Node 0 initializing the weights for op[0, 257)...
+++++++++ Node 6 initializing the weights for op[0, 257)...
+++++++++ Node 2 initializing the weights for op[0, 257)...
+++++++++ Node 3 initializing the weights for op[0, 257)...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be received across the graph boundary.
The number of mirror vertices: 11547
Node 0, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 0, starting task scheduling...



The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 50:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 100:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 150:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 200:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 250:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 300:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 350:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 400:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 450:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 500:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 550:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 600:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 650:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 700:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 750:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 800:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 850:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 900:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 950:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1000:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1050:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1100:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1150:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1200:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1250:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1300:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1350:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1400:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1450:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1500:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1550:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1600:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1650:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1700:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1750:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1800:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1850:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1900:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 1950:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2000:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2050:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2100:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2150:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2200:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2250:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2300:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2350:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2400:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2450:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2500:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2550:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2600:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2650:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2700:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2750:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2800:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2850:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2900:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 2950:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3000:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3050:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3100:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3150:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3200:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3250:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3300:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3350:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3400:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3450:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3500:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3550:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3600:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3650:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3700:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3750:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3800:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3850:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3900:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 3950:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 4000:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 4050:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 4100:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 4150:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 4200:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 4250:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
	Epoch 4300:	Loss 1.6094	TrainAcc 0.1951	ValidAcc 0.2055	TestAcc 0.2046	BestValid 0.2055
