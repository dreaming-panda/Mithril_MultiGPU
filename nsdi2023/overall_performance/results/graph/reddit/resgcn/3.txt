Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INITDONE MPI INIT
Initialized node 4 on machine gnerv3

DONE MPI INITInitialized node 7 on machine gnerv3

Initialized node 5 on machine gnerv3
DONE MPI INIT
Initialized node 6 on machine gnerv3
DONE MPI INIT
DONE MPI INITDONE MPI INIT
DONE MPI INIT
Initialized node 1 on machine gnerv2
Initialized node 2 on machine gnerv2
Initialized node 0 on machine gnerv2

Initialized node 3 on machine gnerv2
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 2.317 seconds.
Building the CSC structure...
        It takes 2.492 seconds.
Building the CSC structure...
        It takes 2.615 seconds.
Building the CSC structure...
        It takes 2.663 seconds.
Building the CSC structure...
        It takes 2.959 seconds.
Building the CSC structure...
        It takes 2.959 seconds.
Building the CSC structure...
        It takes 2.959 seconds.
Building the CSC structure...
        It takes 2.960 seconds.
Building the CSC structure...
        It takes 2.242 seconds.
        It takes 2.395 seconds.
        It takes 2.367 seconds.
        It takes 2.555 seconds.
Building the Feature Vector...
        It takes 2.884 seconds.
        It takes 2.884 seconds.
        It takes 2.883 seconds.
        It takes 2.884 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.837 seconds.
Building the Label Vector...
Building the Feature Vector...
        It takes 0.342 seconds.
Building the Label Vector...
        It takes 0.070 seconds.
        It takes 0.036 seconds.
        It takes 0.314 seconds.
Building the Label Vector...
        It takes 0.045 seconds.
        It takes 0.286 seconds.
Building the Label Vector...
        It takes 0.032 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 29121
        It takes 0.915 seconds.
        It takes 0.904 seconds.
        It takes 0.728 seconds.
        It takes 0.821 seconds.
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
        It takes 0.053 seconds.
        It takes 0.053 seconds.
        It takes 0.053 seconds.
        It takes 0.053 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/reddit/8_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 5000
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 3
Number of classes: 41
Number of feature dimensions: 602
Number of vertices: 232965
Number of GPUs: 8
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
train nodes 153431, valid nodes 23831, test nodes 55703
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 29120) 1-[29120, 58241) 2-[58241, 87362) 3-[87362, 116483) 4-[116483, 145604) 5-[145604, 174724) 6-[174724, 203845) 7-[203845, 232965)
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
232965, 114848857, 114848857
Number of vertices per chunk: 29121
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 54.823 Gbps (per GPU), 438.585 Gbps (aggregated)
The layer-level communication performance: 54.703 Gbps (per GPU), 437.620 Gbps (aggregated)
The layer-level communication performance: 54.592 Gbps (per GPU), 436.738 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 54.385 Gbps (per GPU), 435.080 Gbps (aggregated)
The layer-level communication performance: 54.364 Gbps (per GPU), 434.911 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 54.187 Gbps (per GPU), 433.499 Gbps (aggregated)
The layer-level communication performance: 54.233 Gbps (per GPU), 433.866 Gbps (aggregated)
The layer-level communication performance: 54.117 Gbps (per GPU), 432.939 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 157.547 Gbps (per GPU), 1260.379 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.527 Gbps (per GPU), 1260.213 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.538 Gbps (per GPU), 1260.308 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.530 Gbps (per GPU), 1260.237 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.536 Gbps (per GPU), 1260.285 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.532 Gbps (per GPU), 1260.260 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.541 Gbps (per GPU), 1260.331 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.530 Gbps (per GPU), 1260.237 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 102.176 Gbps (per GPU), 817.411 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.176 Gbps (per GPU), 817.404 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.176 Gbps (per GPU), 817.404 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.176 Gbps (per GPU), 817.404 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.176 Gbps (per GPU), 817.404 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.177 Gbps (per GPU), 817.417 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.175 Gbps (per GPU), 817.397 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.177 Gbps (per GPU), 817.417 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 36.151 Gbps (per GPU), 289.207 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.151 Gbps (per GPU), 289.205 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.151 Gbps (per GPU), 289.205 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.150 Gbps (per GPU), 289.197 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.150 Gbps (per GPU), 289.196 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.149 Gbps (per GPU), 289.193 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.151 Gbps (per GPU), 289.208 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.149 Gbps (per GPU), 289.193 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0 10.16ms 11.43ms 13.79ms  1.36 29.12K 14.23M
 chk_1  5.82ms  7.08ms  9.39ms  1.61 29.12K  6.56M
 chk_2 17.14ms 18.50ms 20.84ms  1.22 29.12K 24.68M
 chk_3 17.42ms 18.82ms 20.96ms  1.20 29.12K 22.95M
 chk_4  5.63ms  6.89ms  9.25ms  1.64 29.12K  6.33M
 chk_5  9.49ms 10.79ms 13.22ms  1.39 29.12K 12.05M
 chk_6 10.81ms 11.98ms 14.26ms  1.32 29.12K 14.60M
 chk_7 10.08ms 11.06ms 13.36ms  1.32 29.12K 13.21M
   Avg 10.82 12.07 14.38
   Max 17.42 18.82 20.96
   Min  5.63  6.89  9.25
 Ratio  3.09  2.73  2.26
   Var 17.28 17.72 17.35
Profiling takes 3.396 s
*** Node 0, starting model training...
*** Node 1, starting model training...
*** Node 2, starting model training...
*** Node 4, starting model training...
*** Node 6, starting model training...
Num Stages: 1 / 1
*** Node 7, starting model training...
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 3, starting model training...
*** Node 0 owns the model-level partition [0, 421)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 29120
*** Node 5, starting model training...
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 421)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 174724, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 421)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 116483, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 421)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 203845, Num Local Vertices: 29120
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 421)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 145604, Num Local Vertices: 29120
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 421)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 29120, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 421)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 58241, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 421)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 87362, Num Local Vertices: 29121
*** Node 0, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
+++++++++ Node 4 initializing the weights for op[0, 421)...
+++++++++ Node 6 initializing the weights for op[0, 421)...
+++++++++ Node 1 initializing the weights for op[0, 421)...
+++++++++ Node 7 initializing the weights for op[0, 421)...
+++++++++ Node 3 initializing the weights for op[0, 421)...
+++++++++ Node 5 initializing the weights for op[0, 421)...
+++++++++ Node 2 initializing the weights for op[0, 421)...
+++++++++ Node 0 initializing the weights for op[0, 421)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 607420
Node 0, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 4, starting task scheduling...
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 4.1863	TrainAcc 0.1564	ValidAcc 0.1660	TestAcc 0.1631	BestValid 0.1660
	Epoch 50:	Loss 0.7167	TrainAcc 0.9107	ValidAcc 0.9213	TestAcc 0.9176	BestValid 0.9213
	Epoch 100:	Loss 0.3808	TrainAcc 0.9422	ValidAcc 0.9470	TestAcc 0.9456	BestValid 0.9470
	Epoch 150:	Loss 0.3073	TrainAcc 0.9518	ValidAcc 0.9540	TestAcc 0.9532	BestValid 0.9540
	Epoch 200:	Loss 0.2664	TrainAcc 0.9568	ValidAcc 0.9564	TestAcc 0.9566	BestValid 0.9564
	Epoch 250:	Loss 0.2461	TrainAcc 0.9606	ValidAcc 0.9587	TestAcc 0.9586	BestValid 0.9587
	Epoch 300:	Loss 0.2264	TrainAcc 0.9634	ValidAcc 0.9607	TestAcc 0.9598	BestValid 0.9607
	Epoch 350:	Loss 0.2125	TrainAcc 0.9658	ValidAcc 0.9615	TestAcc 0.9608	BestValid 0.9615
	Epoch 400:	Loss 0.2006	TrainAcc 0.9673	ValidAcc 0.9629	TestAcc 0.9614	BestValid 0.9629
	Epoch 450:	Loss 0.1923	TrainAcc 0.9689	ValidAcc 0.9627	TestAcc 0.9618	BestValid 0.9629
	Epoch 500:	Loss 0.1834	TrainAcc 0.9705	ValidAcc 0.9634	TestAcc 0.9624	BestValid 0.9634
	Epoch 550:	Loss 0.1747	TrainAcc 0.9718	ValidAcc 0.9637	TestAcc 0.9626	BestValid 0.9637
	Epoch 600:	Loss 0.1675	TrainAcc 0.9731	ValidAcc 0.9639	TestAcc 0.9629	BestValid 0.9639
	Epoch 650:	Loss 0.1620	TrainAcc 0.9744	ValidAcc 0.9647	TestAcc 0.9629	BestValid 0.9647
	Epoch 700:	Loss 0.1566	TrainAcc 0.9752	ValidAcc 0.9641	TestAcc 0.9630	BestValid 0.9647
	Epoch 750:	Loss 0.1508	TrainAcc 0.9764	ValidAcc 0.9645	TestAcc 0.9633	BestValid 0.9647
	Epoch 800:	Loss 0.1457	TrainAcc 0.9775	ValidAcc 0.9645	TestAcc 0.9635	BestValid 0.9647
	Epoch 850:	Loss 0.1399	TrainAcc 0.9785	ValidAcc 0.9650	TestAcc 0.9636	BestValid 0.9650
	Epoch 900:	Loss 0.1358	TrainAcc 0.9792	ValidAcc 0.9643	TestAcc 0.9633	BestValid 0.9650
	Epoch 950:	Loss 0.1321	TrainAcc 0.9804	ValidAcc 0.9648	TestAcc 0.9638	BestValid 0.9650
	Epoch 1000:	Loss 0.1263	TrainAcc 0.9814	ValidAcc 0.9650	TestAcc 0.9640	BestValid 0.9650
	Epoch 1050:	Loss 0.1246	TrainAcc 0.9821	ValidAcc 0.9650	TestAcc 0.9639	BestValid 0.9650
	Epoch 1100:	Loss 0.1202	TrainAcc 0.9828	ValidAcc 0.9651	TestAcc 0.9639	BestValid 0.9651
	Epoch 1150:	Loss 0.1179	TrainAcc 0.9837	ValidAcc 0.9650	TestAcc 0.9639	BestValid 0.9651
	Epoch 1200:	Loss 0.1131	TrainAcc 0.9841	ValidAcc 0.9651	TestAcc 0.9634	BestValid 0.9651
	Epoch 1250:	Loss 0.1094	TrainAcc 0.9847	ValidAcc 0.9645	TestAcc 0.9636	BestValid 0.9651
	Epoch 1300:	Loss 0.1058	TrainAcc 0.9854	ValidAcc 0.9642	TestAcc 0.9636	BestValid 0.9651
	Epoch 1350:	Loss 0.1032	TrainAcc 0.9861	ValidAcc 0.9647	TestAcc 0.9638	BestValid 0.9651
	Epoch 1400:	Loss 0.0991	TrainAcc 0.9866	ValidAcc 0.9643	TestAcc 0.9635	BestValid 0.9651
	Epoch 1450:	Loss 0.0963	TrainAcc 0.9876	ValidAcc 0.9648	TestAcc 0.9637	BestValid 0.9651
	Epoch 1500:	Loss 0.0939	TrainAcc 0.9882	ValidAcc 0.9648	TestAcc 0.9639	BestValid 0.9651
	Epoch 1550:	Loss 0.0906	TrainAcc 0.9889	ValidAcc 0.9647	TestAcc 0.9638	BestValid 0.9651
	Epoch 1600:	Loss 0.0882	TrainAcc 0.9894	ValidAcc 0.9646	TestAcc 0.9639	BestValid 0.9651
	Epoch 1650:	Loss 0.0849	TrainAcc 0.9898	ValidAcc 0.9645	TestAcc 0.9631	BestValid 0.9651
	Epoch 1700:	Loss 0.0827	TrainAcc 0.9903	ValidAcc 0.9645	TestAcc 0.9637	BestValid 0.9651
	Epoch 1750:	Loss 0.0793	TrainAcc 0.9909	ValidAcc 0.9645	TestAcc 0.9633	BestValid 0.9651
	Epoch 1800:	Loss 0.0777	TrainAcc 0.9912	ValidAcc 0.9643	TestAcc 0.9633	BestValid 0.9651
	Epoch 1850:	Loss 0.0745	TrainAcc 0.9917	ValidAcc 0.9642	TestAcc 0.9635	BestValid 0.9651
	Epoch 1900:	Loss 0.0720	TrainAcc 0.9922	ValidAcc 0.9644	TestAcc 0.9632	BestValid 0.9651
	Epoch 1950:	Loss 0.0714	TrainAcc 0.9927	ValidAcc 0.9643	TestAcc 0.9632	BestValid 0.9651
	Epoch 2000:	Loss 0.0692	TrainAcc 0.9929	ValidAcc 0.9640	TestAcc 0.9630	BestValid 0.9651
	Epoch 2050:	Loss 0.0665	TrainAcc 0.9933	ValidAcc 0.9639	TestAcc 0.9629	BestValid 0.9651
	Epoch 2100:	Loss 0.0662	TrainAcc 0.9938	ValidAcc 0.9637	TestAcc 0.9630	BestValid 0.9651
	Epoch 2150:	Loss 0.0620	TrainAcc 0.9941	ValidAcc 0.9633	TestAcc 0.9630	BestValid 0.9651
	Epoch 2200:	Loss 0.0599	TrainAcc 0.9945	ValidAcc 0.9636	TestAcc 0.9631	BestValid 0.9651
	Epoch 2250:	Loss 0.0584	TrainAcc 0.9948	ValidAcc 0.9631	TestAcc 0.9628	BestValid 0.9651
	Epoch 2300:	Loss 0.0569	TrainAcc 0.9949	ValidAcc 0.9629	TestAcc 0.9626	BestValid 0.9651
	Epoch 2350:	Loss 0.0552	TrainAcc 0.9951	ValidAcc 0.9630	TestAcc 0.9622	BestValid 0.9651
	Epoch 2400:	Loss 0.0535	TrainAcc 0.9955	ValidAcc 0.9630	TestAcc 0.9624	BestValid 0.9651
	Epoch 2450:	Loss 0.0514	TrainAcc 0.9959	ValidAcc 0.9627	TestAcc 0.9620	BestValid 0.9651
	Epoch 2500:	Loss 0.0506	TrainAcc 0.9961	ValidAcc 0.9629	TestAcc 0.9623	BestValid 0.9651
	Epoch 2550:	Loss 0.0476	TrainAcc 0.9962	ValidAcc 0.9627	TestAcc 0.9621	BestValid 0.9651
	Epoch 2600:	Loss 0.0476	TrainAcc 0.9964	ValidAcc 0.9627	TestAcc 0.9617	BestValid 0.9651
	Epoch 2650:	Loss 0.0455	TrainAcc 0.9967	ValidAcc 0.9623	TestAcc 0.9623	BestValid 0.9651
	Epoch 2700:	Loss 0.0434	TrainAcc 0.9968	ValidAcc 0.9622	TestAcc 0.9619	BestValid 0.9651
	Epoch 2750:	Loss 0.0421	TrainAcc 0.9970	ValidAcc 0.9624	TestAcc 0.9618	BestValid 0.9651
	Epoch 2800:	Loss 0.0413	TrainAcc 0.9973	ValidAcc 0.9627	TestAcc 0.9619	BestValid 0.9651
	Epoch 2850:	Loss 0.0400	TrainAcc 0.9973	ValidAcc 0.9626	TestAcc 0.9614	BestValid 0.9651
	Epoch 2900:	Loss 0.0375	TrainAcc 0.9975	ValidAcc 0.9625	TestAcc 0.9614	BestValid 0.9651
	Epoch 2950:	Loss 0.0367	TrainAcc 0.9977	ValidAcc 0.9616	TestAcc 0.9615	BestValid 0.9651
	Epoch 3000:	Loss 0.0350	TrainAcc 0.9978	ValidAcc 0.9621	TestAcc 0.9610	BestValid 0.9651
	Epoch 3050:	Loss 0.0335	TrainAcc 0.9980	ValidAcc 0.9626	TestAcc 0.9612	BestValid 0.9651
	Epoch 3100:	Loss 0.0327	TrainAcc 0.9981	ValidAcc 0.9621	TestAcc 0.9611	BestValid 0.9651
	Epoch 3150:	Loss 0.0310	TrainAcc 0.9983	ValidAcc 0.9616	TestAcc 0.9613	BestValid 0.9651
	Epoch 3200:	Loss 0.0316	TrainAcc 0.9984	ValidAcc 0.9614	TestAcc 0.9611	BestValid 0.9651
	Epoch 3250:	Loss 0.0299	TrainAcc 0.9984	ValidAcc 0.9616	TestAcc 0.9611	BestValid 0.9651
	Epoch 3300:	Loss 0.0297	TrainAcc 0.9985	ValidAcc 0.9610	TestAcc 0.9611	BestValid 0.9651
	Epoch 3350:	Loss 0.0279	TrainAcc 0.9986	ValidAcc 0.9616	TestAcc 0.9609	BestValid 0.9651
	Epoch 3400:	Loss 0.0270	TrainAcc 0.9987	ValidAcc 0.9613	TestAcc 0.9611	BestValid 0.9651
	Epoch 3450:	Loss 0.0258	TrainAcc 0.9987	ValidAcc 0.9616	TestAcc 0.9610	BestValid 0.9651
	Epoch 3500:	Loss 0.0253	TrainAcc 0.9988	ValidAcc 0.9614	TestAcc 0.9610	BestValid 0.9651
	Epoch 3550:	Loss 0.0254	TrainAcc 0.9989	ValidAcc 0.9607	TestAcc 0.9607	BestValid 0.9651
	Epoch 3600:	Loss 0.0230	TrainAcc 0.9989	ValidAcc 0.9610	TestAcc 0.9607	BestValid 0.9651
	Epoch 3650:	Loss 0.0221	TrainAcc 0.9990	ValidAcc 0.9614	TestAcc 0.9606	BestValid 0.9651
	Epoch 3700:	Loss 0.0209	TrainAcc 0.9990	ValidAcc 0.9604	TestAcc 0.9608	BestValid 0.9651
	Epoch 3750:	Loss 0.0214	TrainAcc 0.9991	ValidAcc 0.9611	TestAcc 0.9605	BestValid 0.9651
	Epoch 3800:	Loss 0.0210	TrainAcc 0.9992	ValidAcc 0.9608	TestAcc 0.9603	BestValid 0.9651
	Epoch 3850:	Loss 0.0198	TrainAcc 0.9992	ValidAcc 0.9608	TestAcc 0.9606	BestValid 0.9651
	Epoch 3900:	Loss 0.0193	TrainAcc 0.9993	ValidAcc 0.9605	TestAcc 0.9606	BestValid 0.9651
	Epoch 3950:	Loss 0.0178	TrainAcc 0.9993	ValidAcc 0.9608	TestAcc 0.9603	BestValid 0.9651
	Epoch 4000:	Loss 0.0176	TrainAcc 0.9994	ValidAcc 0.9612	TestAcc 0.9604	BestValid 0.9651
	Epoch 4050:	Loss 0.0173	TrainAcc 0.9994	ValidAcc 0.9607	TestAcc 0.9606	BestValid 0.9651
	Epoch 4100:	Loss 0.0169	TrainAcc 0.9994	ValidAcc 0.9602	TestAcc 0.9601	BestValid 0.9651
	Epoch 4150:	Loss 0.0157	TrainAcc 0.9994	ValidAcc 0.9607	TestAcc 0.9604	BestValid 0.9651
	Epoch 4200:	Loss 0.0158	TrainAcc 0.9995	ValidAcc 0.9607	TestAcc 0.9604	BestValid 0.9651
	Epoch 4250:	Loss 0.0144	TrainAcc 0.9995	ValidAcc 0.9604	TestAcc 0.9604	BestValid 0.9651
	Epoch 4300:	Loss 0.0149	TrainAcc 0.9996	ValidAcc 0.9605	TestAcc 0.9602	BestValid 0.9651
	Epoch 4350:	Loss 0.0140	TrainAcc 0.9996	ValidAcc 0.9608	TestAcc 0.9601	BestValid 0.9651
	Epoch 4400:	Loss 0.0134	TrainAcc 0.9996	ValidAcc 0.9607	TestAcc 0.9598	BestValid 0.9651
	Epoch 4450:	Loss 0.0132	TrainAcc 0.9996	ValidAcc 0.9608	TestAcc 0.9599	BestValid 0.9651
	Epoch 4500:	Loss 0.0125	TrainAcc 0.9997	ValidAcc 0.9605	TestAcc 0.9600	BestValid 0.9651
	Epoch 4550:	Loss 0.0124	TrainAcc 0.9997	ValidAcc 0.9603	TestAcc 0.9598	BestValid 0.9651
	Epoch 4600:	Loss 0.0122	TrainAcc 0.9997	ValidAcc 0.9605	TestAcc 0.9597	BestValid 0.9651
	Epoch 4650:	Loss 0.0119	TrainAcc 0.9997	ValidAcc 0.9604	TestAcc 0.9600	BestValid 0.9651
	Epoch 4700:	Loss 0.0115	TrainAcc 0.9997	ValidAcc 0.9601	TestAcc 0.9599	BestValid 0.9651
	Epoch 4750:	Loss 0.0102	TrainAcc 0.9998	ValidAcc 0.9602	TestAcc 0.9599	BestValid 0.9651
	Epoch 4800:	Loss 0.0106	TrainAcc 0.9998	ValidAcc 0.9599	TestAcc 0.9600	BestValid 0.9651
	Epoch 4850:	Loss 0.0100	TrainAcc 0.9998	ValidAcc 0.9599	TestAcc 0.9601	BestValid 0.9651
	Epoch 4900:	Loss 0.0097	TrainAcc 0.9998	ValidAcc 0.9598	TestAcc 0.9595	BestValid 0.9651
	Epoch 4950:	Loss 0.0092	TrainAcc 0.9998	ValidAcc 0.9599	TestAcc 0.9597	BestValid 0.9651
	Epoch 5000:	Loss 0.0089	TrainAcc 0.9998	ValidAcc 0.9603	TestAcc 0.9598	BestValid 0.9651
****** Epoch Time (Excluding Evaluation Cost): 0.934 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 3.116 ms (Max: 4.934, Min: 0.042, Sum: 24.931)
Cluster-Wide Average, Compute: 283.458 ms (Max: 425.645, Min: 175.347, Sum: 2267.663)
Cluster-Wide Average, Communication-Layer: 0.008 ms (Max: 0.010, Min: 0.007, Sum: 0.065)
Cluster-Wide Average, Bubble-Imbalance: 0.017 ms (Max: 0.020, Min: 0.014, Sum: 0.135)
Cluster-Wide Average, Communication-Graph: 637.526 ms (Max: 743.759, Min: 498.401, Sum: 5100.206)
Cluster-Wide Average, Optimization: 7.955 ms (Max: 8.057, Min: 7.876, Sum: 63.642)
Cluster-Wide Average, Others: 1.704 ms (Max: 1.878, Min: 1.589, Sum: 13.630)
****** Breakdown Sum: 933.784 ms ******
Cluster-Wide Average, GPU Memory Consumption: 10.860 GB (Max: 11.620, Min: 10.735, Sum: 86.882)
Cluster-Wide Average, Graph-Level Communication Throughput: 26.612 Gbps (Max: 49.562, Min: 11.502, Sum: 212.899)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 14.482 GB
Weight-sync communication (cluster-wide, per-epoch): 0.037 GB
Total communication (cluster-wide, per-epoch): 14.519 GB
****** Accuracy Results ******
Highest valid_acc: 0.9651
Target test_acc: 0.9639
Epoch to reach the target acc: 1099
[MPI Rank 0] Success 
[MPI Rank 1] Success 
[MPI Rank 4] Success 
[MPI Rank 2] Success 
[MPI Rank 5] Success 
[MPI Rank 3] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
