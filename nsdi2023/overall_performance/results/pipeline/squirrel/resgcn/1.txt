Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
Initialized node 0 on machine gnerv2
DONE MPI INITDONE MPI INIT
Initialized node 3 on machine gnerv2
DONE MPI INIT
Initialized node 2 on machine gnerv2

Initialized node 1 on machine gnerv2
DONE MPI INIT
Initialized node 7 on machine gnerv3
DONE MPI INIT
Initialized node 4 on machine gnerv3
DONE MPI INIT
Initialized node 5 on machine gnerv3
DONE MPI INIT
Initialized node 6 on machine gnerv3
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.008 seconds.
Building the CSC structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.014 seconds.
Building the CSC structure...
        It takes 0.012 seconds.
Building the CSC structure...
        It takes 0.009 seconds.
        It takes 0.008 seconds.
        It takes 0.009 seconds.
        It takes 0.009 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.012 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.013 seconds.
        It takes 0.008 seconds.
        It takes 0.008 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.086 seconds.
        It takes 0.087 seconds.
        It takes 0.077 seconds.
        It takes 0.080 seconds.
Building the Label Vector...Building the Label Vector...
Building the Label Vector...

Building the Label Vector...
        It takes 0.001 seconds.
        It takes 0.001 seconds.
        It takes 0.001 seconds.
        It takes 0.001 seconds.
        It takes 0.117 seconds.
        It takes 0.114 seconds.
        It takes 0.113 seconds.
        It takes 0.117 seconds.
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
        It takes 0.001 seconds.
        It takes 0.001 seconds.
        It takes 0.001 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/pipeline_parallel_datasets/squirrel/32_parts
The number of GCNII layers: 32
The number of hidden units: 1000
The number of training epoches: 5000
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 1
Number of classes: 5
Number of feature dimensions: 2089
Number of vertices: 5201
Number of GPUs: 8
        It takes 0.001 seconds.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 163
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 163
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 163
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Number of vertices per chunk: 163
5201, 401907, 401907
Number of vertices per chunk: 163
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 163
csr in-out ready !Start Cost Model Initialization...
train nodes 2496, valid nodes 1664, test nodes 1041
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 80) 1-[80, 237) 2-[237, 364) 3-[364, 546) 4-[546, 693) 5-[693, 945) 6-[945, 1041) 7-[1041, 1148) 8-[1148, 1376) ... 31-[5004, 5201)
5201, 401907, 401907
Number of vertices per chunk: 163
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 163
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 57.557 Gbps (per GPU), 460.453 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 57.309 Gbps (per GPU), 458.469 Gbps (aggregated)
The layer-level communication performance: 57.290 Gbps (per GPU), 458.324 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 57.068 Gbps (per GPU), 456.541 Gbps (aggregated)
The layer-level communication performance: 57.053 Gbps (per GPU), 456.422 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 56.845 Gbps (per GPU), 454.758 Gbps (aggregated)
The layer-level communication performance: 56.812 Gbps (per GPU), 454.494 Gbps (aggregated)
The layer-level communication performance: 56.770 Gbps (per GPU), 454.159 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 155.887 Gbps (per GPU), 1247.098 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 155.884 Gbps (per GPU), 1247.075 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 155.884 Gbps (per GPU), 1247.075 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 155.824 Gbps (per GPU), 1246.589 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 155.870 Gbps (per GPU), 1246.962 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 155.855 Gbps (per GPU), 1246.844 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 155.847 Gbps (per GPU), 1246.774 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 155.873 Gbps (per GPU), 1246.980 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 99.887 Gbps (per GPU), 799.098 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 99.891 Gbps (per GPU), 799.131 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 99.900 Gbps (per GPU), 799.200 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 99.866 Gbps (per GPU), 798.928 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 99.849 Gbps (per GPU), 798.795 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 99.849 Gbps (per GPU), 798.795 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 99.850 Gbps (per GPU), 798.801 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 99.754 Gbps (per GPU), 798.028 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 33.685 Gbps (per GPU), 269.479 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 33.684 Gbps (per GPU), 269.474 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 33.684 Gbps (per GPU), 269.473 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 33.679 Gbps (per GPU), 269.434 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 33.683 Gbps (per GPU), 269.462 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 33.675 Gbps (per GPU), 269.399 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 33.683 Gbps (per GPU), 269.468 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 33.680 Gbps (per GPU), 269.439 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  0.61ms  0.92ms  1.50ms  2.47  0.08K  0.02M
 chk_1  0.75ms  1.03ms  1.63ms  2.18  0.16K  0.01M
 chk_2  0.67ms  0.95ms  1.55ms  2.31  0.13K  0.01M
 chk_3  0.83ms  1.09ms  1.69ms  2.04  0.18K  0.01M
 chk_4  0.74ms  1.02ms  1.62ms  2.20  0.15K  0.01M
 chk_5  0.86ms  1.11ms  1.74ms  2.02  0.25K  0.01M
 chk_6  0.62ms  0.92ms  1.51ms  2.45  0.10K  0.02M
 chk_7  0.66ms  0.95ms  1.54ms  2.34  0.11K  0.02M
 chk_8  0.84ms  1.10ms  1.73ms  2.07  0.23K  0.01M
 chk_9  0.78ms  1.00ms  1.61ms  2.07  0.14K  0.01M
chk_10  0.88ms  1.08ms  1.69ms  1.93  0.20K  0.01M
chk_11  0.62ms  0.92ms  1.51ms  2.44  0.09K  0.02M
chk_12  0.73ms  1.02ms  1.63ms  2.23  0.16K  0.01M
chk_13  0.85ms  1.02ms  1.63ms  1.91  0.16K  0.01M
chk_14  0.77ms  1.01ms  1.61ms  2.10  0.14K  0.01M
chk_15  0.83ms  1.09ms  1.71ms  2.07  0.21K  0.01M
chk_16  0.81ms  1.09ms  1.69ms  2.10  0.18K  0.01M
chk_17  0.90ms  1.14ms  1.79ms  2.00  0.29K  0.01M
chk_18  0.91ms  1.15ms  1.80ms  1.99  0.31K  0.00M
chk_19  0.65ms  0.94ms  1.54ms  2.37  0.13K  0.01M
chk_20  0.65ms  0.94ms  1.55ms  2.37  0.13K  0.01M
chk_21  0.80ms  1.08ms  1.70ms  2.12  0.18K  0.01M
chk_22  0.65ms  0.95ms  1.55ms  2.37  0.13K  0.01M
chk_23  0.79ms  1.07ms  1.69ms  2.13  0.16K  0.01M
chk_24  0.61ms  0.92ms  1.51ms  2.47  0.09K  0.02M
chk_25  0.62ms  0.92ms  1.51ms  2.45  0.09K  0.02M
chk_26  0.80ms  1.08ms  1.69ms  2.11  0.18K  0.01M
chk_27  0.65ms  0.94ms  1.55ms  2.37  0.13K  0.01M
chk_28  0.80ms  1.07ms  1.69ms  2.12  0.17K  0.01M
chk_29  0.73ms  1.01ms  1.63ms  2.23  0.15K  0.01M
chk_30  0.84ms  1.10ms  1.73ms  2.06  0.24K  0.01M
chk_31  0.82ms  1.07ms  1.70ms  2.08  0.20K  0.01M
   Avg  0.75  1.02  1.63
   Max  0.91  1.15  1.80
   Min  0.61  0.92  1.50
 Ratio  1.49  1.25  1.20
   Var  0.01  0.01  0.01
Profiling takes 1.362 s
*** Node 0, starting model training...
Num Stages: 8 / 8
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_ADD
*** Node 0 owns the model-level partition [0, 48)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 5201
*** Node 1, starting model training...
Num Stages: 8 / 8
Node 1, Pipeline Input Tensor: OPERATOR_ADD
Node 1, Pipeline Output Tensor: OPERATOR_ADD
*** Node 1 owns the model-level partition [48, 100)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 0, Num Local Vertices: 5201
*** Node 2, starting model training...
Num Stages: 8 / 8
*** Node 4, starting model training...
Num Stages: 8 / 8
Node 4, Pipeline Input Tensor: OPERATOR_ADD
Node 4, Pipeline Output Tensor: OPERATOR_ADD
*** Node 4 owns the model-level partition [204, 256)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 5201
*** Node 3, starting model training...
Num Stages: 8 / 8
Node 3, Pipeline Input Tensor: OPERATOR_ADD
Node 3, Pipeline Output Tensor: OPERATOR_ADD
*** Node 3 owns the model-level partition [152, 204)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 0, Num Local Vertices: 5201
*** Node 5, starting model training...
Num Stages: 8 / 8
Node 5, Pipeline Input Tensor: OPERATOR_ADD
Node 5, Pipeline Output Tensor: OPERATOR_ADD
*** Node 5 owns the model-level partition [256, 308)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 0, Num Local Vertices: 5201
*** Node 6, starting model training...
Num Stages: 8 / 8
Node 6, Pipeline Input Tensor: OPERATOR_ADD
Node 6, Pipeline Output Tensor: OPERATOR_ADD
*** Node 6 owns the model-level partition [308, 360)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 0, Num Local Vertices: 5201
Node 2, Pipeline Input Tensor: OPERATOR_ADD
Node 2, Pipeline Output Tensor: OPERATOR_ADD
*** Node 2 owns the model-level partition [100, 152)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 5201
*** Node 7, starting model training...
Num Stages: 8 / 8
Node 7, Pipeline Input Tensor: OPERATOR_ADD
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [360, 421)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 0, Num Local Vertices: 5201
*** Node 1, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
+++++++++ Node 2 initializing the weights for op[100, 152)...
+++++++++ Node 6 initializing the weights for op[308, 360)...
+++++++++ Node 0 initializing the weights for op[0, 48)...
+++++++++ Node 5 initializing the weights for op[256, 308)...
+++++++++ Node 1 initializing the weights for op[48, 100)...
+++++++++ Node 3 initializing the weights for op[152, 204)...
+++++++++ Node 7 initializing the weights for op[360, 421)...
+++++++++ Node 4 initializing the weights for op[204, 256)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 0
Node 0, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...


*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000

The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 2.3108	TrainAcc 0.2059	ValidAcc 0.1953	TestAcc 0.1931	BestValid 0.1953
	Epoch 50:	Loss 1.7117	TrainAcc 0.3353	ValidAcc 0.3257	TestAcc 0.3208	BestValid 0.3257
	Epoch 100:	Loss 1.4080	TrainAcc 0.4567	ValidAcc 0.3630	TestAcc 0.3458	BestValid 0.3630
	Epoch 150:	Loss 0.8454	TrainAcc 0.7532	ValidAcc 0.3299	TestAcc 0.3612	BestValid 0.3630
	Epoch 200:	Loss 0.3968	TrainAcc 0.9271	ValidAcc 0.3498	TestAcc 0.3554	BestValid 0.3630
	Epoch 250:	Loss 0.1299	TrainAcc 0.9888	ValidAcc 0.3636	TestAcc 0.3670	BestValid 0.3636
	Epoch 300:	Loss 0.0517	TrainAcc 0.9944	ValidAcc 0.3606	TestAcc 0.3670	BestValid 0.3636
	Epoch 350:	Loss 0.0290	TrainAcc 0.9976	ValidAcc 0.3672	TestAcc 0.3708	BestValid 0.3672
	Epoch 400:	Loss 0.0237	TrainAcc 0.9968	ValidAcc 0.3588	TestAcc 0.3622	BestValid 0.3672
	Epoch 450:	Loss 0.0179	TrainAcc 0.9972	ValidAcc 0.3696	TestAcc 0.3746	BestValid 0.3696
	Epoch 500:	Loss 0.0144	TrainAcc 0.9980	ValidAcc 0.3588	TestAcc 0.3612	BestValid 0.3696
	Epoch 550:	Loss 0.0158	TrainAcc 0.9980	ValidAcc 0.3660	TestAcc 0.3737	BestValid 0.3696
	Epoch 600:	Loss 0.0100	TrainAcc 0.9980	ValidAcc 0.3624	TestAcc 0.3718	BestValid 0.3696
	Epoch 650:	Loss 0.0106	TrainAcc 0.9984	ValidAcc 0.3618	TestAcc 0.3746	BestValid 0.3696
	Epoch 700:	Loss 0.0080	TrainAcc 0.9980	ValidAcc 0.3642	TestAcc 0.3650	BestValid 0.3696
	Epoch 750:	Loss 0.0070	TrainAcc 1.0000	ValidAcc 0.3558	TestAcc 0.3583	BestValid 0.3696
	Epoch 800:	Loss 0.0079	TrainAcc 0.9976	ValidAcc 0.3654	TestAcc 0.3727	BestValid 0.3696
	Epoch 850:	Loss 0.0050	TrainAcc 0.9988	ValidAcc 0.3618	TestAcc 0.3573	BestValid 0.3696
	Epoch 900:	Loss 0.0062	TrainAcc 0.9956	ValidAcc 0.3516	TestAcc 0.3525	BestValid 0.3696
	Epoch 950:	Loss 0.0066	TrainAcc 0.9980	ValidAcc 0.3654	TestAcc 0.3689	BestValid 0.3696
	Epoch 1000:	Loss 0.0053	TrainAcc 0.9984	ValidAcc 0.3594	TestAcc 0.3583	BestValid 0.3696
	Epoch 1050:	Loss 0.0051	TrainAcc 0.9984	ValidAcc 0.3618	TestAcc 0.3622	BestValid 0.3696
	Epoch 1100:	Loss 0.0035	TrainAcc 0.9988	ValidAcc 0.3612	TestAcc 0.3593	BestValid 0.3696
	Epoch 1150:	Loss 0.0026	TrainAcc 0.9996	ValidAcc 0.3594	TestAcc 0.3612	BestValid 0.3696
	Epoch 1200:	Loss 0.0018	TrainAcc 0.9996	ValidAcc 0.3576	TestAcc 0.3554	BestValid 0.3696
	Epoch 1250:	Loss 0.0048	TrainAcc 0.9972	ValidAcc 0.3558	TestAcc 0.3516	BestValid 0.3696
	Epoch 1300:	Loss 0.0016	TrainAcc 0.9996	ValidAcc 0.3684	TestAcc 0.3631	BestValid 0.3696
	Epoch 1350:	Loss 0.0144	TrainAcc 0.9980	ValidAcc 0.3576	TestAcc 0.3689	BestValid 0.3696
	Epoch 1400:	Loss 0.0236	TrainAcc 0.9976	ValidAcc 0.3588	TestAcc 0.3679	BestValid 0.3696
	Epoch 1450:	Loss 0.0178	TrainAcc 0.9980	ValidAcc 0.3570	TestAcc 0.3794	BestValid 0.3696
	Epoch 1500:	Loss 0.0337	TrainAcc 0.9984	ValidAcc 0.3522	TestAcc 0.3670	BestValid 0.3696
	Epoch 1550:	Loss 0.0078	TrainAcc 0.9988	ValidAcc 0.3678	TestAcc 0.3641	BestValid 0.3696
	Epoch 1600:	Loss 0.0116	TrainAcc 0.9976	ValidAcc 0.3666	TestAcc 0.3775	BestValid 0.3696
	Epoch 1650:	Loss 0.0054	TrainAcc 1.0000	ValidAcc 0.3600	TestAcc 0.3814	BestValid 0.3696
	Epoch 1700:	Loss 0.0023	TrainAcc 0.9996	ValidAcc 0.3588	TestAcc 0.3718	BestValid 0.3696
	Epoch 1750:	Loss 0.0039	TrainAcc 0.9980	ValidAcc 0.3684	TestAcc 0.3785	BestValid 0.3696
	Epoch 1800:	Loss 0.0027	TrainAcc 1.0000	ValidAcc 0.3654	TestAcc 0.3785	BestValid 0.3696
	Epoch 1850:	Loss 0.0015	TrainAcc 1.0000	ValidAcc 0.3600	TestAcc 0.3785	BestValid 0.3696
	Epoch 1900:	Loss 0.0016	TrainAcc 0.9988	ValidAcc 0.3642	TestAcc 0.3785	BestValid 0.3696
	Epoch 1950:	Loss 0.0012	TrainAcc 0.9992	ValidAcc 0.3570	TestAcc 0.3718	BestValid 0.3696
	Epoch 2000:	Loss 0.0008	TrainAcc 0.9996	ValidAcc 0.3678	TestAcc 0.3775	BestValid 0.3696
	Epoch 2050:	Loss 0.0043	TrainAcc 0.9996	ValidAcc 0.3600	TestAcc 0.3871	BestValid 0.3696
	Epoch 2100:	Loss 0.0014	TrainAcc 0.9992	ValidAcc 0.3660	TestAcc 0.3737	BestValid 0.3696
	Epoch 2150:	Loss 0.0028	TrainAcc 0.9968	ValidAcc 0.3660	TestAcc 0.3727	BestValid 0.3696
	Epoch 2200:	Loss 0.0008	TrainAcc 1.0000	ValidAcc 0.3708	TestAcc 0.3650	BestValid 0.3708
	Epoch 2250:	Loss 0.0049	TrainAcc 0.9996	ValidAcc 0.3636	TestAcc 0.3670	BestValid 0.3708
	Epoch 2300:	Loss 0.0014	TrainAcc 1.0000	ValidAcc 0.3678	TestAcc 0.3670	BestValid 0.3708
	Epoch 2350:	Loss 0.0039	TrainAcc 0.9956	ValidAcc 0.3582	TestAcc 0.3583	BestValid 0.3708
	Epoch 2400:	Loss 0.0016	TrainAcc 0.9996	ValidAcc 0.3636	TestAcc 0.3622	BestValid 0.3708
	Epoch 2450:	Loss 0.0005	TrainAcc 1.0000	ValidAcc 0.3696	TestAcc 0.3631	BestValid 0.3708
	Epoch 2500:	Loss 0.0006	TrainAcc 0.9988	ValidAcc 0.3672	TestAcc 0.3641	BestValid 0.3708
	Epoch 2550:	Loss 0.0008	TrainAcc 1.0000	ValidAcc 0.3582	TestAcc 0.3554	BestValid 0.3708
	Epoch 2600:	Loss 0.0035	TrainAcc 0.9996	ValidAcc 0.3768	TestAcc 0.3727	BestValid 0.3768
	Epoch 2650:	Loss 0.0027	TrainAcc 0.9988	ValidAcc 0.3750	TestAcc 0.3698	BestValid 0.3768
	Epoch 2700:	Loss 0.0010	TrainAcc 0.9984	ValidAcc 0.3666	TestAcc 0.3670	BestValid 0.3768
	Epoch 2750:	Loss 0.0009	TrainAcc 0.9996	ValidAcc 0.3618	TestAcc 0.3641	BestValid 0.3768
	Epoch 2800:	Loss 0.0018	TrainAcc 0.9996	ValidAcc 0.3570	TestAcc 0.3660	BestValid 0.3768
	Epoch 2850:	Loss 0.0047	TrainAcc 1.0000	ValidAcc 0.3594	TestAcc 0.3670	BestValid 0.3768
	Epoch 2900:	Loss 0.0005	TrainAcc 1.0000	ValidAcc 0.3594	TestAcc 0.3737	BestValid 0.3768
	Epoch 2950:	Loss 0.0005	TrainAcc 0.9996	ValidAcc 0.3582	TestAcc 0.3708	BestValid 0.3768
	Epoch 3000:	Loss 0.0012	TrainAcc 0.9996	ValidAcc 0.3624	TestAcc 0.3708	BestValid 0.3768
	Epoch 3050:	Loss 0.0018	TrainAcc 0.9992	ValidAcc 0.3624	TestAcc 0.3602	BestValid 0.3768
	Epoch 3100:	Loss 0.0013	TrainAcc 0.9972	ValidAcc 0.3588	TestAcc 0.3583	BestValid 0.3768
	Epoch 3150:	Loss 0.0020	TrainAcc 1.0000	ValidAcc 0.3642	TestAcc 0.3708	BestValid 0.3768
	Epoch 3200:	Loss 0.0005	TrainAcc 1.0000	ValidAcc 0.3642	TestAcc 0.3660	BestValid 0.3768
	Epoch 3250:	Loss 0.0003	TrainAcc 1.0000	ValidAcc 0.3648	TestAcc 0.3631	BestValid 0.3768
	Epoch 3300:	Loss 0.0002	TrainAcc 1.0000	ValidAcc 0.3666	TestAcc 0.3602	BestValid 0.3768
	Epoch 3350:	Loss 0.0010	TrainAcc 1.0000	ValidAcc 0.3702	TestAcc 0.3698	BestValid 0.3768
	Epoch 3400:	Loss 0.0006	TrainAcc 0.9996	ValidAcc 0.3744	TestAcc 0.3622	BestValid 0.3768
	Epoch 3450:	Loss 0.0024	TrainAcc 0.9988	ValidAcc 0.3726	TestAcc 0.3670	BestValid 0.3768
	Epoch 3500:	Loss 0.0004	TrainAcc 1.0000	ValidAcc 0.3612	TestAcc 0.3718	BestValid 0.3768
	Epoch 3550:	Loss 0.0012	TrainAcc 1.0000	ValidAcc 0.3588	TestAcc 0.3650	BestValid 0.3768
	Epoch 3600:	Loss 0.0033	TrainAcc 0.9996	ValidAcc 0.3594	TestAcc 0.3650	BestValid 0.3768
	Epoch 3650:	Loss 0.0017	TrainAcc 0.9992	ValidAcc 0.3714	TestAcc 0.3823	BestValid 0.3768
	Epoch 3700:	Loss 0.0017	TrainAcc 0.9988	ValidAcc 0.3678	TestAcc 0.3794	BestValid 0.3768
	Epoch 3750:	Loss 0.0006	TrainAcc 0.9996	ValidAcc 0.3648	TestAcc 0.3929	BestValid 0.3768
	Epoch 3800:	Loss 0.0033	TrainAcc 1.0000	ValidAcc 0.3660	TestAcc 0.3794	BestValid 0.3768
	Epoch 3850:	Loss 0.0014	TrainAcc 0.9996	ValidAcc 0.3660	TestAcc 0.3804	BestValid 0.3768
	Epoch 3900:	Loss 0.0006	TrainAcc 0.9996	ValidAcc 0.3672	TestAcc 0.3766	BestValid 0.3768
	Epoch 3950:	Loss 0.0002	TrainAcc 1.0000	ValidAcc 0.3720	TestAcc 0.3679	BestValid 0.3768
	Epoch 4000:	Loss 0.0040	TrainAcc 1.0000	ValidAcc 0.3708	TestAcc 0.3689	BestValid 0.3768
	Epoch 4050:	Loss 0.0008	TrainAcc 1.0000	ValidAcc 0.3702	TestAcc 0.3804	BestValid 0.3768
	Epoch 4100:	Loss 0.0001	TrainAcc 1.0000	ValidAcc 0.3696	TestAcc 0.3775	BestValid 0.3768
	Epoch 4150:	Loss 0.0001	TrainAcc 1.0000	ValidAcc 0.3678	TestAcc 0.3718	BestValid 0.3768
	Epoch 4200:	Loss 0.0032	TrainAcc 1.0000	ValidAcc 0.3714	TestAcc 0.3698	BestValid 0.3768
	Epoch 4250:	Loss 0.0044	TrainAcc 0.9996	ValidAcc 0.3702	TestAcc 0.3785	BestValid 0.3768
	Epoch 4300:	Loss 0.0001	TrainAcc 1.0000	ValidAcc 0.3684	TestAcc 0.3852	BestValid 0.3768
	Epoch 4350:	Loss 0.0010	TrainAcc 0.9996	ValidAcc 0.3600	TestAcc 0.3756	BestValid 0.3768
	Epoch 4400:	Loss 0.0015	TrainAcc 1.0000	ValidAcc 0.3588	TestAcc 0.3737	BestValid 0.3768
	Epoch 4450:	Loss 0.0004	TrainAcc 1.0000	ValidAcc 0.3600	TestAcc 0.3727	BestValid 0.3768
	Epoch 4500:	Loss 0.0009	TrainAcc 1.0000	ValidAcc 0.3588	TestAcc 0.3727	BestValid 0.3768
	Epoch 4550:	Loss 0.0003	TrainAcc 1.0000	ValidAcc 0.3570	TestAcc 0.3708	BestValid 0.3768
	Epoch 4600:	Loss 0.0001	TrainAcc 1.0000	ValidAcc 0.3558	TestAcc 0.3718	BestValid 0.3768
	Epoch 4650:	Loss 0.0000	TrainAcc 1.0000	ValidAcc 0.3522	TestAcc 0.3698	BestValid 0.3768
	Epoch 4700:	Loss 0.0058	TrainAcc 0.9996	ValidAcc 0.3564	TestAcc 0.3756	BestValid 0.3768
	Epoch 4750:	Loss 0.0003	TrainAcc 1.0000	ValidAcc 0.3588	TestAcc 0.3718	BestValid 0.3768
	Epoch 4800:	Loss 0.0010	TrainAcc 1.0000	ValidAcc 0.3618	TestAcc 0.3746	BestValid 0.3768
	Epoch 4850:	Loss 0.0000	TrainAcc 1.0000	ValidAcc 0.3594	TestAcc 0.3833	BestValid 0.3768
	Epoch 4900:	Loss 0.0002	TrainAcc 1.0000	ValidAcc 0.3606	TestAcc 0.3756	BestValid 0.3768
	Epoch 4950:	Loss 0.0000	TrainAcc 1.0000	ValidAcc 0.3660	TestAcc 0.3804	BestValid 0.3768
	Epoch 5000:	Loss 0.0029	TrainAcc 1.0000	ValidAcc 0.3552	TestAcc 0.3775	BestValid 0.3768
****** Epoch Time (Excluding Evaluation Cost): 0.192 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 32.828 ms (Max: 34.366, Min: 30.563, Sum: 262.621)
Cluster-Wide Average, Compute: 127.708 ms (Max: 147.743, Min: 121.396, Sum: 1021.667)
Cluster-Wide Average, Communication-Layer: 7.452 ms (Max: 8.349, Min: 5.509, Sum: 59.617)
Cluster-Wide Average, Bubble-Imbalance: 19.600 ms (Max: 25.928, Min: 2.726, Sum: 156.799)
Cluster-Wide Average, Communication-Graph: 0.633 ms (Max: 0.775, Min: 0.515, Sum: 5.062)
Cluster-Wide Average, Optimization: 2.166 ms (Max: 2.534, Min: 2.075, Sum: 17.330)
Cluster-Wide Average, Others: 1.404 ms (Max: 2.376, Min: 1.077, Sum: 11.233)
****** Breakdown Sum: 191.791 ms ******
Cluster-Wide Average, GPU Memory Consumption: 3.723 GB (Max: 4.159, Min: 3.604, Sum: 29.782)
Cluster-Wide Average, Graph-Level Communication Throughput: -nan Gbps (Max: -nan, Min: -nan, Sum: -nan)
Cluster-Wide Average, Layer-Level Communication Throughput: 38.381 Gbps (Max: 42.045, Min: 30.035, Sum: 307.046)
Layer-level communication (cluster-wide, per-epoch): 0.271 GB
Graph-level communication (cluster-wide, per-epoch): 0.000 GB
Weight-sync communication (cluster-wide, per-epoch): 0.000 GB
Total communication (cluster-wide, per-epoch): 0.271 GB
****** Accuracy Results ******
Highest valid_acc: 0.3768
Target test_acc: 0.3727
Epoch to reach the target acc: 2599
[MPI Rank 0] Success 
[MPI Rank 4] Success 
[MPI Rank 1] Success 
[MPI Rank 5] Success 
[MPI Rank 2] Success 
[MPI Rank 6] Success 
[MPI Rank 3] Success 
[MPI Rank 7] Success 
