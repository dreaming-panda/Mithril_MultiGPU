Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
Initialized node 4 on machine gnerv8
DONE MPI INIT
DONE MPI INIT
Initialized node 5 on machine gnerv8
Initialized node 7 on machine gnerv8
DONE MPI INIT
Initialized node 6 on machine gnerv8
DONE MPI INIT
DONE MPI INIT
Initialized node 3 on machine gnerv4
Initialized node 2 on machine gnerv4
DONE MPI INIT
DONE MPI INIT
Initialized node 0 on machine gnerv4
Initialized node 1 on machine gnerv4
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 2.020 seconds.
Building the CSC structure...
        It takes 2.169 seconds.
Building the CSC structure...
        It takes 2.309 seconds.
Building the CSC structure...
        It takes 2.373 seconds.
Building the CSC structure...
        It takes 2.387 seconds.
Building the CSC structure...
        It takes 2.409 seconds.
Building the CSC structure...
        It takes 2.453 seconds.
Building the CSC structure...
        It takes 2.707 seconds.
Building the CSC structure...
        It takes 1.895 seconds.
        It takes 1.841 seconds.
        It takes 2.273 seconds.
        It takes 2.305 seconds.
        It takes 2.339 seconds.
        It takes 2.381 seconds.
        It takes 2.385 seconds.
        It takes 2.342 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.271 seconds.
Building the Label Vector...
        It takes 0.286 seconds.
Building the Label Vector...
        It takes 0.037 seconds.
        It takes 0.297 seconds.
Building the Label Vector...
        It takes 0.032 seconds.
        It takes 0.040 seconds.
        It takes 0.290 seconds.
Building the Label Vector...
        It takes 0.039 seconds.
        It takes 0.318 seconds.
Building the Label Vector...
        It takes 0.037 seconds.
        It takes 0.290 seconds.
Building the Label Vector...
        It takes 0.032 seconds.
        It takes 0.293 seconds.
Building the Label Vector...
        It takes 0.031 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/pipeline_parallel_datasets/reddit/32_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 5000
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 2
Number of classes: 41
Number of feature dimensions: 602
Number of vertices: 232965
Number of GPUs: 8
Building the Feature Vector...
        It takes 0.254 seconds.
Building the Label Vector...
        It takes 0.032 seconds.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
train nodes 153431, valid nodes 23831, test nodes 55703
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 8381) 1-[8381, 15124) 2-[15124, 22398) 3-[22398, 30320) 4-[30320, 35655) 5-[35655, 45721) 6-[45721, 55131) 7-[55131, 63248) 8-[63248, 69343) ... 31-[226638, 232965)
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 59.909 Gbps (per GPU), 479.268 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.616 Gbps (per GPU), 476.925 Gbps (aggregated)
The layer-level communication performance: 59.613 Gbps (per GPU), 476.904 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.362 Gbps (per GPU), 474.898 Gbps (aggregated)
The layer-level communication performance: 59.328 Gbps (per GPU), 474.626 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.133 Gbps (per GPU), 473.068 Gbps (aggregated)
The layer-level communication performance: 59.088 Gbps (per GPU), 472.703 Gbps (aggregated)
The layer-level communication performance: 59.055 Gbps (per GPU), 472.438 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 159.400 Gbps (per GPU), 1275.202 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.501 Gbps (per GPU), 1276.008 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.400 Gbps (per GPU), 1275.204 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.510 Gbps (per GPU), 1276.076 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.398 Gbps (per GPU), 1275.181 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.398 Gbps (per GPU), 1275.181 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.401 Gbps (per GPU), 1275.206 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.400 Gbps (per GPU), 1275.204 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 101.118 Gbps (per GPU), 808.944 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.119 Gbps (per GPU), 808.950 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.116 Gbps (per GPU), 808.930 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.120 Gbps (per GPU), 808.956 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.117 Gbps (per GPU), 808.937 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.118 Gbps (per GPU), 808.943 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.115 Gbps (per GPU), 808.924 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.117 Gbps (per GPU), 808.937 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 40.790 Gbps (per GPU), 326.318 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 40.790 Gbps (per GPU), 326.318 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 40.790 Gbps (per GPU), 326.320 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 40.789 Gbps (per GPU), 326.314 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 40.790 Gbps (per GPU), 326.318 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 40.788 Gbps (per GPU), 326.303 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 40.790 Gbps (per GPU), 326.319 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 40.788 Gbps (per GPU), 326.303 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  2.45ms  2.94ms  3.85ms  1.57  8.38K  3.53M
 chk_1  2.85ms  3.15ms  3.88ms  1.36  6.74K  3.60M
 chk_2  2.71ms  3.06ms  3.79ms  1.40  7.27K  3.53M
 chk_3  2.73ms  3.09ms  3.86ms  1.42  7.92K  3.61M
 chk_4  2.65ms  2.93ms  3.55ms  1.34  5.33K  3.68M
 chk_5  2.64ms  3.07ms  3.97ms  1.50 10.07K  3.45M
 chk_6  2.83ms  3.21ms  4.10ms  1.45  9.41K  3.48M
 chk_7  2.67ms  3.02ms  3.81ms  1.43  8.12K  3.60M
 chk_8  2.78ms  3.07ms  3.74ms  1.35  6.09K  3.64M
 chk_9  2.58ms  3.01ms  3.96ms  1.54 11.10K  3.38M
chk_10  2.82ms  3.10ms  3.75ms  1.33  5.67K  3.63M
chk_11  2.68ms  3.07ms  3.98ms  1.49  8.16K  3.54M
chk_12  2.88ms  3.21ms  3.94ms  1.37  7.24K  3.55M
chk_13  2.69ms  2.98ms  3.62ms  1.34  5.41K  3.68M
chk_14  2.93ms  3.30ms  4.03ms  1.37  7.14K  3.53M
chk_15  2.79ms  3.20ms  4.05ms  1.45  9.25K  3.49M
chk_16  2.62ms  2.88ms  3.48ms  1.33  4.78K  3.77M
chk_17  2.76ms  3.08ms  3.78ms  1.37  6.85K  3.60M
chk_18  2.58ms  2.91ms  3.65ms  1.41  7.47K  3.57M
chk_19  2.63ms  2.90ms  3.51ms  1.33  4.88K  3.75M
chk_20  2.65ms  2.96ms  3.68ms  1.39  7.00K  3.63M
chk_21  2.62ms  2.90ms  3.55ms  1.35  5.41K  3.68M
chk_22  2.82ms  3.27ms  4.23ms  1.50 11.07K  3.39M
chk_23  2.74ms  3.06ms  3.81ms  1.39  7.23K  3.64M
chk_24  2.79ms  3.20ms  4.12ms  1.47 10.13K  3.43M
chk_25  2.63ms  2.96ms  3.59ms  1.37  6.40K  3.57M
chk_26  2.80ms  3.12ms  3.76ms  1.34  5.78K  3.55M
chk_27  2.69ms  3.38ms  3.94ms  1.46  9.34K  3.48M
chk_28  3.04ms  3.27ms  3.97ms  1.31  6.37K  3.57M
chk_29  2.84ms  3.04ms  3.69ms  1.30  5.16K  3.78M
chk_30  2.71ms  2.95ms  3.62ms  1.33  5.44K  3.67M
chk_31  2.86ms  3.13ms  3.82ms  1.34  6.33K  3.63M
   Avg  2.73  3.08  3.81
   Max  3.04  3.38  4.23
   Min  2.45  2.88  3.48
 Ratio  1.24  1.17  1.21
   Var  0.01  0.02  0.04
Profiling takes 3.561 s
*** Node 0, starting model training...
Num Stages: 8 / 8
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_ADD
*** Node 0 owns the model-level partition [0, 27)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 2, starting model training...
Num Stages: 8 / 8
Node 2, Pipeline Input Tensor: OPERATOR_ADD
Node 2, Pipeline Output Tensor: OPERATOR_ADD
*** Node 2 owns the model-level partition [55, 83)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 3, starting model training...
Num Stages: 8 / 8
Node 3, Pipeline Input Tensor: OPERATOR_ADD
Node 3, Pipeline Output Tensor: OPERATOR_ADD
*** Node 3 owns the model-level partition [83, 111)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 1, starting model training...
Num Stages: 8 / 8
Node 1, Pipeline Input Tensor: OPERATOR_ADD
Node 1, Pipeline Output Tensor: OPERATOR_ADD
*** Node 1 owns the model-level partition [27, 55)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 4, starting model training...
Num Stages: 8 / 8
Node 4, Pipeline Input Tensor: OPERATOR_ADD
Node 4, Pipeline Output Tensor: OPERATOR_ADD
*** Node 4 owns the model-level partition [111, 139)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 5, starting model training...
Num Stages: 8 / 8
Node 5, Pipeline Input Tensor: OPERATOR_ADD
Node 5, Pipeline Output Tensor: OPERATOR_ADD
*** Node 5 owns the model-level partition [139, 167)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 6, starting model training...
Num Stages: 8 / 8
Node 6, Pipeline Input Tensor: OPERATOR_ADD
Node 6, Pipeline Output Tensor: OPERATOR_ADD
*** Node 6 owns the model-level partition [167, 195)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 7, starting model training...
Num Stages: 8 / 8
Node 7, Pipeline Input Tensor: OPERATOR_ADD
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [195, 229)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 0, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 27)...
+++++++++ Node 4 initializing the weights for op[111, 139)...
+++++++++ Node 1 initializing the weights for op[27, 55)...
+++++++++ Node 5 initializing the weights for op[139, 167)...
+++++++++ Node 3 initializing the weights for op[83, 111)...
+++++++++ Node 6 initializing the weights for op[167, 195)...
+++++++++ Node 2 initializing the weights for op[55, 83)...
+++++++++ Node 7 initializing the weights for op[195, 229)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 0
Node 0, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 4.2814	TrainAcc 0.1766	ValidAcc 0.2174	TestAcc 0.2181	BestValid 0.2174
	Epoch 50:	Loss 0.5791	TrainAcc 0.9173	ValidAcc 0.9256	TestAcc 0.9250	BestValid 0.9256
	Epoch 100:	Loss 0.4184	TrainAcc 0.9346	ValidAcc 0.9400	TestAcc 0.9396	BestValid 0.9400
	Epoch 150:	Loss 0.3745	TrainAcc 0.9389	ValidAcc 0.9436	TestAcc 0.9430	BestValid 0.9436
	Epoch 200:	Loss 0.3503	TrainAcc 0.9419	ValidAcc 0.9455	TestAcc 0.9453	BestValid 0.9455
	Epoch 250:	Loss 0.3336	TrainAcc 0.9435	ValidAcc 0.9462	TestAcc 0.9461	BestValid 0.9462
	Epoch 300:	Loss 0.3227	TrainAcc 0.9448	ValidAcc 0.9472	TestAcc 0.9470	BestValid 0.9472
	Epoch 350:	Loss 0.3130	TrainAcc 0.9461	ValidAcc 0.9481	TestAcc 0.9481	BestValid 0.9481
	Epoch 400:	Loss 0.3049	TrainAcc 0.9466	ValidAcc 0.9484	TestAcc 0.9480	BestValid 0.9484
	Epoch 450:	Loss 0.2976	TrainAcc 0.9477	ValidAcc 0.9496	TestAcc 0.9487	BestValid 0.9496
	Epoch 500:	Loss 0.2922	TrainAcc 0.9481	ValidAcc 0.9499	TestAcc 0.9492	BestValid 0.9499
	Epoch 550:	Loss 0.2883	TrainAcc 0.9490	ValidAcc 0.9502	TestAcc 0.9499	BestValid 0.9502
	Epoch 600:	Loss 0.2827	TrainAcc 0.9494	ValidAcc 0.9503	TestAcc 0.9501	BestValid 0.9503
	Epoch 650:	Loss 0.2794	TrainAcc 0.9501	ValidAcc 0.9506	TestAcc 0.9502	BestValid 0.9506
	Epoch 700:	Loss 0.2753	TrainAcc 0.9507	ValidAcc 0.9513	TestAcc 0.9506	BestValid 0.9513
	Epoch 750:	Loss 0.2709	TrainAcc 0.9511	ValidAcc 0.9510	TestAcc 0.9508	BestValid 0.9513
	Epoch 800:	Loss 0.2666	TrainAcc 0.9517	ValidAcc 0.9515	TestAcc 0.9509	BestValid 0.9515
	Epoch 850:	Loss 0.2638	TrainAcc 0.9520	ValidAcc 0.9520	TestAcc 0.9512	BestValid 0.9520
	Epoch 900:	Loss 0.2612	TrainAcc 0.9522	ValidAcc 0.9517	TestAcc 0.9513	BestValid 0.9520
	Epoch 950:	Loss 0.2595	TrainAcc 0.9531	ValidAcc 0.9519	TestAcc 0.9518	BestValid 0.9520
	Epoch 1000:	Loss 0.2559	TrainAcc 0.9534	ValidAcc 0.9522	TestAcc 0.9519	BestValid 0.9522
	Epoch 1050:	Loss 0.2534	TrainAcc 0.9537	ValidAcc 0.9525	TestAcc 0.9521	BestValid 0.9525
	Epoch 1100:	Loss 0.2518	TrainAcc 0.9537	ValidAcc 0.9520	TestAcc 0.9520	BestValid 0.9525
	Epoch 1150:	Loss 0.2487	TrainAcc 0.9546	ValidAcc 0.9524	TestAcc 0.9525	BestValid 0.9525
	Epoch 1200:	Loss 0.2466	TrainAcc 0.9548	ValidAcc 0.9521	TestAcc 0.9520	BestValid 0.9525
	Epoch 1250:	Loss 0.2445	TrainAcc 0.9552	ValidAcc 0.9522	TestAcc 0.9523	BestValid 0.9525
	Epoch 1300:	Loss 0.2407	TrainAcc 0.9556	ValidAcc 0.9527	TestAcc 0.9526	BestValid 0.9527
	Epoch 1350:	Loss 0.2396	TrainAcc 0.9557	ValidAcc 0.9526	TestAcc 0.9527	BestValid 0.9527
	Epoch 1400:	Loss 0.2376	TrainAcc 0.9560	ValidAcc 0.9530	TestAcc 0.9525	BestValid 0.9530
	Epoch 1450:	Loss 0.2372	TrainAcc 0.9559	ValidAcc 0.9520	TestAcc 0.9522	BestValid 0.9530
	Epoch 1500:	Loss 0.2347	TrainAcc 0.9569	ValidAcc 0.9529	TestAcc 0.9531	BestValid 0.9530
	Epoch 1550:	Loss 0.2328	TrainAcc 0.9570	ValidAcc 0.9531	TestAcc 0.9532	BestValid 0.9531
	Epoch 1600:	Loss 0.2308	TrainAcc 0.9576	ValidAcc 0.9524	TestAcc 0.9531	BestValid 0.9531
	Epoch 1650:	Loss 0.2288	TrainAcc 0.9578	ValidAcc 0.9527	TestAcc 0.9535	BestValid 0.9531
	Epoch 1700:	Loss 0.2270	TrainAcc 0.9577	ValidAcc 0.9525	TestAcc 0.9531	BestValid 0.9531
	Epoch 1750:	Loss 0.2253	TrainAcc 0.9584	ValidAcc 0.9522	TestAcc 0.9534	BestValid 0.9531
	Epoch 1800:	Loss 0.2241	TrainAcc 0.9585	ValidAcc 0.9525	TestAcc 0.9530	BestValid 0.9531
	Epoch 1850:	Loss 0.2235	TrainAcc 0.9589	ValidAcc 0.9529	TestAcc 0.9532	BestValid 0.9531
	Epoch 1900:	Loss 0.2202	TrainAcc 0.9591	ValidAcc 0.9526	TestAcc 0.9539	BestValid 0.9531
	Epoch 1950:	Loss 0.2192	TrainAcc 0.9592	ValidAcc 0.9530	TestAcc 0.9532	BestValid 0.9531
	Epoch 2000:	Loss 0.2167	TrainAcc 0.9594	ValidAcc 0.9530	TestAcc 0.9530	BestValid 0.9531
	Epoch 2050:	Loss 0.2144	TrainAcc 0.9594	ValidAcc 0.9523	TestAcc 0.9531	BestValid 0.9531
	Epoch 2100:	Loss 0.2134	TrainAcc 0.9602	ValidAcc 0.9529	TestAcc 0.9537	BestValid 0.9531
	Epoch 2150:	Loss 0.2124	TrainAcc 0.9604	ValidAcc 0.9531	TestAcc 0.9541	BestValid 0.9531
	Epoch 2200:	Loss 0.2109	TrainAcc 0.9601	ValidAcc 0.9526	TestAcc 0.9528	BestValid 0.9531
	Epoch 2250:	Loss 0.2090	TrainAcc 0.9609	ValidAcc 0.9535	TestAcc 0.9535	BestValid 0.9535
	Epoch 2300:	Loss 0.2079	TrainAcc 0.9610	ValidAcc 0.9532	TestAcc 0.9538	BestValid 0.9535
	Epoch 2350:	Loss 0.2065	TrainAcc 0.9609	ValidAcc 0.9525	TestAcc 0.9535	BestValid 0.9535
	Epoch 2400:	Loss 0.2033	TrainAcc 0.9613	ValidAcc 0.9531	TestAcc 0.9537	BestValid 0.9535
	Epoch 2450:	Loss 0.2040	TrainAcc 0.9620	ValidAcc 0.9534	TestAcc 0.9543	BestValid 0.9535
	Epoch 2500:	Loss 0.2017	TrainAcc 0.9624	ValidAcc 0.9531	TestAcc 0.9537	BestValid 0.9535
	Epoch 2550:	Loss 0.2002	TrainAcc 0.9622	ValidAcc 0.9534	TestAcc 0.9540	BestValid 0.9535
	Epoch 2600:	Loss 0.2016	TrainAcc 0.9609	ValidAcc 0.9522	TestAcc 0.9523	BestValid 0.9535
	Epoch 2650:	Loss 0.1998	TrainAcc 0.9630	ValidAcc 0.9530	TestAcc 0.9539	BestValid 0.9535
	Epoch 2700:	Loss 0.1975	TrainAcc 0.9617	ValidAcc 0.9524	TestAcc 0.9522	BestValid 0.9535
	Epoch 2750:	Loss 0.1958	TrainAcc 0.9631	ValidAcc 0.9521	TestAcc 0.9531	BestValid 0.9535
	Epoch 2800:	Loss 0.1943	TrainAcc 0.9633	ValidAcc 0.9528	TestAcc 0.9538	BestValid 0.9535
	Epoch 2850:	Loss 0.1931	TrainAcc 0.9636	ValidAcc 0.9532	TestAcc 0.9538	BestValid 0.9535
	Epoch 2900:	Loss 0.1917	TrainAcc 0.9638	ValidAcc 0.9531	TestAcc 0.9536	BestValid 0.9535
	Epoch 2950:	Loss 0.1897	TrainAcc 0.9642	ValidAcc 0.9533	TestAcc 0.9545	BestValid 0.9535
	Epoch 3000:	Loss 0.1895	TrainAcc 0.9644	ValidAcc 0.9533	TestAcc 0.9541	BestValid 0.9535
	Epoch 3050:	Loss 0.1887	TrainAcc 0.9643	ValidAcc 0.9530	TestAcc 0.9537	BestValid 0.9535
	Epoch 3100:	Loss 0.1884	TrainAcc 0.9634	ValidAcc 0.9522	TestAcc 0.9533	BestValid 0.9535
	Epoch 3150:	Loss 0.1862	TrainAcc 0.9649	ValidAcc 0.9534	TestAcc 0.9549	BestValid 0.9535
	Epoch 3200:	Loss 0.1868	TrainAcc 0.9648	ValidAcc 0.9514	TestAcc 0.9527	BestValid 0.9535
	Epoch 3250:	Loss 0.1842	TrainAcc 0.9650	ValidAcc 0.9520	TestAcc 0.9534	BestValid 0.9535
	Epoch 3300:	Loss 0.1836	TrainAcc 0.9654	ValidAcc 0.9526	TestAcc 0.9539	BestValid 0.9535
	Epoch 3350:	Loss 0.1815	TrainAcc 0.9647	ValidAcc 0.9523	TestAcc 0.9537	BestValid 0.9535
	Epoch 3400:	Loss 0.1801	TrainAcc 0.9663	ValidAcc 0.9536	TestAcc 0.9543	BestValid 0.9536
	Epoch 3450:	Loss 0.1791	TrainAcc 0.9661	ValidAcc 0.9530	TestAcc 0.9540	BestValid 0.9536
	Epoch 3500:	Loss 0.1797	TrainAcc 0.9662	ValidAcc 0.9525	TestAcc 0.9535	BestValid 0.9536
	Epoch 3550:	Loss 0.1774	TrainAcc 0.9664	ValidAcc 0.9525	TestAcc 0.9534	BestValid 0.9536
	Epoch 3600:	Loss 0.1763	TrainAcc 0.9668	ValidAcc 0.9536	TestAcc 0.9542	BestValid 0.9536
	Epoch 3650:	Loss 0.1751	TrainAcc 0.9666	ValidAcc 0.9533	TestAcc 0.9536	BestValid 0.9536
	Epoch 3700:	Loss 0.1742	TrainAcc 0.9673	ValidAcc 0.9532	TestAcc 0.9539	BestValid 0.9536
	Epoch 3750:	Loss 0.1750	TrainAcc 0.9662	ValidAcc 0.9525	TestAcc 0.9533	BestValid 0.9536
	Epoch 3800:	Loss 0.1741	TrainAcc 0.9669	ValidAcc 0.9524	TestAcc 0.9532	BestValid 0.9536
	Epoch 3850:	Loss 0.1719	TrainAcc 0.9676	ValidAcc 0.9534	TestAcc 0.9537	BestValid 0.9536
	Epoch 3900:	Loss 0.1703	TrainAcc 0.9682	ValidAcc 0.9530	TestAcc 0.9538	BestValid 0.9536
	Epoch 3950:	Loss 0.1701	TrainAcc 0.9672	ValidAcc 0.9529	TestAcc 0.9532	BestValid 0.9536
	Epoch 4000:	Loss 0.1692	TrainAcc 0.9685	ValidAcc 0.9530	TestAcc 0.9533	BestValid 0.9536
	Epoch 4050:	Loss 0.1691	TrainAcc 0.9679	ValidAcc 0.9530	TestAcc 0.9533	BestValid 0.9536
	Epoch 4100:	Loss 0.1685	TrainAcc 0.9677	ValidAcc 0.9520	TestAcc 0.9526	BestValid 0.9536
	Epoch 4150:	Loss 0.1665	TrainAcc 0.9683	ValidAcc 0.9535	TestAcc 0.9535	BestValid 0.9536
	Epoch 4200:	Loss 0.1665	TrainAcc 0.9678	ValidAcc 0.9529	TestAcc 0.9530	BestValid 0.9536
	Epoch 4250:	Loss 0.1654	TrainAcc 0.9683	ValidAcc 0.9534	TestAcc 0.9532	BestValid 0.9536
	Epoch 4300:	Loss 0.1641	TrainAcc 0.9681	ValidAcc 0.9524	TestAcc 0.9520	BestValid 0.9536
	Epoch 4350:	Loss 0.1627	TrainAcc 0.9695	ValidAcc 0.9522	TestAcc 0.9528	BestValid 0.9536
	Epoch 4400:	Loss 0.1620	TrainAcc 0.9691	ValidAcc 0.9535	TestAcc 0.9537	BestValid 0.9536
	Epoch 4450:	Loss 0.1620	TrainAcc 0.9687	ValidAcc 0.9529	TestAcc 0.9524	BestValid 0.9536
	Epoch 4500:	Loss 0.1607	TrainAcc 0.9693	ValidAcc 0.9527	TestAcc 0.9525	BestValid 0.9536
	Epoch 4550:	Loss 0.1602	TrainAcc 0.9699	ValidAcc 0.9542	TestAcc 0.9539	BestValid 0.9542
	Epoch 4600:	Loss 0.1590	TrainAcc 0.9699	ValidAcc 0.9532	TestAcc 0.9532	BestValid 0.9542
	Epoch 4650:	Loss 0.1604	TrainAcc 0.9588	ValidAcc 0.9441	TestAcc 0.9427	BestValid 0.9542
	Epoch 4700:	Loss 0.1610	TrainAcc 0.9669	ValidAcc 0.9507	TestAcc 0.9514	BestValid 0.9542
	Epoch 4750:	Loss 0.1584	TrainAcc 0.9698	ValidAcc 0.9515	TestAcc 0.9522	BestValid 0.9542
	Epoch 4800:	Loss 0.1569	TrainAcc 0.9700	ValidAcc 0.9530	TestAcc 0.9529	BestValid 0.9542
	Epoch 4850:	Loss 0.1567	TrainAcc 0.9706	ValidAcc 0.9524	TestAcc 0.9526	BestValid 0.9542
	Epoch 4900:	Loss 0.1579	TrainAcc 0.9688	ValidAcc 0.9528	TestAcc 0.9523	BestValid 0.9542
	Epoch 4950:	Loss 0.1564	TrainAcc 0.9696	ValidAcc 0.9519	TestAcc 0.9522	BestValid 0.9542
	Epoch 5000:	Loss 0.1545	TrainAcc 0.9697	ValidAcc 0.9530	TestAcc 0.9525	BestValid 0.9542
****** Epoch Time (Excluding Evaluation Cost): 0.455 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 85.208 ms (Max: 91.717, Min: 67.759, Sum: 681.665)
Cluster-Wide Average, Compute: 302.385 ms (Max: 345.725, Min: 290.777, Sum: 2419.078)
Cluster-Wide Average, Communication-Layer: 25.772 ms (Max: 30.838, Min: 17.124, Sum: 206.176)
Cluster-Wide Average, Bubble-Imbalance: 37.338 ms (Max: 52.332, Min: 6.352, Sum: 298.704)
Cluster-Wide Average, Communication-Graph: 0.520 ms (Max: 0.580, Min: 0.439, Sum: 4.161)
Cluster-Wide Average, Optimization: 0.100 ms (Max: 0.122, Min: 0.092, Sum: 0.801)
Cluster-Wide Average, Others: 3.735 ms (Max: 17.394, Min: 1.773, Sum: 29.882)
****** Breakdown Sum: 455.058 ms ******
Cluster-Wide Average, GPU Memory Consumption: 6.500 GB (Max: 7.540, Min: 6.264, Sum: 52.003)
Cluster-Wide Average, Graph-Level Communication Throughput: -nan Gbps (Max: -nan, Min: -nan, Sum: -nan)
Cluster-Wide Average, Layer-Level Communication Throughput: 50.019 Gbps (Max: 57.122, Min: 42.901, Sum: 400.153)
Layer-level communication (cluster-wide, per-epoch): 1.215 GB
Graph-level communication (cluster-wide, per-epoch): 0.000 GB
Weight-sync communication (cluster-wide, per-epoch): 0.000 GB
Total communication (cluster-wide, per-epoch): 1.215 GB
****** Accuracy Results ******
Highest valid_acc: 0.9542
Target test_acc: 0.9539
Epoch to reach the target acc: 4549
[MPI Rank 0] Success 
[MPI Rank 4] Success 
[MPI Rank 1] Success 
[MPI Rank 5] Success 
[MPI Rank 2] Success 
[MPI Rank 6] Success 
[MPI Rank 3] Success 
[MPI Rank 7] Success 
