Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
Initialized node 0 on machine gnerv7
DONE MPI INIT
Initialized node 1 on machine gnerv7
DONE MPI INIT
Initialized node 2 on machine gnerv7
DONE MPI INIT
Initialized node 3 on machine gnerv7
DONE MPI INITDONE MPI INIT
Initialized node 6 on machine gnerv8

Initialized node 4 on machine gnerv8
DONE MPI INIT
Initialized node 5 on machine gnerv8
DONE MPI INIT
Initialized node 7 on machine gnerv8
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 2.363 seconds.
Building the CSC structure...
        It takes 2.452 seconds.
Building the CSC structure...
        It takes 2.492 seconds.
Building the CSC structure...
        It takes 2.521 seconds.
Building the CSC structure...
        It takes 2.533 seconds.
Building the CSC structure...
        It takes 2.595 seconds.
Building the CSC structure...
        It takes 2.633 seconds.
Building the CSC structure...
        It takes 2.759 seconds.
Building the CSC structure...
        It takes 2.368 seconds.
        It takes 2.371 seconds.
        It takes 2.318 seconds.
        It takes 2.449 seconds.
        It takes 2.430 seconds.
        It takes 2.435 seconds.
        It takes 2.378 seconds.
        It takes 2.316 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.272 seconds.
Building the Label Vector...
        It takes 0.032 seconds.
Building the Feature Vector...
        It takes 0.306 seconds.
Building the Label Vector...
        It takes 0.032 seconds.
Building the Feature Vector...
        It takes 0.342 seconds.
Building the Label Vector...
        It takes 0.339 seconds.
Building the Label Vector...
        It takes 0.041 seconds.
        It takes 0.041 seconds.
        It takes 0.348 seconds.
Building the Label Vector...
        It takes 0.036 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/pipeline_parallel_datasets/reddit/32_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 5000
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 2
Number of classes: 41
Number of feature dimensions: 602
Number of vertices: 232965
Number of GPUs: 8
        It takes 0.324 seconds.
Building the Label Vector...
        It takes 0.034 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.266 seconds.
Building the Label Vector...
        It takes 0.032 seconds.
        It takes 0.295 seconds.
Building the Label Vector...
        It takes 0.033 seconds.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
train nodes 153431, valid nodes 23831, test nodes 55703
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 8381) 1-[8381, 15124) 2-[15124, 22398) 3-[22398, 30320) 4-[30320, 35655) 5-[35655, 45721) 6-[45721, 55131) 7-[55131, 63248) 8-[63248, 69343) ... 31-[226638, 232965)
232965, 114848857, 114848857
Number of vertices per chunk: 7281
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 58.957 Gbps (per GPU), 471.659 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.673 Gbps (per GPU), 469.382 Gbps (aggregated)
The layer-level communication performance: 58.662 Gbps (per GPU), 469.294 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.415 Gbps (per GPU), 467.320 Gbps (aggregated)
The layer-level communication performance: 58.387 Gbps (per GPU), 467.093 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.174 Gbps (per GPU), 465.395 Gbps (aggregated)
The layer-level communication performance: 58.134 Gbps (per GPU), 465.070 Gbps (aggregated)
The layer-level communication performance: 58.095 Gbps (per GPU), 464.763 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 160.991 Gbps (per GPU), 1287.930 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 161.019 Gbps (per GPU), 1288.152 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.995 Gbps (per GPU), 1287.959 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 161.004 Gbps (per GPU), 1288.029 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.985 Gbps (per GPU), 1287.880 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.988 Gbps (per GPU), 1287.905 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.985 Gbps (per GPU), 1287.880 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.973 Gbps (per GPU), 1287.781 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 105.460 Gbps (per GPU), 843.684 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.458 Gbps (per GPU), 843.662 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.456 Gbps (per GPU), 843.647 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.450 Gbps (per GPU), 843.599 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.458 Gbps (per GPU), 843.663 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.458 Gbps (per GPU), 843.663 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.457 Gbps (per GPU), 843.656 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.458 Gbps (per GPU), 843.663 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 39.266 Gbps (per GPU), 314.130 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.266 Gbps (per GPU), 314.130 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.266 Gbps (per GPU), 314.127 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.265 Gbps (per GPU), 314.122 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.266 Gbps (per GPU), 314.127 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.266 Gbps (per GPU), 314.130 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.253 Gbps (per GPU), 314.026 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.253 Gbps (per GPU), 314.025 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  2.71ms  3.23ms  4.27ms  1.57  8.38K  3.53M
 chk_1  2.97ms  3.40ms  4.22ms  1.42  6.74K  3.60M
 chk_2  2.87ms  3.30ms  4.14ms  1.44  7.27K  3.53M
 chk_3  2.90ms  3.37ms  4.25ms  1.47  7.92K  3.61M
 chk_4  2.78ms  3.12ms  3.81ms  1.37  5.33K  3.68M
 chk_5  2.87ms  3.42ms  4.48ms  1.56 10.07K  3.45M
 chk_6  3.03ms  3.58ms  4.66ms  1.54  9.41K  3.48M
 chk_7  2.83ms  3.31ms  4.19ms  1.48  8.12K  3.60M
 chk_8  2.90ms  3.29ms  4.04ms  1.39  6.09K  3.64M
 chk_9  2.79ms  3.42ms  4.53ms  1.62 11.10K  3.38M
chk_10  2.94ms  3.31ms  4.02ms  1.37  5.67K  3.63M
chk_11  2.84ms  3.34ms  4.23ms  1.49  8.16K  3.54M
chk_12  3.04ms  3.47ms  4.30ms  1.42  7.24K  3.55M
chk_13  2.82ms  3.18ms  3.88ms  1.37  5.41K  3.68M
chk_14  3.10ms  3.54ms  4.37ms  1.41  7.14K  3.53M
chk_15  3.03ms  3.54ms  4.51ms  1.49  9.25K  3.49M
chk_16  2.75ms  3.06ms  3.72ms  1.35  4.78K  3.77M
chk_17  2.90ms  3.33ms  4.13ms  1.42  6.85K  3.60M
chk_18  2.72ms  3.17ms  4.01ms  1.48  7.47K  3.57M
chk_19  2.74ms  3.09ms  3.75ms  1.37  4.88K  3.75M
chk_20  2.79ms  3.22ms  4.00ms  1.44  7.00K  3.63M
chk_21  2.75ms  3.11ms  3.80ms  1.38  5.41K  3.68M
chk_22  3.06ms  3.68ms  4.80ms  1.57 11.07K  3.39M
chk_23  2.89ms  3.81ms  4.15ms  1.43  7.23K  3.64M
chk_24  3.01ms  3.53ms  4.60ms  1.53 10.13K  3.43M
chk_25  2.76ms  3.11ms  3.90ms  1.41  6.40K  3.57M
chk_26  3.01ms  3.31ms  4.02ms  1.33  5.78K  3.55M
chk_27  2.99ms  3.43ms  4.37ms  1.46  9.34K  3.48M
chk_28  3.17ms  3.53ms  4.30ms  1.36  6.37K  3.57M
chk_29  2.95ms  3.24ms  3.92ms  1.33  5.16K  3.78M
chk_30  2.84ms  3.16ms  3.85ms  1.35  5.44K  3.67M
chk_31  3.00ms  3.38ms  4.13ms  1.38  6.33K  3.63M
   Avg  2.90  3.34  4.17
   Max  3.17  3.81  4.80
   Min  2.71  3.06  3.72
 Ratio  1.17  1.25  1.29
   Var  0.01  0.03  0.07
Profiling takes 3.845 s
*** Node 0, starting model training...
Num Stages: 8 / 8
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_ADD
*** Node 0 owns the model-level partition [0, 48)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 1, starting model training...
Num Stages: 8 / 8
Node 1, Pipeline Input Tensor: OPERATOR_ADD
Node 1, Pipeline Output Tensor: OPERATOR_ADD
*** Node 1 owns the model-level partition [48, 100)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 2, starting model training...
Num Stages: 8 / 8
Node 2, Pipeline Input Tensor: OPERATOR_ADD
Node 2, Pipeline Output Tensor: OPERATOR_ADD
*** Node 2 owns the model-level partition [100, 152)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 3, starting model training...
Num Stages: 8 / 8
Node 3, Pipeline Input Tensor: OPERATOR_ADD
Node 3, Pipeline Output Tensor: OPERATOR_ADD
*** Node 3 owns the model-level partition [152, 204)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 4, starting model training...
Num Stages: 8 / 8
Node 4, Pipeline Input Tensor: OPERATOR_ADD
Node 4, Pipeline Output Tensor: OPERATOR_ADD
*** Node 4 owns the model-level partition [204, 256)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 5, starting model training...
Num Stages: 8 / 8
Node 5, Pipeline Input Tensor: OPERATOR_ADD
Node 5, Pipeline Output Tensor: OPERATOR_ADD
*** Node 5 owns the model-level partition [256, 308)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 6, starting model training...
Num Stages: 8 / 8
Node 6, Pipeline Input Tensor: OPERATOR_ADD
Node 6, Pipeline Output Tensor: OPERATOR_ADD
*** Node 6 owns the model-level partition [308, 360)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 7, starting model training...
Num Stages: 8 / 8
Node 7, Pipeline Input Tensor: OPERATOR_ADD
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [360, 421)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 0, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 48)...
+++++++++ Node 5 initializing the weights for op[256, 308)...
+++++++++ Node 1 initializing the weights for op[48, 100)...
+++++++++ Node 6 initializing the weights for op[308, 360)...
+++++++++ Node 2 initializing the weights for op[100, 152)...
+++++++++ Node 7 initializing the weights for op[360, 421)...
+++++++++ Node 3 initializing the weights for op[152, 204)...
+++++++++ Node 4 initializing the weights for op[204, 256)...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be received across the graph boundary.
The number of mirror vertices: 0
Node 0, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 4.3155	TrainAcc 0.1663	ValidAcc 0.1940	TestAcc 0.1951	BestValid 0.1940
	Epoch 50:	Loss 0.9615	TrainAcc 0.8328	ValidAcc 0.8449	TestAcc 0.8418	BestValid 0.8449
	Epoch 100:	Loss 0.4419	TrainAcc 0.9358	ValidAcc 0.9421	TestAcc 0.9404	BestValid 0.9421
	Epoch 150:	Loss 0.3380	TrainAcc 0.9464	ValidAcc 0.9501	TestAcc 0.9494	BestValid 0.9501
	Epoch 200:	Loss 0.2908	TrainAcc 0.9526	ValidAcc 0.9551	TestAcc 0.9540	BestValid 0.9551
	Epoch 250:	Loss 0.2610	TrainAcc 0.9568	ValidAcc 0.9581	TestAcc 0.9572	BestValid 0.9581
	Epoch 300:	Loss 0.2421	TrainAcc 0.9601	ValidAcc 0.9598	TestAcc 0.9587	BestValid 0.9598
	Epoch 350:	Loss 0.2257	TrainAcc 0.9625	ValidAcc 0.9606	TestAcc 0.9593	BestValid 0.9606
	Epoch 400:	Loss 0.2131	TrainAcc 0.9645	ValidAcc 0.9617	TestAcc 0.9603	BestValid 0.9617
	Epoch 450:	Loss 0.2017	TrainAcc 0.9663	ValidAcc 0.9622	TestAcc 0.9611	BestValid 0.9622
	Epoch 500:	Loss 0.1918	TrainAcc 0.9678	ValidAcc 0.9627	TestAcc 0.9617	BestValid 0.9627
	Epoch 550:	Loss 0.1830	TrainAcc 0.9694	ValidAcc 0.9635	TestAcc 0.9621	BestValid 0.9635
	Epoch 600:	Loss 0.1760	TrainAcc 0.9704	ValidAcc 0.9638	TestAcc 0.9624	BestValid 0.9638
	Epoch 650:	Loss 0.1680	TrainAcc 0.9717	ValidAcc 0.9637	TestAcc 0.9627	BestValid 0.9638
	Epoch 700:	Loss 0.1639	TrainAcc 0.9732	ValidAcc 0.9646	TestAcc 0.9632	BestValid 0.9646
	Epoch 750:	Loss 0.1582	TrainAcc 0.9743	ValidAcc 0.9646	TestAcc 0.9636	BestValid 0.9646
	Epoch 800:	Loss 0.1520	TrainAcc 0.9755	ValidAcc 0.9652	TestAcc 0.9635	BestValid 0.9652
	Epoch 850:	Loss 0.1488	TrainAcc 0.9762	ValidAcc 0.9649	TestAcc 0.9637	BestValid 0.9652
	Epoch 900:	Loss 0.1419	TrainAcc 0.9770	ValidAcc 0.9650	TestAcc 0.9640	BestValid 0.9652
	Epoch 950:	Loss 0.1379	TrainAcc 0.9783	ValidAcc 0.9659	TestAcc 0.9641	BestValid 0.9659
	Epoch 1000:	Loss 0.1333	TrainAcc 0.9791	ValidAcc 0.9652	TestAcc 0.9643	BestValid 0.9659
	Epoch 1050:	Loss 0.1312	TrainAcc 0.9800	ValidAcc 0.9655	TestAcc 0.9645	BestValid 0.9659
	Epoch 1100:	Loss 0.1276	TrainAcc 0.9811	ValidAcc 0.9655	TestAcc 0.9645	BestValid 0.9659
	Epoch 1150:	Loss 0.1231	TrainAcc 0.9817	ValidAcc 0.9653	TestAcc 0.9648	BestValid 0.9659
	Epoch 1200:	Loss 0.1198	TrainAcc 0.9820	ValidAcc 0.9660	TestAcc 0.9646	BestValid 0.9660
	Epoch 1250:	Loss 0.1140	TrainAcc 0.9827	ValidAcc 0.9652	TestAcc 0.9647	BestValid 0.9660
	Epoch 1300:	Loss 0.1114	TrainAcc 0.9835	ValidAcc 0.9655	TestAcc 0.9645	BestValid 0.9660
	Epoch 1350:	Loss 0.1103	TrainAcc 0.9838	ValidAcc 0.9650	TestAcc 0.9642	BestValid 0.9660
	Epoch 1400:	Loss 0.1047	TrainAcc 0.9851	ValidAcc 0.9656	TestAcc 0.9645	BestValid 0.9660
	Epoch 1450:	Loss 0.1026	TrainAcc 0.9856	ValidAcc 0.9652	TestAcc 0.9645	BestValid 0.9660
	Epoch 1500:	Loss 0.0988	TrainAcc 0.9864	ValidAcc 0.9658	TestAcc 0.9646	BestValid 0.9660
	Epoch 1550:	Loss 0.0961	TrainAcc 0.9871	ValidAcc 0.9650	TestAcc 0.9644	BestValid 0.9660
	Epoch 1600:	Loss 0.0943	TrainAcc 0.9877	ValidAcc 0.9656	TestAcc 0.9644	BestValid 0.9660
	Epoch 1650:	Loss 0.0907	TrainAcc 0.9882	ValidAcc 0.9658	TestAcc 0.9640	BestValid 0.9660
	Epoch 1700:	Loss 0.0885	TrainAcc 0.9890	ValidAcc 0.9653	TestAcc 0.9645	BestValid 0.9660
	Epoch 1750:	Loss 0.0865	TrainAcc 0.9884	ValidAcc 0.9650	TestAcc 0.9640	BestValid 0.9660
	Epoch 1800:	Loss 0.0836	TrainAcc 0.9901	ValidAcc 0.9654	TestAcc 0.9640	BestValid 0.9660
	Epoch 1850:	Loss 0.0815	TrainAcc 0.9905	ValidAcc 0.9653	TestAcc 0.9640	BestValid 0.9660
	Epoch 1900:	Loss 0.0797	TrainAcc 0.9910	ValidAcc 0.9652	TestAcc 0.9642	BestValid 0.9660
	Epoch 1950:	Loss 0.0759	TrainAcc 0.9913	ValidAcc 0.9653	TestAcc 0.9642	BestValid 0.9660
	Epoch 2000:	Loss 0.0732	TrainAcc 0.9920	ValidAcc 0.9651	TestAcc 0.9642	BestValid 0.9660
	Epoch 2050:	Loss 0.0719	TrainAcc 0.9922	ValidAcc 0.9648	TestAcc 0.9641	BestValid 0.9660
	Epoch 2100:	Loss 0.0703	TrainAcc 0.9924	ValidAcc 0.9645	TestAcc 0.9638	BestValid 0.9660
	Epoch 2150:	Loss 0.0678	TrainAcc 0.9930	ValidAcc 0.9648	TestAcc 0.9638	BestValid 0.9660
	Epoch 2200:	Loss 0.0664	TrainAcc 0.9934	ValidAcc 0.9647	TestAcc 0.9637	BestValid 0.9660
	Epoch 2250:	Loss 0.0629	TrainAcc 0.9936	ValidAcc 0.9644	TestAcc 0.9638	BestValid 0.9660
	Epoch 2300:	Loss 0.0623	TrainAcc 0.9941	ValidAcc 0.9644	TestAcc 0.9636	BestValid 0.9660
	Epoch 2350:	Loss 0.0614	TrainAcc 0.9944	ValidAcc 0.9652	TestAcc 0.9637	BestValid 0.9660
	Epoch 2400:	Loss 0.0589	TrainAcc 0.9940	ValidAcc 0.9640	TestAcc 0.9629	BestValid 0.9660
	Epoch 2450:	Loss 0.0556	TrainAcc 0.9949	ValidAcc 0.9644	TestAcc 0.9641	BestValid 0.9660
	Epoch 2500:	Loss 0.0547	TrainAcc 0.9954	ValidAcc 0.9647	TestAcc 0.9637	BestValid 0.9660
	Epoch 2550:	Loss 0.0527	TrainAcc 0.9955	ValidAcc 0.9640	TestAcc 0.9637	BestValid 0.9660
	Epoch 2600:	Loss 0.0533	TrainAcc 0.9960	ValidAcc 0.9643	TestAcc 0.9636	BestValid 0.9660
	Epoch 2650:	Loss 0.0511	TrainAcc 0.9961	ValidAcc 0.9638	TestAcc 0.9636	BestValid 0.9660
	Epoch 2700:	Loss 0.0486	TrainAcc 0.9962	ValidAcc 0.9642	TestAcc 0.9636	BestValid 0.9660
	Epoch 2750:	Loss 0.0472	TrainAcc 0.9966	ValidAcc 0.9638	TestAcc 0.9633	BestValid 0.9660
	Epoch 2800:	Loss 0.0448	TrainAcc 0.9969	ValidAcc 0.9639	TestAcc 0.9631	BestValid 0.9660
	Epoch 2850:	Loss 0.0449	TrainAcc 0.9970	ValidAcc 0.9638	TestAcc 0.9629	BestValid 0.9660
	Epoch 2900:	Loss 0.0437	TrainAcc 0.9973	ValidAcc 0.9646	TestAcc 0.9635	BestValid 0.9660
	Epoch 2950:	Loss 0.0422	TrainAcc 0.9973	ValidAcc 0.9640	TestAcc 0.9630	BestValid 0.9660
	Epoch 3000:	Loss 0.0415	TrainAcc 0.9975	ValidAcc 0.9641	TestAcc 0.9628	BestValid 0.9660
	Epoch 3050:	Loss 0.0392	TrainAcc 0.9977	ValidAcc 0.9640	TestAcc 0.9635	BestValid 0.9660
	Epoch 3100:	Loss 0.0383	TrainAcc 0.9978	ValidAcc 0.9637	TestAcc 0.9633	BestValid 0.9660
	Epoch 3150:	Loss 0.0371	TrainAcc 0.9981	ValidAcc 0.9638	TestAcc 0.9631	BestValid 0.9660
	Epoch 3200:	Loss 0.0375	TrainAcc 0.9976	ValidAcc 0.9633	TestAcc 0.9622	BestValid 0.9660
