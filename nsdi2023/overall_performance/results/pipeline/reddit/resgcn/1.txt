Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
Initialized node 4 on machine gnerv8
DONE MPI INIT
Initialized node 5 on machine gnerv8
DONE MPI INIT
Initialized node 6 on machine gnerv8
DONE MPI INIT
Initialized node 7 on machine gnerv8
DONE MPI INITDONE MPI INIT
Initialized node 2 on machine gnerv7

DONE MPI INIT
Initialized node 0 on machine gnerv7
Initialized node 1 on machine gnerv7
DONE MPI INIT
Initialized node 3 on machine gnerv7
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 2.369 seconds.
Building the CSC structure...
        It takes 2.398 seconds.
Building the CSC structure...
        It takes 2.570 seconds.
Building the CSC structure...
        It takes 2.695 seconds.
Building the CSC structure...
        It takes 3.006 seconds.
Building the CSC structure...
        It takes 3.006 seconds.
Building the CSC structure...
        It takes 3.006 seconds.
Building the CSC structure...
        It takes 3.042 seconds.
Building the CSC structure...
        It takes 2.336 seconds.
        It takes 2.374 seconds.
        It takes 2.253 seconds.
        It takes 2.415 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 2.827 seconds.
        It takes 2.827 seconds.
        It takes 2.791 seconds.
        It takes 2.827 seconds.
        It takes 0.269 seconds.
Building the Label Vector...
        It takes 0.038 seconds.
        It takes 0.294 seconds.
Building the Label Vector...
        It takes 0.033 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.255 seconds.
Building the Label Vector...
        It takes 0.032 seconds.
        It takes 0.279 seconds.
Building the Label Vector...
        It takes 0.032 seconds.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Building the Feature Vector...
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
        It takes 0.766 seconds.
        It takes 0.405 seconds.
        It takes 0.539 seconds.
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
        It takes 0.650 seconds.
Building the Label Vector...
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
        It takes 0.072 seconds.
        It takes 0.072 seconds.
        It takes 0.072 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/pipeline_parallel_datasets/reddit/32_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 5000
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 1
Number of classes: 41
Number of feature dimensions: 602
Number of vertices: 232965
Number of GPUs: 8
        It takes 0.071 seconds.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
train nodes 153431, valid nodes 23831, test nodes 55703
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 8381) 1-[8381, 15124) 2-[15124, 22398) 3-[22398, 30320) 4-[30320, 35655) 5-[35655, 45721) 6-[45721, 55131) 7-[55131, 63248) 8-[63248, 69343) ... 31-[226638, 232965)
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
csr in-out ready !Start Cost Model Initialization...
232965, 114848857, 114848857
Number of vertices per chunk: 7281
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
The layer-level communication performance: 59.359 Gbps (per GPU), 474.871 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.048 Gbps (per GPU), 472.385 Gbps (aggregated)
The layer-level communication performance: 59.057 Gbps (per GPU), 472.455 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.793 Gbps (per GPU), 470.345 Gbps (aggregated)
The layer-level communication performance: 58.761 Gbps (per GPU), 470.089 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.570 Gbps (per GPU), 468.558 Gbps (aggregated)
The layer-level communication performance: 58.517 Gbps (per GPU), 468.137 Gbps (aggregated)
The layer-level communication performance: 58.490 Gbps (per GPU), 467.917 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.386 Gbps (per GPU), 1267.090 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.374 Gbps (per GPU), 1266.994 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.389 Gbps (per GPU), 1267.115 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.374 Gbps (per GPU), 1266.994 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.386 Gbps (per GPU), 1267.090 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.335 Gbps (per GPU), 1266.683 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.386 Gbps (per GPU), 1267.091 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.159 Gbps (per GPU), 1265.274 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 104.349 Gbps (per GPU), 834.791 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.350 Gbps (per GPU), 834.798 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.335 Gbps (per GPU), 834.681 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.348 Gbps (per GPU), 834.784 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.347 Gbps (per GPU), 834.777 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.347 Gbps (per GPU), 834.777 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.346 Gbps (per GPU), 834.772 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.297 Gbps (per GPU), 834.376 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 39.471 Gbps (per GPU), 315.766 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.471 Gbps (per GPU), 315.765 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.470 Gbps (per GPU), 315.760 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.470 Gbps (per GPU), 315.760 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.470 Gbps (per GPU), 315.762 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.469 Gbps (per GPU), 315.749 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.469 Gbps (per GPU), 315.750 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.469 Gbps (per GPU), 315.752 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  2.68ms  3.25ms  4.30ms  1.60  8.38K  3.53M
 chk_1  3.00ms  3.39ms  4.26ms  1.42  6.74K  3.60M
 chk_2  2.86ms  3.31ms  4.16ms  1.46  7.27K  3.53M
 chk_3  2.90ms  3.38ms  4.28ms  1.48  7.92K  3.61M
 chk_4  2.77ms  3.13ms  4.04ms  1.46  5.33K  3.68M
 chk_5  2.87ms  3.44ms  4.51ms  1.57 10.07K  3.45M
 chk_6  3.05ms  3.58ms  4.61ms  1.51  9.41K  3.48M
 chk_7  2.84ms  3.32ms  4.23ms  1.49  8.12K  3.60M
 chk_8  2.92ms  3.31ms  4.08ms  1.40  6.09K  3.64M
 chk_9  2.80ms  3.40ms  4.55ms  1.62 11.10K  3.38M
chk_10  2.93ms  3.30ms  4.07ms  1.39  5.67K  3.63M
chk_11  2.83ms  3.35ms  4.28ms  1.51  8.16K  3.54M
chk_12  3.04ms  3.47ms  4.33ms  1.42  7.24K  3.55M
chk_13  2.82ms  3.74ms  3.92ms  1.39  5.41K  3.68M
chk_14  3.11ms  3.53ms  4.42ms  1.42  7.14K  3.53M
chk_15  3.01ms  3.55ms  4.56ms  1.51  9.25K  3.49M
chk_16  2.74ms  3.07ms  3.77ms  1.37  4.78K  3.77M
chk_17  2.91ms  3.33ms  4.17ms  1.43  6.85K  3.60M
chk_18  2.73ms  3.16ms  4.04ms  1.48  7.47K  3.57M
chk_19  2.74ms  3.09ms  3.80ms  1.39  4.88K  3.75M
chk_20  2.80ms  3.18ms  4.06ms  1.45  7.00K  3.63M
chk_21  2.74ms  3.09ms  3.84ms  1.40  5.41K  3.68M
chk_22  3.06ms  3.70ms  4.84ms  1.58 11.07K  3.39M
chk_23  2.90ms  3.33ms  4.18ms  1.44  7.23K  3.64M
chk_24  2.99ms  3.58ms  4.65ms  1.56 10.13K  3.43M
chk_25  2.75ms  3.15ms  3.93ms  1.43  6.40K  3.57M
chk_26  2.96ms  3.30ms  4.07ms  1.38  5.78K  3.55M
chk_27  2.98ms  3.41ms  4.42ms  1.48  9.34K  3.48M
chk_28  3.16ms  3.53ms  4.34ms  1.37  6.37K  3.57M
chk_29  2.93ms  3.25ms  3.96ms  1.35  5.16K  3.78M
chk_30  2.82ms  3.17ms  3.90ms  1.38  5.44K  3.67M
chk_31  3.01ms  3.39ms  4.18ms  1.39  6.33K  3.63M
   Avg  2.90  3.35  4.21
   Max  3.16  3.74  4.84
   Min  2.68  3.07  3.77
 Ratio  1.18  1.22  1.28
   Var  0.01  0.03  0.07
Profiling takes 3.873 s
*** Node 0, starting model training...
Num Stages: 8 / 8
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_ADD
*** Node 0 owns the model-level partition [0, 48)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 1, starting model training...
Num Stages: 8 / 8
Node 1, Pipeline Input Tensor: OPERATOR_ADD
Node 1, Pipeline Output Tensor: OPERATOR_ADD
*** Node 1 owns the model-level partition [48, 100)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 2, starting model training...
Num Stages: 8 / 8
Node 2, Pipeline Input Tensor: OPERATOR_ADD
Node 2, Pipeline Output Tensor: OPERATOR_ADD
*** Node 2 owns the model-level partition [100, 152)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 4, starting model training...
Num Stages: 8 / 8
Node 4, Pipeline Input Tensor: OPERATOR_ADD
Node 4, Pipeline Output Tensor: OPERATOR_ADD
*** Node 3, starting model training...
Num Stages: 8 / 8
Node 3, Pipeline Input Tensor: OPERATOR_ADD
Node 3, Pipeline Output Tensor: OPERATOR_ADD
*** Node 3 owns the model-level partition [152, 204)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 5, starting model training...
Num Stages: 8 / 8
Node 5, Pipeline Input Tensor: OPERATOR_ADD
Node 5, Pipeline Output Tensor: OPERATOR_ADD
*** Node 5 owns the model-level partition [256, 308)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 6, starting model training...
Num Stages: 8 / 8
Node 6, Pipeline Input Tensor: OPERATOR_ADD
Node 6, Pipeline Output Tensor: OPERATOR_ADD
*** Node 6 owns the model-level partition [308, 360)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 7, starting model training...
Num Stages: 8 / 8
Node 7, Pipeline Input Tensor: OPERATOR_ADD
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [360, 421)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 4 owns the model-level partition [204, 256)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 0, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 48)...
+++++++++ Node 3 initializing the weights for op[152, 204)...
+++++++++ Node 1 initializing the weights for op[48, 100)...
+++++++++ Node 4 initializing the weights for op[204, 256)...
+++++++++ Node 2 initializing the weights for op[100, 152)...
+++++++++ Node 5 initializing the weights for op[256, 308)...
+++++++++ Node 6 initializing the weights for op[308, 360)...
+++++++++ Node 7 initializing the weights for op[360, 421)...
Node 0, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 0
Node 0, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...
*** Node 1, starting task scheduling...
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000



The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 4, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 4.1985	TrainAcc 0.1449	ValidAcc 0.1458	TestAcc 0.1438	BestValid 0.1458
	Epoch 50:	Loss 0.8667	TrainAcc 0.8658	ValidAcc 0.8781	TestAcc 0.8750	BestValid 0.8781
	Epoch 100:	Loss 0.4176	TrainAcc 0.9380	ValidAcc 0.9445	TestAcc 0.9435	BestValid 0.9445
	Epoch 150:	Loss 0.3278	TrainAcc 0.9481	ValidAcc 0.9515	TestAcc 0.9515	BestValid 0.9515
	Epoch 200:	Loss 0.2842	TrainAcc 0.9536	ValidAcc 0.9559	TestAcc 0.9550	BestValid 0.9559
	Epoch 250:	Loss 0.2540	TrainAcc 0.9584	ValidAcc 0.9582	TestAcc 0.9578	BestValid 0.9582
	Epoch 300:	Loss 0.2343	TrainAcc 0.9613	ValidAcc 0.9597	TestAcc 0.9594	BestValid 0.9597
	Epoch 350:	Loss 0.2190	TrainAcc 0.9633	ValidAcc 0.9606	TestAcc 0.9603	BestValid 0.9606
	Epoch 400:	Loss 0.2061	TrainAcc 0.9655	ValidAcc 0.9616	TestAcc 0.9614	BestValid 0.9616
	Epoch 450:	Loss 0.1946	TrainAcc 0.9671	ValidAcc 0.9623	TestAcc 0.9622	BestValid 0.9623
	Epoch 500:	Loss 0.1880	TrainAcc 0.9685	ValidAcc 0.9630	TestAcc 0.9629	BestValid 0.9630
	Epoch 550:	Loss 0.1796	TrainAcc 0.9702	ValidAcc 0.9637	TestAcc 0.9636	BestValid 0.9637
	Epoch 600:	Loss 0.1714	TrainAcc 0.9713	ValidAcc 0.9637	TestAcc 0.9636	BestValid 0.9637
	Epoch 650:	Loss 0.1670	TrainAcc 0.9723	ValidAcc 0.9640	TestAcc 0.9635	BestValid 0.9640
	Epoch 700:	Loss 0.1600	TrainAcc 0.9739	ValidAcc 0.9645	TestAcc 0.9640	BestValid 0.9645
	Epoch 750:	Loss 0.1547	TrainAcc 0.9749	ValidAcc 0.9646	TestAcc 0.9639	BestValid 0.9646
	Epoch 800:	Loss 0.1488	TrainAcc 0.9762	ValidAcc 0.9653	TestAcc 0.9641	BestValid 0.9653
	Epoch 850:	Loss 0.1444	TrainAcc 0.9767	ValidAcc 0.9646	TestAcc 0.9641	BestValid 0.9653
	Epoch 900:	Loss 0.1398	TrainAcc 0.9776	ValidAcc 0.9648	TestAcc 0.9644	BestValid 0.9653
	Epoch 950:	Loss 0.1351	TrainAcc 0.9790	ValidAcc 0.9652	TestAcc 0.9639	BestValid 0.9653
	Epoch 1000:	Loss 0.1312	TrainAcc 0.9795	ValidAcc 0.9650	TestAcc 0.9645	BestValid 0.9653
	Epoch 1050:	Loss 0.1277	TrainAcc 0.9808	ValidAcc 0.9650	TestAcc 0.9648	BestValid 0.9653
	Epoch 1100:	Loss 0.1243	TrainAcc 0.9814	ValidAcc 0.9649	TestAcc 0.9649	BestValid 0.9653
	Epoch 1150:	Loss 0.1190	TrainAcc 0.9820	ValidAcc 0.9650	TestAcc 0.9642	BestValid 0.9653
	Epoch 1200:	Loss 0.1158	TrainAcc 0.9827	ValidAcc 0.9655	TestAcc 0.9643	BestValid 0.9655
	Epoch 1250:	Loss 0.1133	TrainAcc 0.9825	ValidAcc 0.9644	TestAcc 0.9641	BestValid 0.9655
	Epoch 1300:	Loss 0.1096	TrainAcc 0.9843	ValidAcc 0.9648	TestAcc 0.9645	BestValid 0.9655
	Epoch 1350:	Loss 0.1074	TrainAcc 0.9851	ValidAcc 0.9646	TestAcc 0.9643	BestValid 0.9655
	Epoch 1400:	Loss 0.1056	TrainAcc 0.9856	ValidAcc 0.9644	TestAcc 0.9644	BestValid 0.9655
	Epoch 1450:	Loss 0.1011	TrainAcc 0.9855	ValidAcc 0.9647	TestAcc 0.9642	BestValid 0.9655
	Epoch 1500:	Loss 0.0997	TrainAcc 0.9868	ValidAcc 0.9648	TestAcc 0.9642	BestValid 0.9655
	Epoch 1550:	Loss 0.0952	TrainAcc 0.9871	ValidAcc 0.9649	TestAcc 0.9641	BestValid 0.9655
	Epoch 1600:	Loss 0.0949	TrainAcc 0.9876	ValidAcc 0.9645	TestAcc 0.9643	BestValid 0.9655
	Epoch 1650:	Loss 0.0907	TrainAcc 0.9886	ValidAcc 0.9648	TestAcc 0.9643	BestValid 0.9655
	Epoch 1700:	Loss 0.0890	TrainAcc 0.9890	ValidAcc 0.9644	TestAcc 0.9640	BestValid 0.9655
	Epoch 1750:	Loss 0.0863	TrainAcc 0.9890	ValidAcc 0.9641	TestAcc 0.9638	BestValid 0.9655
	Epoch 1800:	Loss 0.0845	TrainAcc 0.9895	ValidAcc 0.9648	TestAcc 0.9642	BestValid 0.9655
	Epoch 1850:	Loss 0.0828	TrainAcc 0.9905	ValidAcc 0.9645	TestAcc 0.9642	BestValid 0.9655
	Epoch 1900:	Loss 0.0794	TrainAcc 0.9906	ValidAcc 0.9642	TestAcc 0.9639	BestValid 0.9655
	Epoch 1950:	Loss 0.0771	TrainAcc 0.9913	ValidAcc 0.9645	TestAcc 0.9642	BestValid 0.9655
	Epoch 2000:	Loss 0.0774	TrainAcc 0.9917	ValidAcc 0.9642	TestAcc 0.9641	BestValid 0.9655
	Epoch 2050:	Loss 0.0739	TrainAcc 0.9919	ValidAcc 0.9644	TestAcc 0.9635	BestValid 0.9655
	Epoch 2100:	Loss 0.0695	TrainAcc 0.9924	ValidAcc 0.9645	TestAcc 0.9640	BestValid 0.9655
	Epoch 2150:	Loss 0.0680	TrainAcc 0.9928	ValidAcc 0.9643	TestAcc 0.9639	BestValid 0.9655
	Epoch 2200:	Loss 0.0664	TrainAcc 0.9932	ValidAcc 0.9642	TestAcc 0.9638	BestValid 0.9655
	Epoch 2250:	Loss 0.0655	TrainAcc 0.9934	ValidAcc 0.9640	TestAcc 0.9635	BestValid 0.9655
	Epoch 2300:	Loss 0.0641	TrainAcc 0.9935	ValidAcc 0.9644	TestAcc 0.9631	BestValid 0.9655
	Epoch 2350:	Loss 0.0635	TrainAcc 0.9940	ValidAcc 0.9642	TestAcc 0.9635	BestValid 0.9655
	Epoch 2400:	Loss 0.0601	TrainAcc 0.9945	ValidAcc 0.9640	TestAcc 0.9635	BestValid 0.9655
	Epoch 2450:	Loss 0.0582	TrainAcc 0.9946	ValidAcc 0.9639	TestAcc 0.9637	BestValid 0.9655
	Epoch 2500:	Loss 0.0573	TrainAcc 0.9951	ValidAcc 0.9644	TestAcc 0.9635	BestValid 0.9655
	Epoch 2550:	Loss 0.0563	TrainAcc 0.9953	ValidAcc 0.9639	TestAcc 0.9635	BestValid 0.9655
	Epoch 2600:	Loss 0.0559	TrainAcc 0.9956	ValidAcc 0.9634	TestAcc 0.9632	BestValid 0.9655
	Epoch 2650:	Loss 0.0536	TrainAcc 0.9958	ValidAcc 0.9647	TestAcc 0.9633	BestValid 0.9655
	Epoch 2700:	Loss 0.0524	TrainAcc 0.9959	ValidAcc 0.9641	TestAcc 0.9636	BestValid 0.9655
	Epoch 2750:	Loss 0.0503	TrainAcc 0.9963	ValidAcc 0.9639	TestAcc 0.9635	BestValid 0.9655
	Epoch 2800:	Loss 0.0487	TrainAcc 0.9964	ValidAcc 0.9635	TestAcc 0.9631	BestValid 0.9655
	Epoch 2850:	Loss 0.0472	TrainAcc 0.9965	ValidAcc 0.9640	TestAcc 0.9631	BestValid 0.9655
	Epoch 2900:	Loss 0.0466	TrainAcc 0.9966	ValidAcc 0.9641	TestAcc 0.9633	BestValid 0.9655
	Epoch 2950:	Loss 0.0441	TrainAcc 0.9970	ValidAcc 0.9636	TestAcc 0.9634	BestValid 0.9655
	Epoch 3000:	Loss 0.0435	TrainAcc 0.9969	ValidAcc 0.9637	TestAcc 0.9631	BestValid 0.9655
	Epoch 3050:	Loss 0.0429	TrainAcc 0.9974	ValidAcc 0.9634	TestAcc 0.9632	BestValid 0.9655
	Epoch 3100:	Loss 0.0413	TrainAcc 0.9974	ValidAcc 0.9632	TestAcc 0.9631	BestValid 0.9655
	Epoch 3150:	Loss 0.0407	TrainAcc 0.9976	ValidAcc 0.9633	TestAcc 0.9631	BestValid 0.9655
	Epoch 3200:	Loss 0.0389	TrainAcc 0.9977	ValidAcc 0.9635	TestAcc 0.9624	BestValid 0.9655
	Epoch 3250:	Loss 0.0388	TrainAcc 0.9978	ValidAcc 0.9632	TestAcc 0.9633	BestValid 0.9655
	Epoch 3300:	Loss 0.0374	TrainAcc 0.9978	ValidAcc 0.9629	TestAcc 0.9628	BestValid 0.9655
	Epoch 3350:	Loss 0.0351	TrainAcc 0.9979	ValidAcc 0.9634	TestAcc 0.9630	BestValid 0.9655
	Epoch 3400:	Loss 0.0358	TrainAcc 0.9981	ValidAcc 0.9626	TestAcc 0.9629	BestValid 0.9655
	Epoch 3450:	Loss 0.0349	TrainAcc 0.9982	ValidAcc 0.9633	TestAcc 0.9630	BestValid 0.9655
	Epoch 3500:	Loss 0.0338	TrainAcc 0.9982	ValidAcc 0.9623	TestAcc 0.9627	BestValid 0.9655
	Epoch 3550:	Loss 0.0326	TrainAcc 0.9983	ValidAcc 0.9623	TestAcc 0.9632	BestValid 0.9655
	Epoch 3600:	Loss 0.0322	TrainAcc 0.9986	ValidAcc 0.9632	TestAcc 0.9628	BestValid 0.9655
	Epoch 3650:	Loss 0.0306	TrainAcc 0.9986	ValidAcc 0.9624	TestAcc 0.9626	BestValid 0.9655
	Epoch 3700:	Loss 0.0304	TrainAcc 0.9987	ValidAcc 0.9621	TestAcc 0.9630	BestValid 0.9655
	Epoch 3750:	Loss 0.0287	TrainAcc 0.9988	ValidAcc 0.9626	TestAcc 0.9625	BestValid 0.9655
	Epoch 3800:	Loss 0.0292	TrainAcc 0.9987	ValidAcc 0.9625	TestAcc 0.9628	BestValid 0.9655
	Epoch 3850:	Loss 0.0272	TrainAcc 0.9989	ValidAcc 0.9623	TestAcc 0.9626	BestValid 0.9655
	Epoch 3900:	Loss 0.0269	TrainAcc 0.9989	ValidAcc 0.9626	TestAcc 0.9625	BestValid 0.9655
	Epoch 3950:	Loss 0.0253	TrainAcc 0.9989	ValidAcc 0.9625	TestAcc 0.9626	BestValid 0.9655
	Epoch 4000:	Loss 0.0255	TrainAcc 0.9990	ValidAcc 0.9623	TestAcc 0.9630	BestValid 0.9655
	Epoch 4050:	Loss 0.0253	TrainAcc 0.9989	ValidAcc 0.9624	TestAcc 0.9623	BestValid 0.9655
	Epoch 4100:	Loss 0.0251	TrainAcc 0.9991	ValidAcc 0.9619	TestAcc 0.9625	BestValid 0.9655
	Epoch 4150:	Loss 0.0236	TrainAcc 0.9991	ValidAcc 0.9617	TestAcc 0.9620	BestValid 0.9655
	Epoch 4200:	Loss 0.0245	TrainAcc 0.9992	ValidAcc 0.9623	TestAcc 0.9623	BestValid 0.9655
	Epoch 4250:	Loss 0.0230	TrainAcc 0.9993	ValidAcc 0.9622	TestAcc 0.9626	BestValid 0.9655
	Epoch 4300:	Loss 0.0222	TrainAcc 0.9993	ValidAcc 0.9621	TestAcc 0.9622	BestValid 0.9655
	Epoch 4350:	Loss 0.0221	TrainAcc 0.9993	ValidAcc 0.9620	TestAcc 0.9618	BestValid 0.9655
	Epoch 4400:	Loss 0.0210	TrainAcc 0.9995	ValidAcc 0.9619	TestAcc 0.9623	BestValid 0.9655
	Epoch 4450:	Loss 0.0205	TrainAcc 0.9994	ValidAcc 0.9626	TestAcc 0.9625	BestValid 0.9655
	Epoch 4500:	Loss 0.0193	TrainAcc 0.9994	ValidAcc 0.9617	TestAcc 0.9622	BestValid 0.9655
	Epoch 4550:	Loss 0.0191	TrainAcc 0.9995	ValidAcc 0.9620	TestAcc 0.9617	BestValid 0.9655
	Epoch 4600:	Loss 0.0196	TrainAcc 0.9995	ValidAcc 0.9617	TestAcc 0.9618	BestValid 0.9655
	Epoch 4650:	Loss 0.0191	TrainAcc 0.9993	ValidAcc 0.9618	TestAcc 0.9617	BestValid 0.9655
	Epoch 4700:	Loss 0.0190	TrainAcc 0.9996	ValidAcc 0.9616	TestAcc 0.9622	BestValid 0.9655
	Epoch 4750:	Loss 0.0182	TrainAcc 0.9995	ValidAcc 0.9620	TestAcc 0.9622	BestValid 0.9655
	Epoch 4800:	Loss 0.0181	TrainAcc 0.9995	ValidAcc 0.9614	TestAcc 0.9620	BestValid 0.9655
	Epoch 4850:	Loss 0.0163	TrainAcc 0.9996	ValidAcc 0.9615	TestAcc 0.9619	BestValid 0.9655
	Epoch 4900:	Loss 0.0167	TrainAcc 0.9996	ValidAcc 0.9618	TestAcc 0.9620	BestValid 0.9655
	Epoch 4950:	Loss 0.0168	TrainAcc 0.9996	ValidAcc 0.9614	TestAcc 0.9623	BestValid 0.9655
	Epoch 5000:	Loss 0.0160	TrainAcc 0.9996	ValidAcc 0.9614	TestAcc 0.9615	BestValid 0.9655
****** Epoch Time (Excluding Evaluation Cost): 0.511 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 93.780 ms (Max: 100.603, Min: 76.587, Sum: 750.239)
Cluster-Wide Average, Compute: 341.425 ms (Max: 388.963, Min: 324.112, Sum: 2731.398)
Cluster-Wide Average, Communication-Layer: 25.898 ms (Max: 31.132, Min: 17.171, Sum: 207.187)
Cluster-Wide Average, Bubble-Imbalance: 44.995 ms (Max: 65.122, Min: 9.751, Sum: 359.961)
Cluster-Wide Average, Communication-Graph: 0.529 ms (Max: 0.592, Min: 0.472, Sum: 4.236)
Cluster-Wide Average, Optimization: 0.267 ms (Max: 0.293, Min: 0.254, Sum: 2.133)
Cluster-Wide Average, Others: 4.097 ms (Max: 17.467, Min: 2.152, Sum: 32.773)
****** Breakdown Sum: 510.991 ms ******
Cluster-Wide Average, GPU Memory Consumption: 7.303 GB (Max: 8.260, Min: 7.065, Sum: 58.423)
Cluster-Wide Average, Graph-Level Communication Throughput: -nan Gbps (Max: -nan, Min: -nan, Sum: -nan)
Cluster-Wide Average, Layer-Level Communication Throughput: 49.763 Gbps (Max: 56.121, Min: 42.144, Sum: 398.104)
Layer-level communication (cluster-wide, per-epoch): 1.215 GB
Graph-level communication (cluster-wide, per-epoch): 0.000 GB
Weight-sync communication (cluster-wide, per-epoch): 0.000 GB
Total communication (cluster-wide, per-epoch): 1.215 GB
****** Accuracy Results ******
Highest valid_acc: 0.9655
Target test_acc: 0.9643
Epoch to reach the target acc: 1199
[MPI Rank 0] Success 
[MPI Rank 1] Success 
[MPI Rank 4] Success 
[MPI Rank 2] Success 
[MPI Rank 5] Success 
[MPI Rank 3] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
