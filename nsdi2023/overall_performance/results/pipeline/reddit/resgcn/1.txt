Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
DONE MPI INIT
Initialized node 5 on machine gnerv8
Initialized node 7 on machine gnerv8
DONE MPI INITDONE MPI INIT

Initialized node 6 on machine gnerv8
Initialized node 4 on machine gnerv8
DONE MPI INIT
Initialized node 0 on machine gnerv4
DONE MPI INIT
Initialized node 1 on machine gnerv4
DONE MPI INIT
Initialized node 2 on machine gnerv4
DONE MPI INIT
Initialized node 3 on machine gnerv4
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 2.630 seconds.
Building the CSC structure...
        It takes 2.630 seconds.
Building the CSC structure...
        It takes 2.629 seconds.
Building the CSC structure...
        It takes 2.699 seconds.
Building the CSC structure...
        It takes 2.900 seconds.
Building the CSC structure...
        It takes 2.897 seconds.
Building the CSC structure...
        It takes 2.900 seconds.
Building the CSC structure...
        It takes 2.897 seconds.
Building the CSC structure...
        It takes 2.589 seconds.
        It takes 2.589 seconds.
        It takes 2.589 seconds.
        It takes 2.542 seconds.
        It takes 2.777 seconds.
        It takes 2.780 seconds.
        It takes 2.786 seconds.
        It takes 2.796 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.451 seconds.
        It takes 0.946 seconds.
        It takes 0.975 seconds.
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
        It takes 0.272 seconds.
Building the Label Vector...
        It takes 0.062 seconds.
        It takes 0.080 seconds.
        It takes 0.080 seconds.
        It takes 0.080 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/pipeline_parallel_datasets/reddit/32_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 5000
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 1
Number of classes: 41
Number of feature dimensions: 602
Number of vertices: 232965
Number of GPUs: 8
        It takes 0.750 seconds.
        It takes 0.733 seconds.
        It takes 0.850 seconds.
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
        It takes 0.064 seconds.
        It takes 0.064 seconds.
        It takes 0.064 seconds.
Building the Feature Vector...
        It takes 0.251 seconds.
Building the Label Vector...
        It takes 0.031 seconds.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
train nodes 153431, valid nodes 23831, test nodes 55703
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 8381) 1-[8381, 15124) 2-[15124, 22398) 3-[22398, 30320) 4-[30320, 35655) 5-[35655, 45721) 6-[45721, 55131) 7-[55131, 63248) 8-[63248, 69343) ... 31-[226638, 232965)
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 55.973 Gbps (per GPU), 447.787 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 55.693 Gbps (per GPU), 445.544 Gbps (aggregated)
The layer-level communication performance: 55.688 Gbps (per GPU), 445.505 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 55.464 Gbps (per GPU), 443.711 Gbps (aggregated)
The layer-level communication performance: 55.438 Gbps (per GPU), 443.505 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 55.267 Gbps (per GPU), 442.137 Gbps (aggregated)
The layer-level communication performance: 55.229 Gbps (per GPU), 441.834 Gbps (aggregated)
The layer-level communication performance: 55.199 Gbps (per GPU), 441.591 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.419 Gbps (per GPU), 1267.353 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.398 Gbps (per GPU), 1267.185 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.422 Gbps (per GPU), 1267.377 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.398 Gbps (per GPU), 1267.185 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.416 Gbps (per GPU), 1267.331 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.401 Gbps (per GPU), 1267.209 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.416 Gbps (per GPU), 1267.330 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.398 Gbps (per GPU), 1267.185 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 82.749 Gbps (per GPU), 661.993 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 82.745 Gbps (per GPU), 661.962 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 82.749 Gbps (per GPU), 661.989 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 82.746 Gbps (per GPU), 661.971 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 82.750 Gbps (per GPU), 661.997 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 82.745 Gbps (per GPU), 661.962 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 82.749 Gbps (per GPU), 661.993 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 82.746 Gbps (per GPU), 661.971 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 39.973 Gbps (per GPU), 319.784 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.973 Gbps (per GPU), 319.783 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.973 Gbps (per GPU), 319.780 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.973 Gbps (per GPU), 319.782 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.970 Gbps (per GPU), 319.763 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.971 Gbps (per GPU), 319.768 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.971 Gbps (per GPU), 319.765 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.971 Gbps (per GPU), 319.765 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  2.45ms  2.91ms  3.86ms  1.58  8.38K  3.53M
 chk_1  2.82ms  3.17ms  3.88ms  1.38  6.74K  3.60M
 chk_2  2.73ms  3.04ms  3.80ms  1.39  7.27K  3.53M
 chk_3  2.74ms  3.10ms  3.88ms  1.41  7.92K  3.61M
 chk_4  2.66ms  2.95ms  3.57ms  1.34  5.33K  3.68M
 chk_5  2.65ms  3.07ms  3.99ms  1.51 10.07K  3.45M
 chk_6  2.83ms  3.22ms  4.10ms  1.45  9.41K  3.48M
 chk_7  2.67ms  3.02ms  3.82ms  1.43  8.12K  3.60M
 chk_8  2.76ms  3.07ms  3.77ms  1.36  6.09K  3.64M
 chk_9  2.57ms  3.01ms  3.98ms  1.55 11.10K  3.38M
chk_10  2.79ms  3.10ms  3.74ms  1.34  5.67K  3.63M
chk_11  2.68ms  3.07ms  3.86ms  1.44  8.16K  3.54M
chk_12  2.89ms  3.23ms  3.96ms  1.37  7.24K  3.55M
chk_13  2.71ms  3.00ms  3.64ms  1.34  5.41K  3.68M
chk_14  2.93ms  3.30ms  4.05ms  1.38  7.14K  3.53M
chk_15  2.80ms  3.21ms  4.07ms  1.46  9.25K  3.49M
chk_16  2.61ms  2.90ms  3.49ms  1.34  4.78K  3.77M
chk_17  2.74ms  3.09ms  3.79ms  1.38  6.85K  3.60M
chk_18  2.56ms  2.92ms  3.67ms  1.43  7.47K  3.57M
chk_19  2.63ms  2.92ms  3.52ms  1.34  4.88K  3.75M
chk_20  2.64ms  2.97ms  3.68ms  1.39  7.00K  3.63M
chk_21  2.62ms  2.91ms  3.57ms  1.36  5.41K  3.68M
chk_22  2.81ms  3.28ms  4.24ms  1.51 11.07K  3.39M
chk_23  2.70ms  3.06ms  3.81ms  1.41  7.23K  3.64M
chk_24  2.78ms  3.18ms  4.10ms  1.48 10.13K  3.43M
chk_25  2.60ms  2.90ms  3.58ms  1.38  6.40K  3.57M
chk_26  2.80ms  3.10ms  3.75ms  1.34  5.78K  3.55M
chk_27  2.67ms  3.08ms  3.92ms  1.47  9.34K  3.48M
chk_28  3.03ms  3.36ms  3.97ms  1.31  6.37K  3.57M
chk_29  2.83ms  3.04ms  3.67ms  1.30  5.16K  3.78M
chk_30  2.68ms  2.98ms  3.60ms  1.34  5.44K  3.67M
chk_31  2.83ms  3.15ms  3.81ms  1.35  6.33K  3.63M
   Avg  2.73  3.07  3.82
   Max  3.03  3.36  4.24
   Min  2.45  2.90  3.49
 Ratio  1.24  1.16  1.22
   Var  0.01  0.02  0.04
Profiling takes 3.561 s
*** Node 0, starting model training...
Num Stages: 8 / 8
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_ADD
*** Node 0 owns the model-level partition [0, 27)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 1, starting model training...
Num Stages: 8 / 8
Node 1, Pipeline Input Tensor: OPERATOR_ADD
Node 1, Pipeline Output Tensor: OPERATOR_ADD
*** Node 1 owns the model-level partition [27, 55)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 4, starting model training...
Num Stages: 8 / 8
Node 4, Pipeline Input Tensor: OPERATOR_ADD
Node 4, Pipeline Output Tensor: OPERATOR_ADD
*** Node 4 owns the model-level partition [111, 139)
*** Node 4, constructing the helper classes...
*** Node 2, starting model training...
Num Stages: 8 / 8
Node 2, Pipeline Input Tensor: OPERATOR_ADD
Node 2, Pipeline Output Tensor: OPERATOR_ADD
*** Node 2 owns the model-level partition [55, 83)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 5, starting model training...
Num Stages: 8 / 8
Node 5, Pipeline Input Tensor: OPERATOR_ADD
Node 5, Pipeline Output Tensor: OPERATOR_ADD
*** Node 5 owns the model-level partition [139, 167)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 3, starting model training...
Num Stages: 8 / 8
Node 3, Pipeline Input Tensor: OPERATOR_ADD
Node 3, Pipeline Output Tensor: OPERATOR_ADD
*** Node 3 owns the model-level partition [83, 111)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 6, starting model training...
Num Stages: 8 / 8
Node 6, Pipeline Input Tensor: OPERATOR_ADD
Node 6, Pipeline Output Tensor: OPERATOR_ADD
*** Node 6 owns the model-level partition [167, 195)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 7, starting model training...
Num Stages: 8 / 8
Node 7, Pipeline Input Tensor: OPERATOR_ADD
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [195, 229)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 0, Num Local Vertices: 232965
Node 4, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 5, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 27)...
+++++++++ Node 5 initializing the weights for op[139, 167)...
+++++++++ Node 1 initializing the weights for op[27, 55)...
+++++++++ Node 4 initializing the weights for op[111, 139)...
+++++++++ Node 2 initializing the weights for op[55, 83)...
+++++++++ Node 7 initializing the weights for op[195, 229)...
+++++++++ Node 3 initializing the weights for op[83, 111)...
+++++++++ Node 6 initializing the weights for op[167, 195)...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 0
Node 4, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
Node 0, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ************ Start Scheduling the Tasks in a Pipelined Fashion ******

*** Node 0, starting task scheduling...



*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 4.2059	TrainAcc 0.1331	ValidAcc 0.1433	TestAcc 0.1383	BestValid 0.1433
	Epoch 50:	Loss 0.6062	TrainAcc 0.9122	ValidAcc 0.9238	TestAcc 0.9216	BestValid 0.9238
	Epoch 100:	Loss 0.4233	TrainAcc 0.9315	ValidAcc 0.9388	TestAcc 0.9376	BestValid 0.9388
	Epoch 150:	Loss 0.3745	TrainAcc 0.9388	ValidAcc 0.9445	TestAcc 0.9433	BestValid 0.9445
	Epoch 200:	Loss 0.3464	TrainAcc 0.9416	ValidAcc 0.9460	TestAcc 0.9454	BestValid 0.9460
	Epoch 250:	Loss 0.3287	TrainAcc 0.9433	ValidAcc 0.9468	TestAcc 0.9465	BestValid 0.9468
	Epoch 300:	Loss 0.3167	TrainAcc 0.9445	ValidAcc 0.9475	TestAcc 0.9472	BestValid 0.9475
	Epoch 350:	Loss 0.3087	TrainAcc 0.9461	ValidAcc 0.9489	TestAcc 0.9484	BestValid 0.9489
	Epoch 400:	Loss 0.3011	TrainAcc 0.9469	ValidAcc 0.9488	TestAcc 0.9488	BestValid 0.9489
	Epoch 450:	Loss 0.2958	TrainAcc 0.9479	ValidAcc 0.9498	TestAcc 0.9493	BestValid 0.9498
	Epoch 500:	Loss 0.2897	TrainAcc 0.9485	ValidAcc 0.9498	TestAcc 0.9497	BestValid 0.9498
	Epoch 550:	Loss 0.2835	TrainAcc 0.9493	ValidAcc 0.9506	TestAcc 0.9503	BestValid 0.9506
	Epoch 600:	Loss 0.2783	TrainAcc 0.9503	ValidAcc 0.9505	TestAcc 0.9505	BestValid 0.9506
	Epoch 650:	Loss 0.2760	TrainAcc 0.9509	ValidAcc 0.9508	TestAcc 0.9508	BestValid 0.9508
	Epoch 700:	Loss 0.2716	TrainAcc 0.9514	ValidAcc 0.9509	TestAcc 0.9509	BestValid 0.9509
	Epoch 750:	Loss 0.2666	TrainAcc 0.9518	ValidAcc 0.9510	TestAcc 0.9511	BestValid 0.9510
	Epoch 800:	Loss 0.2647	TrainAcc 0.9527	ValidAcc 0.9511	TestAcc 0.9512	BestValid 0.9511
	Epoch 850:	Loss 0.2598	TrainAcc 0.9530	ValidAcc 0.9513	TestAcc 0.9514	BestValid 0.9513
	Epoch 900:	Loss 0.2572	TrainAcc 0.9532	ValidAcc 0.9509	TestAcc 0.9516	BestValid 0.9513
	Epoch 950:	Loss 0.2561	TrainAcc 0.9538	ValidAcc 0.9518	TestAcc 0.9523	BestValid 0.9518
	Epoch 1000:	Loss 0.2527	TrainAcc 0.9542	ValidAcc 0.9520	TestAcc 0.9520	BestValid 0.9520
	Epoch 1050:	Loss 0.2496	TrainAcc 0.9543	ValidAcc 0.9521	TestAcc 0.9522	BestValid 0.9521
	Epoch 1100:	Loss 0.2475	TrainAcc 0.9550	ValidAcc 0.9522	TestAcc 0.9526	BestValid 0.9522
	Epoch 1150:	Loss 0.2443	TrainAcc 0.9551	ValidAcc 0.9521	TestAcc 0.9525	BestValid 0.9522
	Epoch 1200:	Loss 0.2425	TrainAcc 0.9560	ValidAcc 0.9521	TestAcc 0.9522	BestValid 0.9522
	Epoch 1250:	Loss 0.2390	TrainAcc 0.9563	ValidAcc 0.9525	TestAcc 0.9527	BestValid 0.9525
	Epoch 1300:	Loss 0.2381	TrainAcc 0.9564	ValidAcc 0.9527	TestAcc 0.9529	BestValid 0.9527
	Epoch 1350:	Loss 0.2361	TrainAcc 0.9570	ValidAcc 0.9527	TestAcc 0.9528	BestValid 0.9527
	Epoch 1400:	Loss 0.2351	TrainAcc 0.9573	ValidAcc 0.9527	TestAcc 0.9530	BestValid 0.9527
	Epoch 1450:	Loss 0.2321	TrainAcc 0.9574	ValidAcc 0.9523	TestAcc 0.9527	BestValid 0.9527
	Epoch 1500:	Loss 0.2288	TrainAcc 0.9581	ValidAcc 0.9530	TestAcc 0.9527	BestValid 0.9530
	Epoch 1550:	Loss 0.2282	TrainAcc 0.9574	ValidAcc 0.9518	TestAcc 0.9523	BestValid 0.9530
	Epoch 1600:	Loss 0.2253	TrainAcc 0.9584	ValidAcc 0.9525	TestAcc 0.9527	BestValid 0.9530
	Epoch 1650:	Loss 0.2240	TrainAcc 0.9586	ValidAcc 0.9529	TestAcc 0.9535	BestValid 0.9530
	Epoch 1700:	Loss 0.2221	TrainAcc 0.9585	ValidAcc 0.9533	TestAcc 0.9528	BestValid 0.9533
	Epoch 1750:	Loss 0.2210	TrainAcc 0.9589	ValidAcc 0.9520	TestAcc 0.9527	BestValid 0.9533
	Epoch 1800:	Loss 0.2199	TrainAcc 0.9597	ValidAcc 0.9534	TestAcc 0.9529	BestValid 0.9534
	Epoch 1850:	Loss 0.2161	TrainAcc 0.9597	ValidAcc 0.9535	TestAcc 0.9530	BestValid 0.9535
	Epoch 1900:	Loss 0.2158	TrainAcc 0.9595	ValidAcc 0.9539	TestAcc 0.9530	BestValid 0.9539
	Epoch 1950:	Loss 0.2139	TrainAcc 0.9600	ValidAcc 0.9534	TestAcc 0.9536	BestValid 0.9539
	Epoch 2000:	Loss 0.2138	TrainAcc 0.9605	ValidAcc 0.9536	TestAcc 0.9529	BestValid 0.9539
	Epoch 2050:	Loss 0.2116	TrainAcc 0.9607	ValidAcc 0.9538	TestAcc 0.9533	BestValid 0.9539
	Epoch 2100:	Loss 0.2102	TrainAcc 0.9613	ValidAcc 0.9534	TestAcc 0.9532	BestValid 0.9539
	Epoch 2150:	Loss 0.2077	TrainAcc 0.9614	ValidAcc 0.9538	TestAcc 0.9535	BestValid 0.9539
	Epoch 2200:	Loss 0.2058	TrainAcc 0.9611	ValidAcc 0.9528	TestAcc 0.9532	BestValid 0.9539
	Epoch 2250:	Loss 0.2039	TrainAcc 0.9619	ValidAcc 0.9536	TestAcc 0.9537	BestValid 0.9539
	Epoch 2300:	Loss 0.2027	TrainAcc 0.9613	ValidAcc 0.9532	TestAcc 0.9527	BestValid 0.9539
	Epoch 2350:	Loss 0.2034	TrainAcc 0.9625	ValidAcc 0.9538	TestAcc 0.9536	BestValid 0.9539
	Epoch 2400:	Loss 0.2016	TrainAcc 0.9619	ValidAcc 0.9526	TestAcc 0.9528	BestValid 0.9539
	Epoch 2450:	Loss 0.2000	TrainAcc 0.9628	ValidAcc 0.9536	TestAcc 0.9536	BestValid 0.9539
	Epoch 2500:	Loss 0.1989	TrainAcc 0.9632	ValidAcc 0.9541	TestAcc 0.9536	BestValid 0.9541
	Epoch 2550:	Loss 0.1970	TrainAcc 0.9621	ValidAcc 0.9529	TestAcc 0.9530	BestValid 0.9541
	Epoch 2600:	Loss 0.1962	TrainAcc 0.9635	ValidAcc 0.9534	TestAcc 0.9534	BestValid 0.9541
	Epoch 2650:	Loss 0.1961	TrainAcc 0.9633	ValidAcc 0.9533	TestAcc 0.9533	BestValid 0.9541
	Epoch 2700:	Loss 0.1922	TrainAcc 0.9626	ValidAcc 0.9525	TestAcc 0.9520	BestValid 0.9541
	Epoch 2750:	Loss 0.1939	TrainAcc 0.9637	ValidAcc 0.9539	TestAcc 0.9532	BestValid 0.9541
	Epoch 2800:	Loss 0.1923	TrainAcc 0.9645	ValidAcc 0.9541	TestAcc 0.9540	BestValid 0.9541
	Epoch 2850:	Loss 0.1883	TrainAcc 0.9647	ValidAcc 0.9534	TestAcc 0.9540	BestValid 0.9541
	Epoch 2900:	Loss 0.1901	TrainAcc 0.9617	ValidAcc 0.9494	TestAcc 0.9500	BestValid 0.9541
	Epoch 2950:	Loss 0.1881	TrainAcc 0.9633	ValidAcc 0.9523	TestAcc 0.9515	BestValid 0.9541
	Epoch 3000:	Loss 0.1864	TrainAcc 0.9652	ValidAcc 0.9526	TestAcc 0.9529	BestValid 0.9541
	Epoch 3050:	Loss 0.1850	TrainAcc 0.9653	ValidAcc 0.9539	TestAcc 0.9541	BestValid 0.9541
	Epoch 3100:	Loss 0.1839	TrainAcc 0.9654	ValidAcc 0.9543	TestAcc 0.9537	BestValid 0.9543
	Epoch 3150:	Loss 0.1832	TrainAcc 0.9650	ValidAcc 0.9525	TestAcc 0.9530	BestValid 0.9543
	Epoch 3200:	Loss 0.1825	TrainAcc 0.9646	ValidAcc 0.9514	TestAcc 0.9519	BestValid 0.9543
	Epoch 3250:	Loss 0.1800	TrainAcc 0.9656	ValidAcc 0.9528	TestAcc 0.9528	BestValid 0.9543
	Epoch 3300:	Loss 0.1792	TrainAcc 0.9660	ValidAcc 0.9532	TestAcc 0.9531	BestValid 0.9543
	Epoch 3350:	Loss 0.1767	TrainAcc 0.9663	ValidAcc 0.9526	TestAcc 0.9531	BestValid 0.9543
	Epoch 3400:	Loss 0.1778	TrainAcc 0.9664	ValidAcc 0.9522	TestAcc 0.9525	BestValid 0.9543
	Epoch 3450:	Loss 0.1744	TrainAcc 0.9667	ValidAcc 0.9528	TestAcc 0.9525	BestValid 0.9543
	Epoch 3500:	Loss 0.1768	TrainAcc 0.9669	ValidAcc 0.9527	TestAcc 0.9519	BestValid 0.9543
	Epoch 3550:	Loss 0.1759	TrainAcc 0.9668	ValidAcc 0.9527	TestAcc 0.9533	BestValid 0.9543
	Epoch 3600:	Loss 0.1751	TrainAcc 0.9678	ValidAcc 0.9528	TestAcc 0.9529	BestValid 0.9543
	Epoch 3650:	Loss 0.1732	TrainAcc 0.9668	ValidAcc 0.9522	TestAcc 0.9515	BestValid 0.9543
	Epoch 3700:	Loss 0.1723	TrainAcc 0.9667	ValidAcc 0.9530	TestAcc 0.9522	BestValid 0.9543
	Epoch 3750:	Loss 0.1717	TrainAcc 0.9662	ValidAcc 0.9517	TestAcc 0.9512	BestValid 0.9543
	Epoch 3800:	Loss 0.1709	TrainAcc 0.9675	ValidAcc 0.9525	TestAcc 0.9529	BestValid 0.9543
	Epoch 3850:	Loss 0.1693	TrainAcc 0.9668	ValidAcc 0.9525	TestAcc 0.9515	BestValid 0.9543
	Epoch 3900:	Loss 0.1687	TrainAcc 0.9684	ValidAcc 0.9535	TestAcc 0.9529	BestValid 0.9543
	Epoch 3950:	Loss 0.1676	TrainAcc 0.9689	ValidAcc 0.9535	TestAcc 0.9530	BestValid 0.9543
	Epoch 4000:	Loss 0.1669	TrainAcc 0.9662	ValidAcc 0.9517	TestAcc 0.9513	BestValid 0.9543
	Epoch 4050:	Loss 0.1673	TrainAcc 0.9658	ValidAcc 0.9509	TestAcc 0.9502	BestValid 0.9543
	Epoch 4100:	Loss 0.1668	TrainAcc 0.9685	ValidAcc 0.9536	TestAcc 0.9534	BestValid 0.9543
	Epoch 4150:	Loss 0.1641	TrainAcc 0.9648	ValidAcc 0.9484	TestAcc 0.9479	BestValid 0.9543
	Epoch 4200:	Loss 0.1649	TrainAcc 0.9688	ValidAcc 0.9526	TestAcc 0.9531	BestValid 0.9543
	Epoch 4250:	Loss 0.1620	TrainAcc 0.9676	ValidAcc 0.9517	TestAcc 0.9515	BestValid 0.9543
	Epoch 4300:	Loss 0.1644	TrainAcc 0.9681	ValidAcc 0.9510	TestAcc 0.9515	BestValid 0.9543
	Epoch 4350:	Loss 0.1633	TrainAcc 0.9690	ValidAcc 0.9529	TestAcc 0.9525	BestValid 0.9543
	Epoch 4400:	Loss 0.1617	TrainAcc 0.9634	ValidAcc 0.9478	TestAcc 0.9484	BestValid 0.9543
	Epoch 4450:	Loss 0.1608	TrainAcc 0.9688	ValidAcc 0.9514	TestAcc 0.9509	BestValid 0.9543
	Epoch 4500:	Loss 0.1604	TrainAcc 0.9700	ValidAcc 0.9527	TestAcc 0.9525	BestValid 0.9543
	Epoch 4550:	Loss 0.1574	TrainAcc 0.9686	ValidAcc 0.9511	TestAcc 0.9511	BestValid 0.9543
	Epoch 4600:	Loss 0.1579	TrainAcc 0.9702	ValidAcc 0.9517	TestAcc 0.9519	BestValid 0.9543
	Epoch 4650:	Loss 0.1610	TrainAcc 0.9675	ValidAcc 0.9504	TestAcc 0.9495	BestValid 0.9543
	Epoch 4700:	Loss 0.1572	TrainAcc 0.9701	ValidAcc 0.9525	TestAcc 0.9529	BestValid 0.9543
	Epoch 4750:	Loss 0.1562	TrainAcc 0.9698	ValidAcc 0.9526	TestAcc 0.9517	BestValid 0.9543
	Epoch 4800:	Loss 0.1559	TrainAcc 0.9700	ValidAcc 0.9513	TestAcc 0.9510	BestValid 0.9543
	Epoch 4850:	Loss 0.1541	TrainAcc 0.9700	ValidAcc 0.9509	TestAcc 0.9506	BestValid 0.9543
	Epoch 4900:	Loss 0.1560	TrainAcc 0.9700	ValidAcc 0.9512	TestAcc 0.9515	BestValid 0.9543
	Epoch 4950:	Loss 0.1549	TrainAcc 0.9698	ValidAcc 0.9515	TestAcc 0.9524	BestValid 0.9543
	Epoch 5000:	Loss 0.1524	TrainAcc 0.9715	ValidAcc 0.9528	TestAcc 0.9525	BestValid 0.9543
****** Epoch Time (Excluding Evaluation Cost): 0.460 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 85.994 ms (Max: 93.008, Min: 67.786, Sum: 687.953)
Cluster-Wide Average, Compute: 303.075 ms (Max: 351.294, Min: 291.740, Sum: 2424.603)
Cluster-Wide Average, Communication-Layer: 25.824 ms (Max: 31.090, Min: 17.214, Sum: 206.594)
Cluster-Wide Average, Bubble-Imbalance: 40.657 ms (Max: 54.819, Min: 5.195, Sum: 325.253)
Cluster-Wide Average, Communication-Graph: 0.578 ms (Max: 0.716, Min: 0.492, Sum: 4.623)
Cluster-Wide Average, Optimization: 0.101 ms (Max: 0.124, Min: 0.092, Sum: 0.808)
Cluster-Wide Average, Others: 3.770 ms (Max: 17.528, Min: 1.795, Sum: 30.158)
****** Breakdown Sum: 459.999 ms ******
Cluster-Wide Average, GPU Memory Consumption: 6.500 GB (Max: 7.540, Min: 6.264, Sum: 52.003)
Cluster-Wide Average, Graph-Level Communication Throughput: -nan Gbps (Max: -nan, Min: -nan, Sum: -nan)
Cluster-Wide Average, Layer-Level Communication Throughput: 49.905 Gbps (Max: 56.224, Min: 42.517, Sum: 399.242)
Layer-level communication (cluster-wide, per-epoch): 1.215 GB
Graph-level communication (cluster-wide, per-epoch): 0.000 GB
Weight-sync communication (cluster-wide, per-epoch): 0.000 GB
Total communication (cluster-wide, per-epoch): 1.215 GB
****** Accuracy Results ******
Highest valid_acc: 0.9543
Target test_acc: 0.9537
Epoch to reach the target acc: 3099
[MPI Rank 0] Success 
[MPI Rank 4] Success 
[MPI Rank 1] Success 
[MPI Rank 5] Success 
[MPI Rank 2] Success 
[MPI Rank 6] Success 
[MPI Rank 3] Success 
[MPI Rank 7] Success 
