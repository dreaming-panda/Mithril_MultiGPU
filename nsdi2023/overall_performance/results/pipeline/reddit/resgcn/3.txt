Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INITDONE MPI INIT
Initialized node 3 on machine gnerv2
DONE MPI INIT
DONE MPI INIT
Initialized node 1 on machine gnerv2
Initialized node 0 on machine gnerv2

Initialized node 2 on machine gnerv2
DONE MPI INIT
DONE MPI INIT
Initialized node 6 on machine gnerv3
DONE MPI INIT
Initialized node 7 on machine gnerv3
DONE MPI INIT
Initialized node 4 on machine gnerv3
Initialized node 5 on machine gnerv3
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 1.832 seconds.
Building the CSC structure...
        It takes 2.372 seconds.
Building the CSC structure...
        It takes 2.430 seconds.
Building the CSC structure...
        It takes 2.434 seconds.
Building the CSC structure...
        It takes 2.567 seconds.
Building the CSC structure...
        It takes 2.673 seconds.
Building the CSC structure...
        It takes 2.691 seconds.
Building the CSC structure...
        It takes 2.702 seconds.
Building the CSC structure...
        It takes 1.794 seconds.
Building the Feature Vector...
        It takes 2.383 seconds.
        It takes 2.334 seconds.
        It takes 2.341 seconds.
        It takes 0.231 seconds.
Building the Label Vector...
        It takes 2.306 seconds.
        It takes 0.037 seconds.
        It takes 2.327 seconds.
        It takes 2.401 seconds.
        It takes 2.420 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
        It takes 0.302 seconds.
Building the Label Vector...
        It takes 0.290 seconds.
Building the Label Vector...
        It takes 0.321 seconds.
Building the Label Vector...
        It takes 0.031 seconds.
        It takes 0.040 seconds.
        It takes 0.044 seconds.
Building the Feature Vector...
232965, 114848857, 114848857
Number of vertices per chunk: 7281
Building the Feature Vector...
        It takes 0.283 seconds.
Building the Label Vector...
Building the Feature Vector...
        It takes 0.032 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/pipeline_parallel_datasets/reddit/32_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 5000
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 3
Number of classes: 41
Number of feature dimensions: 602
Number of vertices: 232965
Number of GPUs: 8
        It takes 0.233 seconds.
Building the Label Vector...
        It takes 0.033 seconds.
Building the Feature Vector...
        It takes 0.241 seconds.
Building the Label Vector...
        It takes 0.030 seconds.
        It takes 0.287 seconds.
Building the Label Vector...
        It takes 0.033 seconds.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
232965, 114848857, 114848857
Number of vertices per chunk: 7281
Number of vertices per chunk: 7281
train nodes 153431, valid nodes 23831, test nodes 55703
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 8381) 1-[8381, 15124) 2-[15124, 22398) 3-[22398, 30320) 4-[30320, 35655) 5-[35655, 45721) 6-[45721, 55131) 7-[55131, 63248) 8-[63248, 69343) ... 31-[226638, 232965)
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
GPU 0, layer [0, 4)
GPU 1, layer [4, 8)
GPU 2, layer [8, 12)
GPU 3, layer [12, 16)
GPU 4, layer [16, 20)
GPU 5, layer [20, 24)
GPU 6, layer [24, 28)
GPU 7, layer [28, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 58.192 Gbps (per GPU), 465.538 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 57.927 Gbps (per GPU), 463.415 Gbps (aggregated)
The layer-level communication performance: 57.928 Gbps (per GPU), 463.426 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 57.709 Gbps (per GPU), 461.668 Gbps (aggregated)
The layer-level communication performance: 57.681 Gbps (per GPU), 461.444 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 57.478 Gbps (per GPU), 459.827 Gbps (aggregated)
The layer-level communication performance: 57.427 Gbps (per GPU), 459.413 Gbps (aggregated)
The layer-level communication performance: 57.399 Gbps (per GPU), 459.190 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.800 Gbps (per GPU), 1270.400 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.761 Gbps (per GPU), 1270.087 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.788 Gbps (per GPU), 1270.304 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.803 Gbps (per GPU), 1270.422 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.791 Gbps (per GPU), 1270.328 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.767 Gbps (per GPU), 1270.138 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.779 Gbps (per GPU), 1270.231 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.794 Gbps (per GPU), 1270.352 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 100.104 Gbps (per GPU), 800.828 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.105 Gbps (per GPU), 800.841 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.106 Gbps (per GPU), 800.847 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.104 Gbps (per GPU), 800.834 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.105 Gbps (per GPU), 800.841 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.104 Gbps (per GPU), 800.834 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.105 Gbps (per GPU), 800.841 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.107 Gbps (per GPU), 800.860 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 34.283 Gbps (per GPU), 274.266 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.283 Gbps (per GPU), 274.262 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.283 Gbps (per GPU), 274.264 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.283 Gbps (per GPU), 274.264 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.282 Gbps (per GPU), 274.258 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.283 Gbps (per GPU), 274.266 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.282 Gbps (per GPU), 274.260 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.283 Gbps (per GPU), 274.267 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  2.69ms  3.22ms  4.27ms  1.59  8.38K  3.53M
 chk_1  3.00ms  3.39ms  4.22ms  1.41  6.74K  3.60M
 chk_2  2.85ms  3.29ms  4.13ms  1.45  7.27K  3.53M
 chk_3  2.89ms  3.36ms  4.25ms  1.47  7.92K  3.61M
 chk_4  2.76ms  3.11ms  3.82ms  1.38  5.33K  3.68M
 chk_5  2.88ms  3.42ms  4.48ms  1.55 10.07K  3.45M
 chk_6  3.03ms  3.56ms  4.56ms  1.50  9.41K  3.48M
 chk_7  2.82ms  3.29ms  4.18ms  1.48  8.12K  3.60M
 chk_8  2.90ms  3.28ms  4.04ms  1.39  6.09K  3.64M
 chk_9  2.80ms  3.40ms  4.52ms  1.62 11.10K  3.38M
chk_10  2.94ms  3.29ms  4.02ms  1.37  5.67K  3.63M
chk_11  2.86ms  3.33ms  4.23ms  1.48  8.16K  3.54M
chk_12  3.06ms  3.45ms  4.29ms  1.40  7.24K  3.55M
chk_13  2.84ms  3.17ms  3.88ms  1.37  5.41K  3.68M
chk_14  3.10ms  3.54ms  4.37ms  1.41  7.14K  3.53M
chk_15  3.01ms  3.55ms  4.51ms  1.50  9.25K  3.49M
chk_16  2.76ms  3.07ms  3.72ms  1.35  4.78K  3.77M
chk_17  2.93ms  3.33ms  4.13ms  1.41  6.85K  3.60M
chk_18  2.75ms  3.18ms  4.00ms  1.46  7.47K  3.57M
chk_19  2.76ms  3.09ms  3.75ms  1.36  4.88K  3.75M
chk_20  2.80ms  3.21ms  4.01ms  1.43  7.00K  3.63M
chk_21  2.75ms  3.11ms  3.81ms  1.38  5.41K  3.68M
chk_22  3.06ms  3.69ms  4.79ms  1.57 11.07K  3.39M
chk_23  2.89ms  3.32ms  4.14ms  1.43  7.23K  3.64M
chk_24  3.00ms  3.56ms  4.61ms  1.54 10.13K  3.43M
chk_25  2.76ms  3.14ms  3.90ms  1.41  6.40K  3.57M
chk_26  2.95ms  3.30ms  4.01ms  1.36  5.78K  3.55M
chk_27  2.94ms  3.41ms  4.37ms  1.49  9.34K  3.48M
chk_28  3.14ms  3.52ms  4.30ms  1.37  6.37K  3.57M
chk_29  2.92ms  3.24ms  3.92ms  1.34  5.16K  3.78M
chk_30  2.80ms  3.15ms  3.85ms  1.37  5.44K  3.67M
chk_31  2.97ms  3.36ms  4.13ms  1.39  6.33K  3.63M
   Avg  2.89  3.32  4.16
   Max  3.14  3.69  4.79
   Min  2.69  3.07  3.72
 Ratio  1.17  1.20  1.29
   Var  0.01  0.02  0.07
Profiling takes 3.832 s
*** Node 0, starting model training...
Num Stages: 8 / 8
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_ADD
*** Node 0 owns the model-level partition [0, 48)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 1, starting model training...
Num Stages: 8 / 8
Node 1, Pipeline Input Tensor: OPERATOR_ADD
Node 1, Pipeline Output Tensor: OPERATOR_ADD
*** Node 1 owns the model-level partition [48, 100)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 2, starting model training...
Num Stages: 8 / 8
Node 2, Pipeline Input Tensor: OPERATOR_ADD
Node 2, Pipeline Output Tensor: OPERATOR_ADD
*** Node 2 owns the model-level partition [100, 152)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 3, starting model training...
Num Stages: 8 / 8
Node 3, Pipeline Input Tensor: OPERATOR_ADD
Node 3, Pipeline Output Tensor: OPERATOR_ADD
*** Node 3 owns the model-level partition [152, 204)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 4, starting model training...
Num Stages: 8 / 8
Node 4, Pipeline Input Tensor: OPERATOR_ADD
Node 4, Pipeline Output Tensor: OPERATOR_ADD
*** Node 4 owns the model-level partition [204, 256)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 5, starting model training...
Num Stages: 8 / 8
Node 5, Pipeline Input Tensor: OPERATOR_ADD
Node 5, Pipeline Output Tensor: OPERATOR_ADD
*** Node 5 owns the model-level partition [256, 308)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 6, starting model training...
Num Stages: 8 / 8
Node 6, Pipeline Input Tensor: OPERATOR_ADD
Node 6, Pipeline Output Tensor: OPERATOR_ADD
*** Node 6 owns the model-level partition [308, 360)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 7, starting model training...
Num Stages: 8 / 8
Node 7, Pipeline Input Tensor: OPERATOR_ADD
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [360, 421)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 0, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 48)...
+++++++++ Node 5 initializing the weights for op[256, 308)...
+++++++++ Node 1 initializing the weights for op[48, 100)...
+++++++++ Node 6 initializing the weights for op[308, 360)...
+++++++++ Node 2 initializing the weights for op[100, 152)...
+++++++++ Node 7 initializing the weights for op[360, 421)...
+++++++++ Node 3 initializing the weights for op[152, 204)...
+++++++++ Node 4 initializing the weights for op[204, 256)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be received across the graph boundary.
The number of mirror vertices: 0
Node 0, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 2, starting task scheduling...
*** Node 0, starting task scheduling...
*** Node 1, starting task scheduling...
*** Node 3, starting task scheduling...



The learning rate specified by the user: 0.001000000
*** Node 4, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 4.1894	TrainAcc 0.1604	ValidAcc 0.1741	TestAcc 0.1711	BestValid 0.1741
	Epoch 50:	Loss 0.8979	TrainAcc 0.8534	ValidAcc 0.8656	TestAcc 0.8609	BestValid 0.8656
	Epoch 100:	Loss 0.4211	TrainAcc 0.9372	ValidAcc 0.9438	TestAcc 0.9420	BestValid 0.9438
	Epoch 150:	Loss 0.3252	TrainAcc 0.9488	ValidAcc 0.9517	TestAcc 0.9516	BestValid 0.9517
	Epoch 200:	Loss 0.2823	TrainAcc 0.9547	ValidAcc 0.9556	TestAcc 0.9558	BestValid 0.9556
	Epoch 250:	Loss 0.2527	TrainAcc 0.9580	ValidAcc 0.9581	TestAcc 0.9576	BestValid 0.9581
	Epoch 300:	Loss 0.2334	TrainAcc 0.9610	ValidAcc 0.9595	TestAcc 0.9592	BestValid 0.9595
	Epoch 350:	Loss 0.2201	TrainAcc 0.9631	ValidAcc 0.9612	TestAcc 0.9599	BestValid 0.9612
	Epoch 400:	Loss 0.2081	TrainAcc 0.9652	ValidAcc 0.9617	TestAcc 0.9609	BestValid 0.9617
	Epoch 450:	Loss 0.1975	TrainAcc 0.9671	ValidAcc 0.9626	TestAcc 0.9619	BestValid 0.9626
	Epoch 500:	Loss 0.1875	TrainAcc 0.9689	ValidAcc 0.9627	TestAcc 0.9624	BestValid 0.9627
	Epoch 550:	Loss 0.1811	TrainAcc 0.9700	ValidAcc 0.9634	TestAcc 0.9631	BestValid 0.9634
	Epoch 600:	Loss 0.1742	TrainAcc 0.9710	ValidAcc 0.9633	TestAcc 0.9631	BestValid 0.9634
	Epoch 650:	Loss 0.1671	TrainAcc 0.9725	ValidAcc 0.9645	TestAcc 0.9636	BestValid 0.9645
	Epoch 700:	Loss 0.1607	TrainAcc 0.9736	ValidAcc 0.9642	TestAcc 0.9634	BestValid 0.9645
	Epoch 750:	Loss 0.1558	TrainAcc 0.9744	ValidAcc 0.9644	TestAcc 0.9638	BestValid 0.9645
	Epoch 800:	Loss 0.1531	TrainAcc 0.9757	ValidAcc 0.9647	TestAcc 0.9638	BestValid 0.9647
	Epoch 850:	Loss 0.1472	TrainAcc 0.9768	ValidAcc 0.9650	TestAcc 0.9642	BestValid 0.9650
	Epoch 900:	Loss 0.1416	TrainAcc 0.9772	ValidAcc 0.9648	TestAcc 0.9640	BestValid 0.9650
	Epoch 950:	Loss 0.1379	TrainAcc 0.9786	ValidAcc 0.9656	TestAcc 0.9643	BestValid 0.9656
	Epoch 1000:	Loss 0.1328	TrainAcc 0.9795	ValidAcc 0.9652	TestAcc 0.9648	BestValid 0.9656
	Epoch 1050:	Loss 0.1296	TrainAcc 0.9800	ValidAcc 0.9649	TestAcc 0.9643	BestValid 0.9656
	Epoch 1100:	Loss 0.1250	TrainAcc 0.9809	ValidAcc 0.9649	TestAcc 0.9645	BestValid 0.9656
	Epoch 1150:	Loss 0.1218	TrainAcc 0.9813	ValidAcc 0.9651	TestAcc 0.9641	BestValid 0.9656
	Epoch 1200:	Loss 0.1196	TrainAcc 0.9823	ValidAcc 0.9654	TestAcc 0.9647	BestValid 0.9656
	Epoch 1250:	Loss 0.1143	TrainAcc 0.9830	ValidAcc 0.9656	TestAcc 0.9645	BestValid 0.9656
	Epoch 1300:	Loss 0.1112	TrainAcc 0.9841	ValidAcc 0.9659	TestAcc 0.9647	BestValid 0.9659
	Epoch 1350:	Loss 0.1088	TrainAcc 0.9844	ValidAcc 0.9660	TestAcc 0.9647	BestValid 0.9660
	Epoch 1400:	Loss 0.1057	TrainAcc 0.9851	ValidAcc 0.9659	TestAcc 0.9643	BestValid 0.9660
	Epoch 1450:	Loss 0.1032	TrainAcc 0.9858	ValidAcc 0.9655	TestAcc 0.9651	BestValid 0.9660
	Epoch 1500:	Loss 0.0997	TrainAcc 0.9867	ValidAcc 0.9659	TestAcc 0.9648	BestValid 0.9660
	Epoch 1550:	Loss 0.0951	TrainAcc 0.9862	ValidAcc 0.9648	TestAcc 0.9642	BestValid 0.9660
	Epoch 1600:	Loss 0.0941	TrainAcc 0.9875	ValidAcc 0.9654	TestAcc 0.9646	BestValid 0.9660
	Epoch 1650:	Loss 0.0909	TrainAcc 0.9885	ValidAcc 0.9651	TestAcc 0.9644	BestValid 0.9660
	Epoch 1700:	Loss 0.0867	TrainAcc 0.9884	ValidAcc 0.9649	TestAcc 0.9642	BestValid 0.9660
	Epoch 1750:	Loss 0.0876	TrainAcc 0.9874	ValidAcc 0.9651	TestAcc 0.9635	BestValid 0.9660
	Epoch 1800:	Loss 0.0838	TrainAcc 0.9896	ValidAcc 0.9655	TestAcc 0.9648	BestValid 0.9660
	Epoch 1850:	Loss 0.0805	TrainAcc 0.9904	ValidAcc 0.9650	TestAcc 0.9640	BestValid 0.9660
	Epoch 1900:	Loss 0.0785	TrainAcc 0.9910	ValidAcc 0.9652	TestAcc 0.9640	BestValid 0.9660
	Epoch 1950:	Loss 0.0775	TrainAcc 0.9915	ValidAcc 0.9648	TestAcc 0.9641	BestValid 0.9660
	Epoch 2000:	Loss 0.0737	TrainAcc 0.9914	ValidAcc 0.9653	TestAcc 0.9640	BestValid 0.9660
	Epoch 2050:	Loss 0.0721	TrainAcc 0.9918	ValidAcc 0.9640	TestAcc 0.9638	BestValid 0.9660
	Epoch 2100:	Loss 0.0700	TrainAcc 0.9925	ValidAcc 0.9650	TestAcc 0.9643	BestValid 0.9660
	Epoch 2150:	Loss 0.0690	TrainAcc 0.9932	ValidAcc 0.9645	TestAcc 0.9640	BestValid 0.9660
	Epoch 2200:	Loss 0.0664	TrainAcc 0.9930	ValidAcc 0.9644	TestAcc 0.9638	BestValid 0.9660
	Epoch 2250:	Loss 0.0651	TrainAcc 0.9935	ValidAcc 0.9642	TestAcc 0.9638	BestValid 0.9660
	Epoch 2300:	Loss 0.0631	TrainAcc 0.9937	ValidAcc 0.9648	TestAcc 0.9637	BestValid 0.9660
	Epoch 2350:	Loss 0.0617	TrainAcc 0.9939	ValidAcc 0.9647	TestAcc 0.9639	BestValid 0.9660
	Epoch 2400:	Loss 0.0599	TrainAcc 0.9942	ValidAcc 0.9647	TestAcc 0.9639	BestValid 0.9660
	Epoch 2450:	Loss 0.0601	TrainAcc 0.9945	ValidAcc 0.9648	TestAcc 0.9636	BestValid 0.9660
	Epoch 2500:	Loss 0.0563	TrainAcc 0.9948	ValidAcc 0.9640	TestAcc 0.9634	BestValid 0.9660
	Epoch 2550:	Loss 0.0550	TrainAcc 0.9955	ValidAcc 0.9648	TestAcc 0.9634	BestValid 0.9660
	Epoch 2600:	Loss 0.0537	TrainAcc 0.9957	ValidAcc 0.9648	TestAcc 0.9638	BestValid 0.9660
	Epoch 2650:	Loss 0.0525	TrainAcc 0.9960	ValidAcc 0.9640	TestAcc 0.9636	BestValid 0.9660
	Epoch 2700:	Loss 0.0492	TrainAcc 0.9960	ValidAcc 0.9645	TestAcc 0.9635	BestValid 0.9660
	Epoch 2750:	Loss 0.0491	TrainAcc 0.9962	ValidAcc 0.9646	TestAcc 0.9638	BestValid 0.9660
	Epoch 2800:	Loss 0.0470	TrainAcc 0.9964	ValidAcc 0.9646	TestAcc 0.9636	BestValid 0.9660
	Epoch 2850:	Loss 0.0450	TrainAcc 0.9968	ValidAcc 0.9632	TestAcc 0.9632	BestValid 0.9660
	Epoch 2900:	Loss 0.0451	TrainAcc 0.9965	ValidAcc 0.9634	TestAcc 0.9626	BestValid 0.9660
	Epoch 2950:	Loss 0.0437	TrainAcc 0.9968	ValidAcc 0.9637	TestAcc 0.9632	BestValid 0.9660
	Epoch 3000:	Loss 0.0434	TrainAcc 0.9970	ValidAcc 0.9631	TestAcc 0.9633	BestValid 0.9660
	Epoch 3050:	Loss 0.0407	TrainAcc 0.9972	ValidAcc 0.9637	TestAcc 0.9630	BestValid 0.9660
	Epoch 3100:	Loss 0.0406	TrainAcc 0.9975	ValidAcc 0.9634	TestAcc 0.9633	BestValid 0.9660
	Epoch 3150:	Loss 0.0384	TrainAcc 0.9976	ValidAcc 0.9633	TestAcc 0.9629	BestValid 0.9660
	Epoch 3200:	Loss 0.0377	TrainAcc 0.9976	ValidAcc 0.9640	TestAcc 0.9631	BestValid 0.9660
	Epoch 3250:	Loss 0.0368	TrainAcc 0.9978	ValidAcc 0.9641	TestAcc 0.9629	BestValid 0.9660
	Epoch 3300:	Loss 0.0362	TrainAcc 0.9979	ValidAcc 0.9635	TestAcc 0.9625	BestValid 0.9660
	Epoch 3350:	Loss 0.0341	TrainAcc 0.9978	ValidAcc 0.9635	TestAcc 0.9625	BestValid 0.9660
	Epoch 3400:	Loss 0.0339	TrainAcc 0.9982	ValidAcc 0.9634	TestAcc 0.9627	BestValid 0.9660
	Epoch 3450:	Loss 0.0328	TrainAcc 0.9983	ValidAcc 0.9636	TestAcc 0.9628	BestValid 0.9660
	Epoch 3500:	Loss 0.0330	TrainAcc 0.9984	ValidAcc 0.9637	TestAcc 0.9626	BestValid 0.9660
	Epoch 3550:	Loss 0.0312	TrainAcc 0.9985	ValidAcc 0.9635	TestAcc 0.9623	BestValid 0.9660
	Epoch 3600:	Loss 0.0294	TrainAcc 0.9981	ValidAcc 0.9629	TestAcc 0.9618	BestValid 0.9660
	Epoch 3650:	Loss 0.0298	TrainAcc 0.9985	ValidAcc 0.9633	TestAcc 0.9624	BestValid 0.9660
	Epoch 3700:	Loss 0.0286	TrainAcc 0.9985	ValidAcc 0.9631	TestAcc 0.9627	BestValid 0.9660
	Epoch 3750:	Loss 0.0289	TrainAcc 0.9987	ValidAcc 0.9635	TestAcc 0.9625	BestValid 0.9660
	Epoch 3800:	Loss 0.0279	TrainAcc 0.9988	ValidAcc 0.9628	TestAcc 0.9622	BestValid 0.9660
	Epoch 3850:	Loss 0.0272	TrainAcc 0.9989	ValidAcc 0.9632	TestAcc 0.9618	BestValid 0.9660
	Epoch 3900:	Loss 0.0259	TrainAcc 0.9989	ValidAcc 0.9625	TestAcc 0.9619	BestValid 0.9660
	Epoch 3950:	Loss 0.0247	TrainAcc 0.9989	ValidAcc 0.9628	TestAcc 0.9623	BestValid 0.9660
	Epoch 4000:	Loss 0.0252	TrainAcc 0.9990	ValidAcc 0.9626	TestAcc 0.9626	BestValid 0.9660
	Epoch 4050:	Loss 0.0239	TrainAcc 0.9989	ValidAcc 0.9629	TestAcc 0.9620	BestValid 0.9660
	Epoch 4100:	Loss 0.0234	TrainAcc 0.9991	ValidAcc 0.9627	TestAcc 0.9619	BestValid 0.9660
	Epoch 4150:	Loss 0.0243	TrainAcc 0.9991	ValidAcc 0.9629	TestAcc 0.9620	BestValid 0.9660
	Epoch 4200:	Loss 0.0228	TrainAcc 0.9992	ValidAcc 0.9626	TestAcc 0.9624	BestValid 0.9660
	Epoch 4250:	Loss 0.0216	TrainAcc 0.9993	ValidAcc 0.9632	TestAcc 0.9621	BestValid 0.9660
	Epoch 4300:	Loss 0.0200	TrainAcc 0.9992	ValidAcc 0.9632	TestAcc 0.9620	BestValid 0.9660
	Epoch 4350:	Loss 0.0212	TrainAcc 0.9993	ValidAcc 0.9629	TestAcc 0.9622	BestValid 0.9660
	Epoch 4400:	Loss 0.0209	TrainAcc 0.9992	ValidAcc 0.9629	TestAcc 0.9617	BestValid 0.9660
	Epoch 4450:	Loss 0.0194	TrainAcc 0.9994	ValidAcc 0.9627	TestAcc 0.9623	BestValid 0.9660
	Epoch 4500:	Loss 0.0198	TrainAcc 0.9994	ValidAcc 0.9624	TestAcc 0.9622	BestValid 0.9660
	Epoch 4550:	Loss 0.0179	TrainAcc 0.9993	ValidAcc 0.9625	TestAcc 0.9619	BestValid 0.9660
	Epoch 4600:	Loss 0.0184	TrainAcc 0.9994	ValidAcc 0.9629	TestAcc 0.9619	BestValid 0.9660
	Epoch 4650:	Loss 0.0185	TrainAcc 0.9995	ValidAcc 0.9625	TestAcc 0.9618	BestValid 0.9660
	Epoch 4700:	Loss 0.0176	TrainAcc 0.9993	ValidAcc 0.9621	TestAcc 0.9611	BestValid 0.9660
	Epoch 4750:	Loss 0.0176	TrainAcc 0.9995	ValidAcc 0.9632	TestAcc 0.9616	BestValid 0.9660
	Epoch 4800:	Loss 0.0161	TrainAcc 0.9996	ValidAcc 0.9628	TestAcc 0.9617	BestValid 0.9660
	Epoch 4850:	Loss 0.0165	TrainAcc 0.9996	ValidAcc 0.9625	TestAcc 0.9617	BestValid 0.9660
	Epoch 4900:	Loss 0.0166	TrainAcc 0.9996	ValidAcc 0.9625	TestAcc 0.9613	BestValid 0.9660
	Epoch 4950:	Loss 0.0162	TrainAcc 0.9996	ValidAcc 0.9625	TestAcc 0.9618	BestValid 0.9660
	Epoch 5000:	Loss 0.0163	TrainAcc 0.9996	ValidAcc 0.9631	TestAcc 0.9621	BestValid 0.9660
****** Epoch Time (Excluding Evaluation Cost): 0.506 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 92.914 ms (Max: 99.277, Min: 76.484, Sum: 743.310)
Cluster-Wide Average, Compute: 339.409 ms (Max: 383.356, Min: 320.444, Sum: 2715.274)
Cluster-Wide Average, Communication-Layer: 25.887 ms (Max: 31.210, Min: 17.067, Sum: 207.095)
Cluster-Wide Average, Bubble-Imbalance: 43.402 ms (Max: 65.992, Min: 11.214, Sum: 347.214)
Cluster-Wide Average, Communication-Graph: 0.541 ms (Max: 0.714, Min: 0.474, Sum: 4.329)
Cluster-Wide Average, Optimization: 0.266 ms (Max: 0.291, Min: 0.251, Sum: 2.125)
Cluster-Wide Average, Others: 4.150 ms (Max: 17.499, Min: 2.200, Sum: 33.197)
****** Breakdown Sum: 506.568 ms ******
Cluster-Wide Average, GPU Memory Consumption: 7.303 GB (Max: 8.260, Min: 7.065, Sum: 58.423)
Cluster-Wide Average, Graph-Level Communication Throughput: -nan Gbps (Max: -nan, Min: -nan, Sum: -nan)
Cluster-Wide Average, Layer-Level Communication Throughput: 49.801 Gbps (Max: 55.677, Min: 42.961, Sum: 398.409)
Layer-level communication (cluster-wide, per-epoch): 1.215 GB
Graph-level communication (cluster-wide, per-epoch): 0.000 GB
Weight-sync communication (cluster-wide, per-epoch): 0.000 GB
Total communication (cluster-wide, per-epoch): 1.215 GB
****** Accuracy Results ******
Highest valid_acc: 0.9660
Target test_acc: 0.9647
Epoch to reach the target acc: 1349
[MPI Rank 0] Success 
[MPI Rank 1] Success 
[MPI Rank 4] Success 
[MPI Rank 2] Success 
[MPI Rank 5] Success 
[MPI Rank 3] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
