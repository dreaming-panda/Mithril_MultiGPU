Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
DONE MPI INIT
Initialized node 7 on machine gnerv8
Initialized node 6 on machine gnerv8
DONE MPI INIT
DONE MPI INIT
Initialized node 4 on machine gnerv8
Initialized node 5 on machine gnerv8
DONE MPI INIT
DONE MPI INIT
Initialized node 0 on machine gnerv7
DONE MPI INIT
Initialized node 1 on machine gnerv7
Initialized node 3 on machine gnerv7
DONE MPI INIT
Initialized node 2 on machine gnerv7
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 2.375 seconds.
Building the CSC structure...
        It takes 2.419 seconds.
Building the CSC structure...
        It takes 2.462 seconds.
Building the CSC structure...
        It takes 2.507 seconds.
Building the CSC structure...
        It takes 2.570 seconds.
Building the CSC structure...
        It takes 2.582 seconds.
Building the CSC structure...
        It takes 2.676 seconds.
Building the CSC structure...
        It takes 2.736 seconds.
Building the CSC structure...
        It takes 2.345 seconds.
        It takes 2.358 seconds.
        It takes 2.407 seconds.
        It takes 2.343 seconds.
        It takes 2.365 seconds.
        It takes 2.360 seconds.
        It takes 2.372 seconds.
        It takes 2.422 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.270 seconds.
Building the Label Vector...
        It takes 0.040 seconds.
        It takes 0.290 seconds.
Building the Label Vector...
Building the Feature Vector...
        It takes 0.032 seconds.
        It takes 0.343 seconds.
Building the Label Vector...
        It takes 0.349 seconds.
Building the Label Vector...
        It takes 0.046 seconds.
        It takes 0.037 seconds.
Building the Feature Vector...
        It takes 0.277 seconds.
Building the Label Vector...
        It takes 0.032 seconds.
        It takes 0.269 seconds.
Building the Label Vector...
        It takes 0.031 seconds.
Building the Feature Vector...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
        It takes 0.292 seconds.
Building the Label Vector...
Building the Feature Vector...
        It takes 0.032 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/pipeline_parallel_datasets/reddit/32_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 5000
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 3
Number of classes: 41
Number of feature dimensions: 602
Number of vertices: 232965
Number of GPUs: 8
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
        It takes 0.313 seconds.
Building the Label Vector...
232965, 114848857, 114848857
Number of vertices per chunk: 7281
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
        It takes 0.036 seconds.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
train nodes 153431, valid nodes 23831, test nodes 55703
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 8381) 1-[8381, 15124) 2-[15124, 22398) 3-[22398, 30320) 4-[30320, 35655) 5-[35655, 45721) 6-[45721, 55131) 7-[55131, 63248) 8-[63248, 69343) ... 31-[226638, 232965)
232965, 114848857, 114848857
Number of vertices per chunk: 7281
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 59.193 Gbps (per GPU), 473.541 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.897 Gbps (per GPU), 471.177 Gbps (aggregated)
The layer-level communication performance: 58.905 Gbps (per GPU), 471.237 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.657 Gbps (per GPU), 469.257 Gbps (aggregated)
The layer-level communication performance: 58.627 Gbps (per GPU), 469.016 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.433 Gbps (per GPU), 467.462 Gbps (aggregated)
The layer-level communication performance: 58.386 Gbps (per GPU), 467.088 Gbps (aggregated)
The layer-level communication performance: 58.350 Gbps (per GPU), 466.800 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.138 Gbps (per GPU), 1265.107 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.136 Gbps (per GPU), 1265.088 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.136 Gbps (per GPU), 1265.085 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.144 Gbps (per GPU), 1265.155 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.123 Gbps (per GPU), 1264.988 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.124 Gbps (per GPU), 1264.990 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.126 Gbps (per GPU), 1265.012 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.123 Gbps (per GPU), 1264.988 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 103.793 Gbps (per GPU), 830.343 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 103.795 Gbps (per GPU), 830.357 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 103.794 Gbps (per GPU), 830.350 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 103.789 Gbps (per GPU), 830.315 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 103.792 Gbps (per GPU), 830.336 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 103.794 Gbps (per GPU), 830.350 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 103.794 Gbps (per GPU), 830.350 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 103.793 Gbps (per GPU), 830.343 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 39.410 Gbps (per GPU), 315.283 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.410 Gbps (per GPU), 315.278 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.410 Gbps (per GPU), 315.283 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.410 Gbps (per GPU), 315.282 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.410 Gbps (per GPU), 315.277 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.409 Gbps (per GPU), 315.270 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.408 Gbps (per GPU), 315.267 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 39.409 Gbps (per GPU), 315.269 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  2.73ms  3.25ms  4.31ms  1.58  8.38K  3.53M
 chk_1  2.99ms  3.41ms  4.26ms  1.42  6.74K  3.60M
 chk_2  2.88ms  3.32ms  4.57ms  1.58  7.27K  3.53M
 chk_3  2.91ms  3.39ms  4.27ms  1.47  7.92K  3.61M
 chk_4  2.79ms  3.14ms  3.84ms  1.37  5.33K  3.68M
 chk_5  2.89ms  3.46ms  4.52ms  1.57 10.07K  3.45M
 chk_6  3.04ms  3.58ms  4.60ms  1.51  9.41K  3.48M
 chk_7  2.82ms  3.31ms  4.23ms  1.50  8.12K  3.60M
 chk_8  2.92ms  3.29ms  4.08ms  1.40  6.09K  3.64M
 chk_9  2.81ms  3.43ms  4.56ms  1.62 11.10K  3.38M
chk_10  2.96ms  3.32ms  4.06ms  1.37  5.67K  3.63M
chk_11  2.85ms  3.36ms  4.27ms  1.50  8.16K  3.54M
chk_12  3.04ms  3.48ms  4.33ms  1.42  7.24K  3.55M
chk_13  2.83ms  3.20ms  3.92ms  1.38  5.41K  3.68M
chk_14  3.11ms  3.56ms  4.41ms  1.42  7.14K  3.53M
chk_15  3.01ms  3.56ms  4.55ms  1.51  9.25K  3.49M
chk_16  2.75ms  3.08ms  3.76ms  1.36  4.78K  3.77M
chk_17  2.92ms  3.35ms  4.16ms  1.42  6.85K  3.60M
chk_18  2.75ms  3.19ms  4.04ms  1.47  7.47K  3.57M
chk_19  2.76ms  3.10ms  3.80ms  1.38  4.88K  3.75M
chk_20  2.81ms  3.22ms  4.05ms  1.44  7.00K  3.63M
chk_21  2.76ms  3.13ms  3.85ms  1.39  5.41K  3.68M
chk_22  3.06ms  3.70ms  4.83ms  1.58 11.07K  3.39M
chk_23  2.90ms  3.33ms  4.18ms  1.44  7.23K  3.64M
chk_24  3.02ms  3.58ms  4.63ms  1.54 10.13K  3.43M
chk_25  2.77ms  3.15ms  3.93ms  1.42  6.40K  3.57M
chk_26  2.99ms  3.31ms  4.05ms  1.35  5.78K  3.55M
chk_27  2.96ms  3.43ms  4.41ms  1.49  9.34K  3.48M
chk_28  3.16ms  3.55ms  4.34ms  1.37  6.37K  3.57M
chk_29  2.93ms  3.26ms  3.97ms  1.35  5.16K  3.78M
chk_30  2.82ms  3.18ms  4.43ms  1.57  5.44K  3.67M
chk_31  3.00ms  3.39ms  4.15ms  1.39  6.33K  3.63M
   Avg  2.90  3.34  4.23
   Max  3.16  3.70  4.83
   Min  2.73  3.08  3.76
 Ratio  1.16  1.20  1.29
   Var  0.01  0.02  0.07
Profiling takes 3.867 s
*** Node 0, starting model training...
Num Stages: 4 / 4
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_ADD
*** Node 0 owns the model-level partition [0, 100)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 123307
*** Node 1, starting model training...
Num Stages: 4 / 4
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: OPERATOR_ADD
*** Node 1 owns the model-level partition [0, 100)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 123307, Num Local Vertices: 109658
*** Node 2, starting model training...
Num Stages: 4 / 4
Node 2, Pipeline Input Tensor: OPERATOR_ADD
Node 2, Pipeline Output Tensor: OPERATOR_ADD
*** Node 2 owns the model-level partition [100, 204)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 123307
*** Node 3, starting model training...
Num Stages: 4 / 4
Node 3, Pipeline Input Tensor: OPERATOR_ADD
Node 3, Pipeline Output Tensor: OPERATOR_ADD
*** Node 3 owns the model-level partition [100, 204)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 123307, Num Local Vertices: 109658
*** Node 4, starting model training...
Num Stages: 4 / 4
Node 4, Pipeline Input Tensor: OPERATOR_ADD
Node 4, Pipeline Output Tensor: OPERATOR_ADD
*** Node 4 owns the model-level partition [204, 308)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 123307
*** Node 5, starting model training...
Num Stages: 4 / 4
Node 5, Pipeline Input Tensor: OPERATOR_ADD
Node 5, Pipeline Output Tensor: OPERATOR_ADD
*** Node 5 owns the model-level partition [204, 308)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 123307, Num Local Vertices: 109658
*** Node 6, starting model training...
Num Stages: 4 / 4
Node 6, Pipeline Input Tensor: OPERATOR_ADD
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [308, 421)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 0, Num Local Vertices: 123307
*** Node 7, starting model training...
Num Stages: 4 / 4
Node 7, Pipeline Input Tensor: OPERATOR_ADD
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [308, 421)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 123307, Num Local Vertices: 109658
*** Node 0, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
+++++++++ Node 3 initializing the weights for op[100, 204)...
+++++++++ Node 4 initializing the weights for op[204, 308)...
+++++++++ Node 5 initializing the weights for op[204, 308)...
+++++++++ Node 6 initializing the weights for op[308, 421)...
+++++++++ Node 7 initializing the weights for op[308, 421)...
+++++++++ Node 2 initializing the weights for op[100, 204)...
+++++++++ Node 0 initializing the weights for op[0, 100)...
+++++++++ Node 1 initializing the weights for op[0, 100)...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 896608
Node 0, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...
*** Node 1, starting task scheduling...
*** Node 2, starting task scheduling...
*** Node 3, starting task scheduling...



The learning rate specified by the user: 0.001000000
*** Node 4, starting task scheduling...
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 4.1900	TrainAcc 0.1731	ValidAcc 0.1921	TestAcc 0.1881	BestValid 0.1921
	Epoch 50:	Loss 0.8838	TrainAcc 0.8632	ValidAcc 0.8768	TestAcc 0.8710	BestValid 0.8768
	Epoch 100:	Loss 0.4125	TrainAcc 0.9383	ValidAcc 0.9453	TestAcc 0.9430	BestValid 0.9453
	Epoch 150:	Loss 0.3172	TrainAcc 0.9499	ValidAcc 0.9530	TestAcc 0.9524	BestValid 0.9530
srun: Job step aborted: Waiting up to 32 seconds for job step to finish.
slurmstepd-gnerv7: error: *** STEP 3743.10 ON gnerv7 CANCELLED AT 2023-09-19T23:38:14 ***
