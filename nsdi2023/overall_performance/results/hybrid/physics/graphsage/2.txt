Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
DONE MPI INIT
Initialized node 7 on machine gnerv8
Initialized node 5 on machine gnerv8
DONE MPI INIT
Initialized node 4 on machine gnerv8
DONE MPI INIT
Initialized node 6 on machine gnerv8
DONE MPI INIT
Initialized node 0 on machine gnerv7
DONE MPI INIT
Initialized node 2 on machine gnerv7
DONE MPI INITDONE MPI INIT
Initialized node 1 on machine gnerv7

Initialized node 3 on machine gnerv7
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.012 seconds.
Building the CSC structure...
        It takes 0.017 seconds.
Building the CSC structure...
        It takes 0.015 seconds.
Building the CSC structure...
        It takes 0.016 seconds.
Building the CSC structure...
        It takes 0.012 seconds.
        It takes 0.011 seconds.
        It takes 0.016 seconds.
        It takes 0.012 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.013 seconds.
Building the Feature Vector...
        It takes 0.016 seconds.
        It takes 0.015 seconds.
Building the Feature Vector...
        It takes 0.016 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.449 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.460 seconds.
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.512 seconds.
Building the Label Vector...
        It takes 0.509 seconds.
        It takes 0.002 seconds.
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.618 seconds.
Building the Label Vector...
        It takes 0.004 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/pipeline_parallel_datasets/physics/32_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 300
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 2
Number of classes: 5
Number of feature dimensions: 8415
Number of vertices: 34493
Number of GPUs: 8
        It takes 0.617 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.623 seconds.
Building the Label Vector...
        It takes 0.624 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.007 seconds.
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
train nodes 100, valid nodes 500, test nodes 1000
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 1025) 1-[1025, 2154) 2-[2154, 3262) 3-[3262, 4284) 4-[4284, 5334) 5-[5334, 6511) 6-[6511, 7597) 7-[7597, 8680) 8-[8680, 9764) ... 31-[33337, 34493)
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 60.004 Gbps (per GPU), 480.029 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.675 Gbps (per GPU), 477.399 Gbps (aggregated)
The layer-level communication performance: 59.670 Gbps (per GPU), 477.363 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.398 Gbps (per GPU), 475.182 Gbps (aggregated)
The layer-level communication performance: 59.370 Gbps (per GPU), 474.957 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.133 Gbps (per GPU), 473.066 Gbps (aggregated)
The layer-level communication performance: 59.081 Gbps (per GPU), 472.648 Gbps (aggregated)
The layer-level communication performance: 59.049 Gbps (per GPU), 472.388 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.222 Gbps (per GPU), 1265.775 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.246 Gbps (per GPU), 1265.966 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.231 Gbps (per GPU), 1265.847 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.243 Gbps (per GPU), 1265.942 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.222 Gbps (per GPU), 1265.775 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.160 Gbps (per GPU), 1265.276 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.225 Gbps (per GPU), 1265.799 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.165 Gbps (per GPU), 1265.322 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 105.463 Gbps (per GPU), 843.705 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.421 Gbps (per GPU), 843.366 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.462 Gbps (per GPU), 843.698 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.462 Gbps (per GPU), 843.698 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.461 Gbps (per GPU), 843.691 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.398 Gbps (per GPU), 843.182 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.362 Gbps (per GPU), 842.893 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.362 Gbps (per GPU), 842.900 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 38.948 Gbps (per GPU), 311.586 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.948 Gbps (per GPU), 311.583 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.946 Gbps (per GPU), 311.568 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.948 Gbps (per GPU), 311.585 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.947 Gbps (per GPU), 311.575 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.947 Gbps (per GPU), 311.573 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.947 Gbps (per GPU), 311.579 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.947 Gbps (per GPU), 311.576 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  1.89ms  0.34ms  0.25ms  7.66  1.02K  0.02M
 chk_1  2.00ms  0.34ms  0.25ms  7.99  1.13K  0.01M
 chk_2  2.01ms  0.34ms  0.25ms  8.09  1.11K  0.01M
 chk_3  1.89ms  0.33ms  0.25ms  7.67  1.02K  0.02M
 chk_4  1.93ms  0.33ms  0.25ms  7.82  1.05K  0.02M
 chk_5  2.07ms  0.34ms  0.25ms  8.33  1.18K  0.01M
 chk_6  1.99ms  0.34ms  0.25ms  8.09  1.09K  0.02M
 chk_7  1.99ms  0.34ms  0.25ms  8.04  1.08K  0.02M
 chk_8  1.98ms  0.33ms  0.27ms  7.38  1.08K  0.01M
 chk_9  1.95ms  0.33ms  0.25ms  7.70  1.06K  0.02M
chk_10  1.94ms  0.33ms  0.25ms  7.74  1.04K  0.02M
chk_11  2.57ms  0.34ms  0.25ms 10.25  1.11K  0.01M
chk_12  2.00ms  0.34ms  0.25ms  7.89  1.11K  0.01M
chk_13  1.88ms  0.33ms  0.25ms  7.46  1.01K  0.02M
chk_14  1.97ms  0.33ms  0.26ms  7.60  1.09K  0.01M
chk_15  1.91ms  0.33ms  0.25ms  7.62  1.03K  0.02M
chk_16  1.84ms  0.32ms  0.25ms  7.32  0.98K  0.02M
chk_17  1.98ms  0.33ms  0.25ms  7.91  1.09K  0.01M
chk_18  1.93ms  0.33ms  0.25ms  7.69  1.04K  0.02M
chk_19  2.01ms  0.34ms  0.25ms  8.10  1.12K  0.01M
chk_20  2.01ms  0.34ms  0.25ms  8.15  1.13K  0.01M
chk_21  1.94ms  0.33ms  0.25ms  7.81  1.05K  0.02M
chk_22  2.00ms  0.34ms  0.25ms  8.12  1.11K  0.01M
chk_23  1.99ms  0.34ms  0.24ms  8.15  1.10K  0.01M
chk_24  2.58ms  0.33ms  0.25ms 10.38  1.02K  0.02M
chk_25  1.87ms  0.50ms  0.25ms  7.53  1.01K  0.02M
chk_26  2.00ms  0.34ms  0.25ms  8.07  1.12K  0.01M
chk_27  1.95ms  0.34ms  0.25ms  7.87  1.08K  0.02M
chk_28  1.95ms  0.34ms  0.25ms  7.77  1.07K  0.02M
chk_29  2.00ms  0.33ms  0.24ms  8.20  1.11K  0.01M
chk_30  1.99ms  0.34ms  0.25ms  8.01  1.10K  0.01M
chk_31  2.05ms  0.33ms  0.25ms  8.30  1.16K  0.01M
   Avg  2.00  0.34  0.25
   Max  2.58  0.50  0.27
   Min  1.84  0.32  0.24
 Ratio  1.40  1.55  1.10
   Var  0.02  0.00  0.00
Profiling takes 1.051 s
*** Node 0, starting model training...
Num Stages: 4 / 4
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 0 owns the model-level partition [0, 66)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 17213
*** Node 2, starting model training...
Num Stages: 4 / 4
Node 2, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 2, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 2 owns the model-level partition [66, 130)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 17213
*** Node 1, starting model training...
Num Stages: 4 / 4
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 1 owns the model-level partition [0, 66)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 17213, Num Local Vertices: 17280
*** Node 4, starting model training...
Num Stages: 4 / 4
Node 4, Pipeline Input Tensor: OPERATOR_DROPOUT
*** Node 5, starting model training...
Num Stages: 4 / 4
Node 5, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 5, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 5 owns the model-level partition [130, 194)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 17213, Num Local Vertices: 17280
*** Node 3, starting model training...
Num Stages: 4 / 4
Node 3, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 3, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 3 owns the model-level partition [66, 130)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 17213, Num Local Vertices: 17280
Node 4, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 4 owns the model-level partition [130, 194)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 17213
*** Node 6, starting model training...
Num Stages: 4 / 4
*** Node 7, starting model training...
Num Stages: 4 / 4
Node 7, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [194, 257)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 17213, Num Local Vertices: 17280
Node 6, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [194, 257)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 0, Num Local Vertices: 17213
*** Node 5, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
+++++++++ Node 1 initializing the weights for op[0, 66)...
+++++++++ Node 7 initializing the weights for op[194, 257)...
+++++++++ Node 5 initializing the weights for op[130, 194)...
+++++++++ Node 6 initializing the weights for op[194, 257)...
+++++++++ Node 2 initializing the weights for op[66, 130)...
+++++++++ Node 4 initializing the weights for op[130, 194)...
+++++++++ Node 3 initializing the weights for op[66, 130)...
+++++++++ Node 0 initializing the weights for op[0, 66)...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
The number of mirror vertices: 89728
Node 0, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 4, starting task scheduling...
*** Node 0, starting task scheduling...



*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 1.9471	TrainAcc 0.2000	ValidAcc 0.0880	TestAcc 0.0930	BestValid 0.0880
	Epoch 10:	Loss 1.5533	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 20:	Loss 1.4753	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 30:	Loss 1.4028	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 40:	Loss 1.3788	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 50:	Loss 1.3749	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 60:	Loss 1.3434	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 70:	Loss 1.3459	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 80:	Loss 1.3236	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 90:	Loss 1.3334	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 100:	Loss 1.3220	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 110:	Loss 1.3085	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 120:	Loss 1.3017	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 130:	Loss 1.3058	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 140:	Loss 1.2984	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 150:	Loss 1.2857	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 160:	Loss 1.3001	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 170:	Loss 1.2701	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 180:	Loss 1.2479	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 190:	Loss 1.2518	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 200:	Loss 1.2788	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 210:	Loss 1.2521	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0880
	Epoch 220:	Loss 1.2501	TrainAcc 0.2100	ValidAcc 0.0940	TestAcc 0.0960	BestValid 0.0940
	Epoch 230:	Loss 1.2531	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0940
	Epoch 240:	Loss 1.2394	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0940
	Epoch 250:	Loss 1.2376	TrainAcc 0.2100	ValidAcc 0.0920	TestAcc 0.0960	BestValid 0.0940
	Epoch 260:	Loss 1.2324	TrainAcc 0.2100	ValidAcc 0.1020	TestAcc 0.0950	BestValid 0.1020
	Epoch 270:	Loss 1.2321	TrainAcc 0.2200	ValidAcc 0.1080	TestAcc 0.1190	BestValid 0.1080
	Epoch 280:	Loss 1.2030	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1080
	Epoch 290:	Loss 1.2306	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1080
	Epoch 300:	Loss 1.2172	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1080
****** Epoch Time (Excluding Evaluation Cost): 0.126 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 18.372 ms (Max: 21.209, Min: 14.699, Sum: 146.975)
Cluster-Wide Average, Compute: 61.165 ms (Max: 83.052, Min: 50.901, Sum: 489.323)
Cluster-Wide Average, Communication-Layer: 2.979 ms (Max: 3.801, Min: 2.023, Sum: 23.836)
Cluster-Wide Average, Bubble-Imbalance: 17.299 ms (Max: 25.250, Min: 0.557, Sum: 138.391)
Cluster-Wide Average, Communication-Graph: 20.656 ms (Max: 22.654, Min: 19.740, Sum: 165.248)
Cluster-Wide Average, Optimization: 2.776 ms (Max: 4.862, Min: 1.954, Sum: 22.206)
Cluster-Wide Average, Others: 2.666 ms (Max: 3.791, Min: 0.840, Sum: 21.331)
****** Breakdown Sum: 125.914 ms ******
Cluster-Wide Average, GPU Memory Consumption: 2.858 GB (Max: 4.546, Min: 2.311, Sum: 22.862)
Cluster-Wide Average, Graph-Level Communication Throughput: 41.587 Gbps (Max: 46.880, Min: 34.114, Sum: 332.692)
Cluster-Wide Average, Layer-Level Communication Throughput: 27.317 Gbps (Max: 32.844, Min: 19.974, Sum: 218.534)
Layer-level communication (cluster-wide, per-epoch): 0.077 GB
Graph-level communication (cluster-wide, per-epoch): 0.535 GB
Weight-sync communication (cluster-wide, per-epoch): 0.017 GB
Total communication (cluster-wide, per-epoch): 0.629 GB
****** Accuracy Results ******
Highest valid_acc: 0.1080
Target test_acc: 0.1190
Epoch to reach the target acc: 269
[MPI Rank 4] Success 
[MPI Rank 0] Success 
[MPI Rank 5] Success 
[MPI Rank 1] Success 
[MPI Rank 6] Success 
[MPI Rank 2] Success 
[MPI Rank 7] Success 
[MPI Rank 3] Success 
