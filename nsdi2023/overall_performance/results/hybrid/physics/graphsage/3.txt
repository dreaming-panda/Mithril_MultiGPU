Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
Initialized node 4 on machine gnerv8
DONE MPI INITDONE MPI INIT
Initialized node 6 on machine gnerv8
DONE MPI INIT
Initialized node 7 on machine gnerv8

Initialized node 5 on machine gnerv8
DONE MPI INIT
Initialized node 0 on machine gnerv7
DONE MPI INIT
Initialized node 3 on machine gnerv7
DONE MPI INIT
Initialized node 1 on machine gnerv7
DONE MPI INIT
Initialized node 2 on machine gnerv7
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.009 seconds.
Building the CSC structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.010 seconds.
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.012 seconds.
        It takes 0.023 seconds.
Building the CSC structure...
        It takes 0.019 seconds.
Building the CSC structure...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.020 seconds.
        It takes 0.011 seconds.
        It takes 0.011 seconds.
        It takes 0.012 seconds.
        It takes 0.010 seconds.
Building the Feature Vector...
        It takes 0.010 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.460 seconds.
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.506 seconds.
        It takes 0.501 seconds.
Building the Label Vector...
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.003 seconds.
        It takes 0.512 seconds.
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.607 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/pipeline_parallel_datasets/physics/32_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 300
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 3
Number of classes: 5
Number of feature dimensions: 8415
Number of vertices: 34493
Number of GPUs: 8
        It takes 0.603 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.616 seconds.
Building the Label Vector...
        It takes 0.619 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.007 seconds.
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
34493, 530417, 530417
Number of vertices per chunk: 1078
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
train nodes 100, valid nodes 500, test nodes 1000
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 1025) 1-[1025, 2154) 2-[2154, 3262) 3-[3262, 4284) 4-[4284, 5334) 5-[5334, 6511) 6-[6511, 7597) 7-[7597, 8680) 8-[8680, 9764) ... 31-[33337, 34493)
34493, 530417, 530417
Number of vertices per chunk: 1078
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
The layer-level communication performance: 60.356 Gbps (per GPU), 482.844 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.050 Gbps (per GPU), 480.399 Gbps (aggregated)
The layer-level communication performance: 60.051 Gbps (per GPU), 480.406 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.798 Gbps (per GPU), 478.386 Gbps (aggregated)
The layer-level communication performance: 59.712 Gbps (per GPU), 477.692 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.490 Gbps (per GPU), 475.923 Gbps (aggregated)
The layer-level communication performance: 59.458 Gbps (per GPU), 475.664 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.540 Gbps (per GPU), 476.322 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 160.790 Gbps (per GPU), 1286.322 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.791 Gbps (per GPU), 1286.325 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.800 Gbps (per GPU), 1286.399 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.794 Gbps (per GPU), 1286.350 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.791 Gbps (per GPU), 1286.325 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.834 Gbps (per GPU), 1286.670 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 160.791 Gbps (per GPU), 1286.325 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.425 Gbps (per GPU), 1275.397 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 104.622 Gbps (per GPU), 836.978 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.618 Gbps (per GPU), 836.943 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.623 Gbps (per GPU), 836.985 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.618 Gbps (per GPU), 836.943 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.623 Gbps (per GPU), 836.985 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.641 Gbps (per GPU), 837.130 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.624 Gbps (per GPU), 836.992 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.530 Gbps (per GPU), 836.241 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 34.743 Gbps (per GPU), 277.944 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.744 Gbps (per GPU), 277.951 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.744 Gbps (per GPU), 277.949 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.743 Gbps (per GPU), 277.945 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.744 Gbps (per GPU), 277.951 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.742 Gbps (per GPU), 277.937 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.741 Gbps (per GPU), 277.930 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.740 Gbps (per GPU), 277.924 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  1.88ms  0.93ms  0.23ms  8.00  1.02K  0.02M
 chk_1  1.99ms  0.33ms  0.24ms  8.41  1.13K  0.01M
 chk_2  1.98ms  0.35ms  0.23ms  8.43  1.11K  0.01M
 chk_3  1.88ms  0.32ms  0.23ms  8.01  1.02K  0.02M
 chk_4  1.92ms  0.32ms  0.23ms  8.20  1.05K  0.02M
 chk_5  2.05ms  0.32ms  0.23ms  8.74  1.18K  0.01M
 chk_6  2.55ms  0.32ms  0.23ms 10.98  1.09K  0.02M
 chk_7  1.96ms  0.35ms  0.24ms  8.32  1.08K  0.02M
 chk_8  1.97ms  0.32ms  0.24ms  8.39  1.08K  0.01M
 chk_9  1.93ms  0.32ms  0.23ms  8.27  1.06K  0.02M
chk_10  1.93ms  0.32ms  0.23ms  8.22  1.04K  0.02M
chk_11  1.99ms  0.32ms  0.23ms  8.47  1.11K  0.01M
chk_12  1.99ms  0.34ms  0.24ms  8.37  1.11K  0.01M
chk_13  1.87ms  0.31ms  0.24ms  7.90  1.01K  0.02M
chk_14  1.97ms  0.32ms  0.24ms  8.33  1.09K  0.01M
chk_15  1.90ms  0.32ms  0.24ms  8.07  1.03K  0.02M
chk_16  1.83ms  0.31ms  0.24ms  7.77  0.98K  0.02M
chk_17  1.97ms  0.32ms  0.23ms  8.41  1.09K  0.01M
chk_18  1.91ms  0.32ms  0.24ms  8.01  1.04K  0.02M
chk_19  2.60ms  0.32ms  0.23ms 11.11  1.12K  0.01M
chk_20  2.00ms  0.32ms  0.23ms  8.53  1.13K  0.01M
chk_21  1.91ms  0.32ms  0.24ms  8.13  1.05K  0.02M
chk_22  1.98ms  0.32ms  0.24ms  8.36  1.11K  0.01M
chk_23  1.97ms  0.32ms  0.23ms  8.50  1.10K  0.01M
chk_24  1.88ms  0.32ms  0.24ms  8.00  1.02K  0.02M
chk_25  1.87ms  0.31ms  0.24ms  7.94  1.01K  0.02M
chk_26  1.99ms  0.32ms  0.24ms  8.47  1.12K  0.01M
chk_27  1.94ms  0.32ms  0.24ms  8.24  1.08K  0.02M
chk_28  1.94ms  0.32ms  0.24ms  8.15  1.07K  0.02M
chk_29  1.99ms  0.32ms  0.23ms  8.50  1.11K  0.01M
chk_30  1.97ms  0.32ms  0.24ms  8.36  1.10K  0.01M
chk_31  2.03ms  0.32ms  0.23ms  8.73  1.16K  0.01M
   Avg  1.99  0.34  0.24
   Max  2.60  0.93  0.24
   Min  1.83  0.31  0.23
 Ratio  1.42  3.03  1.03
   Var  0.03  0.01  0.00
Profiling takes 1.033 s
*** Node 0, starting model training...
Num Stages: 4 / 4
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 0 owns the model-level partition [0, 66)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 17213
*** Node 2, starting model training...
Num Stages: 4 / 4
Node 2, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 2, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 2 owns the model-level partition [66, 130)
*** Node 3, starting model training...
Num Stages: 4 / 4
Node 3, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 3, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 3 owns the model-level partition [66, 130)
*** Node 3, constructing the helper classes...
*** Node 1, starting model training...
Num Stages: 4 / 4
Node 1, Pipeline Input Tensor: NULL
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 17213
Node 3, Local Vertex Begin: 17213, Num Local Vertices: 17280
Node 1, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 1 owns the model-level partition [0, 66)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 17213, Num Local Vertices: 17280
*** Node 4, starting model training...
Num Stages: 4 / 4
*** Node 5, starting model training...
Num Stages: 4 / 4
*** Node 6, starting model training...
Num Stages: 4 / 4
Node 6, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [194, 257)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 0, Num Local Vertices: 17213
*** Node 7, starting model training...
Num Stages: 4 / 4
Node 7, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [194, 257)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 17213, Num Local Vertices: 17280
Node 4, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 4, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 4 owns the model-level partition [130, 194)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 17213
Node 5, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 5, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 5 owns the model-level partition [130, 194)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 17213, Num Local Vertices: 17280
*** Node 4, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 66)...
+++++++++ Node 4 initializing the weights for op[130, 194)...
+++++++++ Node 1 initializing the weights for op[0, 66)...
+++++++++ Node 2 initializing the weights for op[66, 130)...
+++++++++ Node 3 initializing the weights for op[66, 130)...
+++++++++ Node 5 initializing the weights for op[130, 194)...
+++++++++ Node 6 initializing the weights for op[194, 257)...
+++++++++ Node 7 initializing the weights for op[194, 257)...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 89728
Node 0, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
*** Node 5, starting task scheduling...
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 1.7648	TrainAcc 0.2000	ValidAcc 0.0740	TestAcc 0.0750	BestValid 0.0740
	Epoch 10:	Loss 1.5350	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 20:	Loss 1.4264	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 30:	Loss 1.4528	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 40:	Loss 1.4220	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 50:	Loss 1.3607	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 60:	Loss 1.3432	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 70:	Loss 1.3463	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 80:	Loss 1.3152	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 90:	Loss 1.3134	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 100:	Loss 1.3118	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 110:	Loss 1.2989	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 120:	Loss 1.3114	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 130:	Loss 1.2801	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 140:	Loss 1.2809	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 150:	Loss 1.2742	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 160:	Loss 1.2726	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 170:	Loss 1.2515	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 180:	Loss 1.2417	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 190:	Loss 1.2481	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 200:	Loss 1.2527	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 210:	Loss 1.2483	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 220:	Loss 1.2443	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 230:	Loss 1.2368	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 240:	Loss 1.2440	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 250:	Loss 1.2382	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 260:	Loss 1.2271	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 270:	Loss 1.2116	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 280:	Loss 1.2014	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 290:	Loss 1.2223	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
	Epoch 300:	Loss 1.1917	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.0840
****** Epoch Time (Excluding Evaluation Cost): 0.122 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 17.951 ms (Max: 20.215, Min: 14.809, Sum: 143.609)
Cluster-Wide Average, Compute: 60.466 ms (Max: 80.078, Min: 51.469, Sum: 483.730)
Cluster-Wide Average, Communication-Layer: 3.157 ms (Max: 3.804, Min: 2.620, Sum: 25.258)
Cluster-Wide Average, Bubble-Imbalance: 15.498 ms (Max: 23.842, Min: 0.500, Sum: 123.982)
Cluster-Wide Average, Communication-Graph: 20.442 ms (Max: 22.842, Min: 19.378, Sum: 163.538)
Cluster-Wide Average, Optimization: 2.606 ms (Max: 4.048, Min: 1.907, Sum: 20.846)
Cluster-Wide Average, Others: 2.027 ms (Max: 2.753, Min: 0.806, Sum: 16.215)
****** Breakdown Sum: 122.147 ms ******
Cluster-Wide Average, GPU Memory Consumption: 2.858 GB (Max: 4.546, Min: 2.311, Sum: 22.860)
Cluster-Wide Average, Graph-Level Communication Throughput: 41.862 Gbps (Max: 44.951, Min: 36.163, Sum: 334.899)
Cluster-Wide Average, Layer-Level Communication Throughput: 25.506 Gbps (Max: 31.845, Min: 20.083, Sum: 204.045)
Layer-level communication (cluster-wide, per-epoch): 0.077 GB
Graph-level communication (cluster-wide, per-epoch): 0.535 GB
Weight-sync communication (cluster-wide, per-epoch): 0.017 GB
Total communication (cluster-wide, per-epoch): 0.629 GB
****** Accuracy Results ******
Highest valid_acc: 0.0840
Target test_acc: 0.0920
Epoch to reach the target acc: 9
[MPI Rank 0] Success 
[MPI Rank 1] Success 
[MPI Rank 4] Success 
[MPI Rank 2] Success 
[MPI Rank 5] Success 
[MPI Rank 3] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
