Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
Initialized node 6 on machine gnerv8
DONE MPI INIT
Initialized node 7 on machine gnerv8
DONE MPI INITDONE MPI INIT
Initialized node 5 on machine gnerv8

Initialized node 4 on machine gnerv8
DONE MPI INIT
Initialized node 0 on machine gnerv7
DONE MPI INITDONE MPI INIT
Initialized node 2 on machine gnerv7

Initialized node 1 on machine gnerv7
DONE MPI INIT
Initialized node 3 on machine gnerv7
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.013 seconds.
Building the CSC structure...
        It takes 0.015 seconds.
Building the CSC structure...
        It takes 0.015 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
        It takes 0.011 seconds.
        It takes 0.014 seconds.
        It takes 0.014 seconds.
        It takes 0.016 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.011 seconds.
        It takes 0.014 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.014 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.457 seconds.
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.475 seconds.
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.511 seconds.
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.520 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.573 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.619 seconds.
        It takes 0.625 seconds.
Building the Label Vector...
Building the Label Vector...
        It takes 0.620 seconds.
        It takes 0.004 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/pipeline_parallel_datasets/physics/32_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 300
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 3
Number of classes: 5
Number of feature dimensions: 8415
Number of vertices: 34493
Number of GPUs: 8
Building the Label Vector...
        It takes 0.008 seconds.
        It takes 0.007 seconds.
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
34493, 530417, 530417
Number of vertices per chunk: 1078
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Number of vertices per chunk: 1078
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
train nodes 100, valid nodes 500, test nodes 1000
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 1025) 1-[1025, 2154) 2-[2154, 3262) 3-[3262, 4284) 4-[4284, 5334) 5-[5334, 6511) 6-[6511, 7597) 7-[7597, 8680) 8-[8680, 9764) ... 31-[33337, 34493)
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
The layer-level communication performance: 60.591 Gbps (per GPU), 484.725 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.306 Gbps (per GPU), 482.449 Gbps (aggregated)
The layer-level communication performance: 60.303 Gbps (per GPU), 482.422 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.061 Gbps (per GPU), 480.491 Gbps (aggregated)
The layer-level communication performance: 60.034 Gbps (per GPU), 480.275 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.801 Gbps (per GPU), 478.405 Gbps (aggregated)
The layer-level communication performance: 59.754 Gbps (per GPU), 478.030 Gbps (aggregated)
The layer-level communication performance: 59.725 Gbps (per GPU), 477.797 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 152.443 Gbps (per GPU), 1219.540 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 152.454 Gbps (per GPU), 1219.629 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 152.431 Gbps (per GPU), 1219.452 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 152.440 Gbps (per GPU), 1219.517 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 152.426 Gbps (per GPU), 1219.407 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 152.445 Gbps (per GPU), 1219.562 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 152.429 Gbps (per GPU), 1219.430 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 152.429 Gbps (per GPU), 1219.430 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 105.008 Gbps (per GPU), 840.065 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.012 Gbps (per GPU), 840.100 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.011 Gbps (per GPU), 840.086 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.013 Gbps (per GPU), 840.107 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.012 Gbps (per GPU), 840.100 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.002 Gbps (per GPU), 840.016 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.011 Gbps (per GPU), 840.086 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.012 Gbps (per GPU), 840.100 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 38.291 Gbps (per GPU), 306.325 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.293 Gbps (per GPU), 306.341 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.289 Gbps (per GPU), 306.315 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.291 Gbps (per GPU), 306.332 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.291 Gbps (per GPU), 306.331 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.287 Gbps (per GPU), 306.297 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.291 Gbps (per GPU), 306.328 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.283 Gbps (per GPU), 306.262 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  0.74ms  0.74ms  1.32ms  1.80  1.02K  0.02M
 chk_1  0.77ms  0.74ms  1.33ms  1.79  1.13K  0.01M
 chk_2  0.77ms  0.74ms  1.33ms  1.79  1.11K  0.01M
 chk_3  0.74ms  0.72ms  1.31ms  1.81  1.02K  0.02M
 chk_4  0.75ms  0.73ms  1.33ms  1.81  1.05K  0.02M
 chk_5  1.32ms  0.74ms  1.33ms  1.80  1.18K  0.01M
 chk_6  0.78ms  0.74ms  1.33ms  1.80  1.09K  0.02M
 chk_7  0.78ms  0.74ms  1.53ms  2.08  1.08K  0.02M
 chk_8  0.77ms  0.73ms  1.34ms  1.82  1.08K  0.01M
 chk_9  0.77ms  0.73ms  1.42ms  1.94  1.06K  0.02M
chk_10  0.77ms  0.73ms  1.33ms  1.81  1.04K  0.02M
chk_11  0.78ms  0.74ms  1.33ms  1.79  1.11K  0.01M
chk_12  0.78ms  0.74ms  1.34ms  1.80  1.11K  0.01M
chk_13  0.74ms  0.72ms  1.30ms  1.81  1.01K  0.02M
chk_14  0.77ms  0.74ms  1.33ms  1.80  1.09K  0.01M
chk_15  0.76ms  0.73ms  1.32ms  1.80  1.03K  0.02M
chk_16  0.72ms  0.72ms  1.29ms  1.80  0.98K  0.02M
chk_17  0.78ms  0.74ms  1.32ms  1.79  1.09K  0.01M
chk_18  0.76ms  0.73ms  1.32ms  1.80  1.04K  0.02M
chk_19  0.78ms  0.74ms  1.33ms  1.78  1.12K  0.01M
chk_20  0.78ms  1.41ms  1.33ms  1.80  1.13K  0.01M
chk_21  0.76ms  0.73ms  1.34ms  1.83  1.05K  0.02M
chk_22  0.78ms  0.74ms  1.33ms  1.79  1.11K  0.01M
chk_23  0.78ms  0.74ms  1.33ms  1.79  1.10K  0.01M
chk_24  0.75ms  0.72ms  1.42ms  1.97  1.02K  0.02M
chk_25  0.74ms  0.72ms  1.36ms  1.90  1.01K  0.02M
chk_26  0.78ms  0.74ms  1.35ms  1.82  1.12K  0.01M
chk_27  0.77ms  0.74ms  1.33ms  1.81  1.08K  0.02M
chk_28  0.77ms  0.74ms  1.33ms  1.81  1.07K  0.02M
chk_29  0.78ms  0.74ms  1.33ms  1.80  1.11K  0.01M
chk_30  0.78ms  0.74ms  1.33ms  1.81  1.10K  0.01M
chk_31  0.79ms  0.74ms  1.34ms  1.80  1.16K  0.01M
   Avg  0.78  0.76  1.34
   Max  1.32  1.41  1.53
   Min  0.72  0.72  1.29
 Ratio  1.82  1.96  1.19
   Var  0.01  0.01  0.00
Profiling takes 1.150 s
*** Node 0, starting model training...
Num Stages: 4 / 4
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_ADD
*** Node 0 owns the model-level partition [0, 100)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 17213
*** Node 1, starting model training...
Num Stages: 4 / 4
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: OPERATOR_ADD
*** Node 1 owns the model-level partition [0, 100)
*** Node 1, constructing the helper classes...
*** Node 2, starting model training...
Num Stages: 4 / 4
Node 2, Pipeline Input Tensor: OPERATOR_ADD
Node 2, Pipeline Output Tensor: OPERATOR_ADD
*** Node 2 owns the model-level partition [100, 204)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 17213
*** Node 3, starting model training...
Num Stages: 4 / 4
Node 3, Pipeline Input Tensor: OPERATOR_ADD
Node 3, Pipeline Output Tensor: OPERATOR_ADD
*** Node 3 owns the model-level partition [100, 204)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 17213, Num Local Vertices: 17280
*** Node 4, starting model training...
Num Stages: 4 / 4
Node 4, Pipeline Input Tensor: OPERATOR_ADD
Node 4, Pipeline Output Tensor: OPERATOR_ADD
*** Node 4 owns the model-level partition [204, 308)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 17213
*** Node 5, starting model training...
Num Stages: 4 / 4
Node 5, Pipeline Input Tensor: OPERATOR_ADD
Node 5, Pipeline Output Tensor: OPERATOR_ADD
*** Node 5 owns the model-level partition [204, 308)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 17213, Num Local Vertices: 17280
Node 1, Local Vertex Begin: 17213, Num Local Vertices: 17280
*** Node 6, starting model training...
Num Stages: 4 / 4
Node 6, Pipeline Input Tensor: OPERATOR_ADD
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [308, 421)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 0, Num Local Vertices: 17213
*** Node 7, starting model training...
Num Stages: 4 / 4
Node 7, Pipeline Input Tensor: OPERATOR_ADD
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [308, 421)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 17213, Num Local Vertices: 17280
*** Node 5, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
+++++++++ Node 1 initializing the weights for op[0, 100)...
+++++++++ Node 6 initializing the weights for op[308, 421)...
+++++++++ Node 2 initializing the weights for op[100, 204)...
+++++++++ Node 0 initializing the weights for op[0, 100)...
+++++++++ Node 5 initializing the weights for op[204, 308)...
+++++++++ Node 4 initializing the weights for op[204, 308)...
+++++++++ Node 3 initializing the weights for op[100, 204)...
+++++++++ Node 7 initializing the weights for op[308, 421)...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 89728
Node 0, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 4, starting task scheduling...
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 2.3440	TrainAcc 0.3100	ValidAcc 0.2060	TestAcc 0.1860	BestValid 0.2060
	Epoch 10:	Loss 1.1115	TrainAcc 0.9100	ValidAcc 0.9020	TestAcc 0.9090	BestValid 0.9020
	Epoch 20:	Loss 0.2251	TrainAcc 0.9800	ValidAcc 0.9400	TestAcc 0.9310	BestValid 0.9400
	Epoch 30:	Loss 0.0801	TrainAcc 1.0000	ValidAcc 0.9460	TestAcc 0.9340	BestValid 0.9460
	Epoch 40:	Loss 0.0307	TrainAcc 1.0000	ValidAcc 0.9480	TestAcc 0.9340	BestValid 0.9480
	Epoch 50:	Loss 0.0168	TrainAcc 1.0000	ValidAcc 0.9460	TestAcc 0.9320	BestValid 0.9480
	Epoch 60:	Loss 0.0129	TrainAcc 1.0000	ValidAcc 0.9460	TestAcc 0.9360	BestValid 0.9480
	Epoch 70:	Loss 0.0113	TrainAcc 1.0000	ValidAcc 0.9440	TestAcc 0.9360	BestValid 0.9480
	Epoch 80:	Loss 0.0147	TrainAcc 1.0000	ValidAcc 0.9440	TestAcc 0.9340	BestValid 0.9480
	Epoch 90:	Loss 0.0093	TrainAcc 1.0000	ValidAcc 0.9440	TestAcc 0.9350	BestValid 0.9480
	Epoch 100:	Loss 0.0095	TrainAcc 1.0000	ValidAcc 0.9440	TestAcc 0.9350	BestValid 0.9480
	Epoch 110:	Loss 0.0058	TrainAcc 1.0000	ValidAcc 0.9440	TestAcc 0.9330	BestValid 0.9480
	Epoch 120:	Loss 0.0080	TrainAcc 1.0000	ValidAcc 0.9440	TestAcc 0.9330	BestValid 0.9480
	Epoch 130:	Loss 0.0096	TrainAcc 1.0000	ValidAcc 0.9400	TestAcc 0.9350	BestValid 0.9480
	Epoch 140:	Loss 0.0093	TrainAcc 1.0000	ValidAcc 0.9440	TestAcc 0.9360	BestValid 0.9480
	Epoch 150:	Loss 0.0068	TrainAcc 1.0000	ValidAcc 0.9420	TestAcc 0.9360	BestValid 0.9480
	Epoch 160:	Loss 0.0051	TrainAcc 1.0000	ValidAcc 0.9400	TestAcc 0.9360	BestValid 0.9480
	Epoch 170:	Loss 0.0087	TrainAcc 1.0000	ValidAcc 0.9400	TestAcc 0.9350	BestValid 0.9480
	Epoch 180:	Loss 0.0068	TrainAcc 1.0000	ValidAcc 0.9400	TestAcc 0.9350	BestValid 0.9480
	Epoch 190:	Loss 0.0046	TrainAcc 1.0000	ValidAcc 0.9380	TestAcc 0.9350	BestValid 0.9480
	Epoch 200:	Loss 0.0039	TrainAcc 1.0000	ValidAcc 0.9400	TestAcc 0.9350	BestValid 0.9480
	Epoch 210:	Loss 0.0087	TrainAcc 1.0000	ValidAcc 0.9440	TestAcc 0.9350	BestValid 0.9480
	Epoch 220:	Loss 0.0053	TrainAcc 1.0000	ValidAcc 0.9440	TestAcc 0.9370	BestValid 0.9480
	Epoch 230:	Loss 0.0047	TrainAcc 1.0000	ValidAcc 0.9400	TestAcc 0.9360	BestValid 0.9480
	Epoch 240:	Loss 0.0056	TrainAcc 1.0000	ValidAcc 0.9380	TestAcc 0.9350	BestValid 0.9480
	Epoch 250:	Loss 0.0055	TrainAcc 1.0000	ValidAcc 0.9380	TestAcc 0.9350	BestValid 0.9480
	Epoch 260:	Loss 0.0031	TrainAcc 1.0000	ValidAcc 0.9380	TestAcc 0.9350	BestValid 0.9480
	Epoch 270:	Loss 0.0029	TrainAcc 1.0000	ValidAcc 0.9380	TestAcc 0.9350	BestValid 0.9480
	Epoch 280:	Loss 0.0051	TrainAcc 1.0000	ValidAcc 0.9440	TestAcc 0.9360	BestValid 0.9480
	Epoch 290:	Loss 0.0021	TrainAcc 1.0000	ValidAcc 0.9440	TestAcc 0.9370	BestValid 0.9480
	Epoch 300:	Loss 0.0031	TrainAcc 1.0000	ValidAcc 0.9440	TestAcc 0.9370	BestValid 0.9480
****** Epoch Time (Excluding Evaluation Cost): 0.151 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 23.121 ms (Max: 23.440, Min: 22.515, Sum: 184.972)
Cluster-Wide Average, Compute: 94.444 ms (Max: 98.309, Min: 90.349, Sum: 755.552)
Cluster-Wide Average, Communication-Layer: 3.201 ms (Max: 3.867, Min: 2.666, Sum: 25.612)
Cluster-Wide Average, Bubble-Imbalance: 3.920 ms (Max: 7.043, Min: 1.495, Sum: 31.360)
Cluster-Wide Average, Communication-Graph: 21.274 ms (Max: 24.027, Min: 20.184, Sum: 170.189)
Cluster-Wide Average, Optimization: 2.842 ms (Max: 3.801, Min: 2.318, Sum: 22.736)
Cluster-Wide Average, Others: 1.936 ms (Max: 2.804, Min: 1.064, Sum: 15.487)
****** Breakdown Sum: 150.738 ms ******
Cluster-Wide Average, GPU Memory Consumption: 3.103 GB (Max: 4.610, Min: 2.692, Sum: 24.825)
Cluster-Wide Average, Graph-Level Communication Throughput: 39.594 Gbps (Max: 44.410, Min: 31.762, Sum: 316.749)
Cluster-Wide Average, Layer-Level Communication Throughput: 25.142 Gbps (Max: 31.135, Min: 20.208, Sum: 201.133)
Layer-level communication (cluster-wide, per-epoch): 0.077 GB
Graph-level communication (cluster-wide, per-epoch): 0.535 GB
Weight-sync communication (cluster-wide, per-epoch): 0.011 GB
Total communication (cluster-wide, per-epoch): 0.623 GB
****** Accuracy Results ******
Highest valid_acc: 0.9480
Target test_acc: 0.9340
Epoch to reach the target acc: 39
[MPI Rank 0] Success 
[MPI Rank 1] Success 
[MPI Rank 2] Success 
[MPI Rank 3] Success 
[MPI Rank 4] Success 
[MPI Rank 5] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
