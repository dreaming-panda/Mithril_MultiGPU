Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
Initialized node 4 on machine gnerv8
DONE MPI INIT
Initialized node 7 on machine gnerv8
DONE MPI INITDONE MPI INIT
Initialized node 5 on machine gnerv8

Initialized node 6 on machine gnerv8
DONE MPI INIT
Initialized node 0 on machine gnerv7
DONE MPI INIT
Initialized node 3 on machine gnerv7
DONE MPI INIT
DONE MPI INIT
Initialized node 2 on machine gnerv7
Initialized node 1 on machine gnerv7
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.017 seconds.
Building the CSC structure...
        It takes 0.017 seconds.
Building the CSC structure...
        It takes 0.012 seconds.
        It takes 0.011 seconds.
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.020 seconds.
Building the CSC structure...
        It takes 0.016 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.012 seconds.
        It takes 0.013 seconds.
Building the Feature Vector...
        It takes 0.010 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.011 seconds.
        It takes 0.011 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.453 seconds.
Building the Label Vector...
        It takes 0.451 seconds.
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.002 seconds.
        It takes 0.520 seconds.
Building the Label Vector...
        It takes 0.522 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.003 seconds.
        It takes 0.573 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.618 seconds.
Building the Label Vector...
        It takes 0.004 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/pipeline_parallel_datasets/physics/32_parts
The number of GCN layers: 32
The number of hidden units: 100
The number of training epoches: 300
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 3
Number of classes: 5
Number of feature dimensions: 8415
Number of vertices: 34493
Number of GPUs: 8
        It takes 0.609 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.620 seconds.
Building the Label Vector...
        It takes 0.008 seconds.
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
34493, 530417, 530417
Number of vertices per chunk: 1078
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
train nodes 100, valid nodes 500, test nodes 1000
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 1025) 1-[1025, 2154) 2-[2154, 3262) 3-[3262, 4284) 4-[4284, 5334) 5-[5334, 6511) 6-[6511, 7597) 7-[7597, 8680) 8-[8680, 9764) ... 31-[33337, 34493)
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
The layer-level communication performance: 60.361 Gbps (per GPU), 482.892 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.062 Gbps (per GPU), 480.493 Gbps (aggregated)
The layer-level communication performance: 60.062 Gbps (per GPU), 480.496 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.800 Gbps (per GPU), 478.402 Gbps (aggregated)
The layer-level communication performance: 59.777 Gbps (per GPU), 478.219 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.560 Gbps (per GPU), 476.477 Gbps (aggregated)
The layer-level communication performance: 59.507 Gbps (per GPU), 476.058 Gbps (aggregated)
The layer-level communication performance: 59.473 Gbps (per GPU), 475.782 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.776 Gbps (per GPU), 1270.207 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.773 Gbps (per GPU), 1270.183 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.761 Gbps (per GPU), 1270.087 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.764 Gbps (per GPU), 1270.111 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.596 Gbps (per GPU), 1268.766 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.611 Gbps (per GPU), 1268.886 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.614 Gbps (per GPU), 1268.910 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.303 Gbps (per GPU), 1266.420 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 104.861 Gbps (per GPU), 838.888 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.860 Gbps (per GPU), 838.882 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.859 Gbps (per GPU), 838.876 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.855 Gbps (per GPU), 838.840 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.868 Gbps (per GPU), 838.945 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.857 Gbps (per GPU), 838.854 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.862 Gbps (per GPU), 838.896 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.769 Gbps (per GPU), 838.155 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 37.583 Gbps (per GPU), 300.662 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.582 Gbps (per GPU), 300.658 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.581 Gbps (per GPU), 300.649 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.581 Gbps (per GPU), 300.650 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.581 Gbps (per GPU), 300.646 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.581 Gbps (per GPU), 300.646 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.580 Gbps (per GPU), 300.637 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 37.580 Gbps (per GPU), 300.640 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  0.64ms  0.22ms  0.15ms  4.21  1.02K  0.02M
 chk_1  0.66ms  0.22ms  0.15ms  4.38  1.13K  0.01M
 chk_2  0.66ms  0.22ms  0.15ms  4.36  1.11K  0.01M
 chk_3  0.64ms  0.22ms  0.15ms  4.20  1.02K  0.02M
 chk_4  0.64ms  0.22ms  0.15ms  4.23  1.05K  0.02M
 chk_5  0.68ms  0.22ms  0.15ms  4.54  1.18K  0.01M
 chk_6  0.67ms  0.22ms  0.15ms  4.46  1.09K  0.02M
 chk_7  0.69ms  0.22ms  0.15ms  4.58  1.08K  0.02M
 chk_8  0.67ms  0.22ms  0.15ms  4.43  1.08K  0.01M
 chk_9  0.66ms  0.22ms  0.15ms  4.37  1.06K  0.02M
chk_10  0.66ms  0.22ms  0.15ms  4.39  1.04K  0.02M
chk_11  0.67ms  0.22ms  0.15ms  4.44  1.11K  0.01M
chk_12  0.67ms  0.22ms  0.15ms  4.42  1.11K  0.01M
chk_13  0.65ms  0.22ms  0.15ms  4.24  1.01K  0.02M
chk_14  0.67ms  0.22ms  0.15ms  4.38  1.09K  0.01M
chk_15  0.65ms  0.22ms  0.15ms  4.27  1.03K  0.02M
chk_16  0.63ms  0.22ms  0.15ms  4.12  0.98K  0.02M
chk_17  0.67ms  0.22ms  0.15ms  4.47  1.09K  0.01M
chk_18  0.65ms  0.22ms  0.15ms  4.26  1.04K  0.02M
chk_19  0.67ms  0.22ms  0.15ms  4.44  1.12K  0.01M
chk_20  0.67ms  0.22ms  0.15ms  4.45  1.13K  0.01M
chk_21  0.65ms  0.22ms  0.15ms  4.30  1.05K  0.02M
chk_22  0.67ms  0.22ms  0.15ms  4.49  1.11K  0.01M
chk_23  0.67ms  0.22ms  0.15ms  4.48  1.10K  0.01M
chk_24  0.65ms  0.22ms  0.15ms  4.26  1.02K  0.02M
chk_25  0.64ms  0.22ms  0.15ms  4.20  1.01K  0.02M
chk_26  0.67ms  0.22ms  0.15ms  4.44  1.12K  0.01M
chk_27  0.66ms  0.22ms  0.15ms  4.35  1.08K  0.02M
chk_28  0.66ms  0.22ms  0.15ms  4.27  1.07K  0.02M
chk_29  0.67ms  0.22ms  0.15ms  4.46  1.11K  0.01M
chk_30  0.67ms  0.22ms  0.15ms  4.35  1.10K  0.01M
chk_31  0.69ms  0.22ms  0.15ms  4.57  1.16K  0.01M
   Avg  0.66  0.22  0.15
   Max  0.69  0.22  0.15
   Min  0.63  0.22  0.15
 Ratio  1.10  1.04  1.03
   Var  0.00  0.00  0.00
Profiling takes 0.486 s
*** Node 0, starting model training...
Num Stages: 4 / 4
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 0 owns the model-level partition [0, 41)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 17213
*** Node 2, starting model training...
Num Stages: 4 / 4
Node 2, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 2, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 2 owns the model-level partition [41, 81)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 17213
*** Node 3, starting model training...
Num Stages: 4 / 4
Node 3, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 3, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 3 owns the model-level partition [41, 81)
*** Node 3, constructing the helper classes...
*** Node 1, starting model training...
Num Stages: 4 / 4
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 1 owns the model-level partition [0, 41)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 17213, Num Local Vertices: 17280
Node 3, Local Vertex Begin: 17213, Num Local Vertices: 17280
*** Node 4, starting model training...
Num Stages: 4 / 4
Node 4, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 4, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 4 owns the model-level partition [81, 121)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 17213
*** Node 5, starting model training...
Num Stages: 4 / 4
Node 5, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 5, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 5 owns the model-level partition [81, 121)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 17213, Num Local Vertices: 17280
*** Node 6, starting model training...
Num Stages: 4 / 4
Node 6, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [121, 160)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 0, Num Local Vertices: 17213
*** Node 7, starting model training...
Num Stages: 4 / 4
Node 7, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [121, 160)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 17213, Num Local Vertices: 17280
*** Node 0, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 41)...
+++++++++ Node 3 initializing the weights for op[41, 81)...
+++++++++ Node 4 initializing the weights for op[81, 121)...
+++++++++ Node 5 initializing the weights for op[81, 121)...
+++++++++ Node 7 initializing the weights for op[121, 160)...
+++++++++ Node 6 initializing the weights for op[121, 160)...
+++++++++ Node 2 initializing the weights for op[41, 81)...
+++++++++ Node 1 initializing the weights for op[0, 41)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 89728
Node 0, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 1.6094	TrainAcc 0.1700	ValidAcc 0.1380	TestAcc 0.1340	BestValid 0.1380
	Epoch 10:	Loss 1.6094	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1380
	Epoch 20:	Loss 1.5497	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1380
	Epoch 30:	Loss 1.6020	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1380
	Epoch 40:	Loss 1.6032	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1380
	Epoch 50:	Loss 1.6029	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1380
	Epoch 60:	Loss 1.5944	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1380
	Epoch 70:	Loss 1.5906	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1380
	Epoch 80:	Loss 1.5517	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1380
	Epoch 90:	Loss 1.5168	TrainAcc 0.2000	ValidAcc 0.1860	TestAcc 0.1750	BestValid 0.1860
	Epoch 100:	Loss 1.5085	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 110:	Loss 1.4713	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 120:	Loss 1.4660	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 130:	Loss 1.4457	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 140:	Loss 1.4352	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 150:	Loss 1.4049	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 160:	Loss 1.4043	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 170:	Loss 1.4004	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 180:	Loss 1.3931	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 190:	Loss 1.3987	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 200:	Loss 1.3773	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 210:	Loss 1.3681	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 220:	Loss 1.3626	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 230:	Loss 1.3659	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 240:	Loss 1.3497	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 250:	Loss 1.3561	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 260:	Loss 1.3482	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 270:	Loss 1.3402	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 280:	Loss 1.3571	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 290:	Loss 1.3402	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
	Epoch 300:	Loss 1.3458	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1860
****** Epoch Time (Excluding Evaluation Cost): 0.077 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 11.395 ms (Max: 12.366, Min: 10.097, Sum: 91.163)
Cluster-Wide Average, Compute: 34.014 ms (Max: 41.367, Min: 30.218, Sum: 272.114)
Cluster-Wide Average, Communication-Layer: 3.070 ms (Max: 3.620, Min: 2.580, Sum: 24.556)
Cluster-Wide Average, Bubble-Imbalance: 6.710 ms (Max: 10.188, Min: 0.626, Sum: 53.682)
Cluster-Wide Average, Communication-Graph: 18.401 ms (Max: 19.495, Min: 17.707, Sum: 147.211)
Cluster-Wide Average, Optimization: 1.764 ms (Max: 2.417, Min: 1.476, Sum: 14.113)
Cluster-Wide Average, Others: 1.248 ms (Max: 1.885, Min: 0.691, Sum: 9.988)
****** Breakdown Sum: 76.603 ms ******
Cluster-Wide Average, GPU Memory Consumption: 2.792 GB (Max: 4.110, Min: 2.333, Sum: 22.333)
Cluster-Wide Average, Graph-Level Communication Throughput: 47.806 Gbps (Max: 51.473, Min: 44.976, Sum: 382.445)
Cluster-Wide Average, Layer-Level Communication Throughput: 26.225 Gbps (Max: 32.088, Min: 20.545, Sum: 209.797)
Layer-level communication (cluster-wide, per-epoch): 0.077 GB
Graph-level communication (cluster-wide, per-epoch): 0.535 GB
Weight-sync communication (cluster-wide, per-epoch): 0.009 GB
Total communication (cluster-wide, per-epoch): 0.620 GB
****** Accuracy Results ******
Highest valid_acc: 0.1860
Target test_acc: 0.1750
Epoch to reach the target acc: 89
[MPI Rank 0] Success 
[MPI Rank 1] Success 
[MPI Rank 4] Success 
[MPI Rank 2] Success 
[MPI Rank 5] Success 
[MPI Rank 3] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
