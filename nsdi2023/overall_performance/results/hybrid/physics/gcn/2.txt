Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
Initialized node 2 on machine gnerv7
DONE MPI INIT
Initialized node 3 on machine gnerv7
DONE MPI INIT
Initialized node 1 on machine gnerv7
DONE MPI INIT
Initialized node 0 on machine gnerv7
DONE MPI INITDONE MPI INIT
Initialized node 7 on machine gnerv8
DONE MPI INIT

Initialized node 6 on machine gnerv8
Initialized node 5 on machine gnerv8
DONE MPI INIT
Initialized node 4 on machine gnerv8
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.013 seconds.
Building the CSC structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
Building the CSC structure...
        It takes 0.013 seconds.
Building the CSC structure...
        It takes 0.014 seconds.
Building the CSC structure...
        It takes 0.011 seconds.
        It takes 0.011 seconds.
        It takes 0.011 seconds.
        It takes 0.012 seconds.
        It takes 0.011 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.014 seconds.
Building the Feature Vector...
        It takes 0.014 seconds.
Building the Feature Vector...
        It takes 0.015 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.467 seconds.
Building the Label Vector...
        It takes 0.002 seconds.
        It takes 0.503 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.510 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.512 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.594 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.624 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/pipeline_parallel_datasets/physics/32_parts
The number of GCN layers: 32
The number of hidden units: 100
The number of training epoches: 300
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 2
Number of classes: 5
Number of feature dimensions: 8415
Number of vertices: 34493
Number of GPUs: 8
        It takes 0.627 seconds.
Building the Label Vector...
        It takes 0.628 seconds.
Building the Label Vector...
        It takes 0.003 seconds.
        It takes 0.007 seconds.
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
34493, 530417, 530417
Number of vertices per chunk: 1078
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
train nodes 100, valid nodes 500, test nodes 1000
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 1025) 1-[1025, 2154) 2-[2154, 3262) 3-[3262, 4284) 4-[4284, 5334) 5-[5334, 6511) 6-[6511, 7597) 7-[7597, 8680) 8-[8680, 9764) ... 31-[33337, 34493)
csr in-out ready !Start Cost Model Initialization...
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
The layer-level communication performance: 60.467 Gbps (per GPU), 483.734 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.159 Gbps (per GPU), 481.274 Gbps (aggregated)
The layer-level communication performance: 60.157 Gbps (per GPU), 481.257 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.901 Gbps (per GPU), 479.206 Gbps (aggregated)
The layer-level communication performance: 59.870 Gbps (per GPU), 478.962 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.650 Gbps (per GPU), 477.202 Gbps (aggregated)
The layer-level communication performance: 59.598 Gbps (per GPU), 476.781 Gbps (aggregated)
The layer-level communication performance: 59.571 Gbps (per GPU), 476.567 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 158.611 Gbps (per GPU), 1268.889 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.593 Gbps (per GPU), 1268.742 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.617 Gbps (per GPU), 1268.934 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.590 Gbps (per GPU), 1268.719 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.614 Gbps (per GPU), 1268.909 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.461 Gbps (per GPU), 1267.688 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.611 Gbps (per GPU), 1268.886 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 158.533 Gbps (per GPU), 1268.263 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 105.204 Gbps (per GPU), 841.631 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.201 Gbps (per GPU), 841.610 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.204 Gbps (per GPU), 841.631 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.202 Gbps (per GPU), 841.617 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.199 Gbps (per GPU), 841.589 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.205 Gbps (per GPU), 841.638 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.180 Gbps (per GPU), 841.441 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 105.201 Gbps (per GPU), 841.611 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 34.008 Gbps (per GPU), 272.067 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.008 Gbps (per GPU), 272.063 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.008 Gbps (per GPU), 272.068 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.008 Gbps (per GPU), 272.066 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.006 Gbps (per GPU), 272.050 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.008 Gbps (per GPU), 272.065 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.006 Gbps (per GPU), 272.046 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 34.006 Gbps (per GPU), 272.046 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  0.64ms  0.22ms  0.15ms  4.16  1.02K  0.02M
 chk_1  0.67ms  0.22ms  0.15ms  4.32  1.13K  0.01M
 chk_2  0.66ms  0.23ms  0.15ms  4.31  1.11K  0.01M
 chk_3  0.64ms  0.22ms  0.15ms  4.15  1.02K  0.02M
 chk_4  0.65ms  0.22ms  0.15ms  4.22  1.05K  0.02M
 chk_5  0.68ms  0.22ms  0.15ms  4.47  1.18K  0.01M
 chk_6  0.68ms  0.22ms  0.15ms  4.46  1.09K  0.02M
 chk_7  0.67ms  0.22ms  0.15ms  4.40  1.08K  0.02M
 chk_8  0.67ms  0.22ms  0.15ms  4.40  1.08K  0.01M
 chk_9  0.66ms  0.22ms  0.15ms  4.35  1.06K  0.02M
chk_10  0.66ms  0.22ms  0.15ms  4.32  1.04K  0.02M
chk_11  0.67ms  0.22ms  0.15ms  4.39  1.11K  0.01M
chk_12  0.67ms  0.23ms  0.15ms  4.38  1.11K  0.01M
chk_13  0.64ms  0.22ms  0.15ms  4.19  1.01K  0.02M
chk_14  0.67ms  0.22ms  0.15ms  4.33  1.09K  0.01M
chk_15  0.65ms  0.22ms  0.15ms  4.24  1.03K  0.02M
chk_16  0.63ms  0.22ms  0.15ms  4.07  0.98K  0.02M
chk_17  0.67ms  0.22ms  0.15ms  4.41  1.09K  0.01M
chk_18  0.66ms  0.22ms  0.15ms  4.24  1.04K  0.02M
chk_19  0.67ms  0.22ms  0.15ms  4.40  1.12K  0.01M
chk_20  0.67ms  0.22ms  0.15ms  4.44  1.13K  0.01M
chk_21  0.65ms  0.22ms  0.15ms  4.30  1.05K  0.02M
chk_22  0.67ms  0.22ms  0.15ms  4.44  1.11K  0.01M
chk_23  0.67ms  0.22ms  0.15ms  4.45  1.10K  0.01M
chk_24  0.65ms  0.22ms  0.15ms  4.20  1.02K  0.02M
chk_25  0.64ms  0.22ms  0.15ms  4.17  1.01K  0.02M
chk_26  0.67ms  0.22ms  0.15ms  4.40  1.12K  0.01M
chk_27  0.66ms  0.22ms  0.15ms  4.30  1.08K  0.02M
chk_28  1.19ms  0.22ms  0.16ms  7.67  1.07K  0.02M
chk_29  0.67ms  0.22ms  0.15ms  4.43  1.11K  0.01M
chk_30  0.67ms  0.22ms  0.15ms  4.33  1.10K  0.01M
chk_31  0.68ms  0.22ms  0.15ms  4.53  1.16K  0.01M
   Avg  0.68  0.22  0.15
   Max  1.19  0.23  0.16
   Min  0.63  0.22  0.15
 Ratio  1.90  1.05  1.03
   Var  0.01  0.00  0.00
Profiling takes 0.482 s
*** Node 0, starting model training...
Num Stages: 4 / 4
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 0 owns the model-level partition [0, 41)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 17213
*** Node 2, starting model training...
Num Stages: 4 / 4
Node 2, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 2, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 2 owns the model-level partition [41, 81)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 17213
*** Node 3, starting model training...
Num Stages: 4 / 4
Node 3, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 3, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 3 owns the model-level partition [41, 81)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 17213, Num Local Vertices: 17280
*** Node 1, starting model training...
Num Stages: 4 / 4
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 1 owns the model-level partition [0, 41)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 17213, Num Local Vertices: 17280
*** Node 4, starting model training...
Num Stages: 4 / 4
*** Node 5, starting model training...
Num Stages: 4 / 4
Node 5, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 5, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 5 owns the model-level partition [81, 121)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 17213, Num Local Vertices: 17280
*** Node 6, starting model training...
Num Stages: 4 / 4
Node 6, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [121, 160)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 0, Num Local Vertices: 17213
*** Node 7, starting model training...
Num Stages: 4 / 4
Node 7, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [121, 160)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 17213, Num Local Vertices: 17280
Node 4, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 4, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 4 owns the model-level partition [81, 121)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 17213
*** Node 1, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
+++++++++ Node 2 initializing the weights for op[41, 81)...
+++++++++ Node 0 initializing the weights for op[0, 41)...
+++++++++ Node 1 initializing the weights for op[0, 41)...
+++++++++ Node 3 initializing the weights for op[41, 81)...
+++++++++ Node 7 initializing the weights for op[121, 160)...
+++++++++ Node 5 initializing the weights for op[81, 121)...
+++++++++ Node 6 initializing the weights for op[121, 160)...
+++++++++ Node 4 initializing the weights for op[81, 121)...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be received across the graph boundary.
The number of mirror vertices: 89728
Node 0, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 4, starting task scheduling...
*** Node 0, starting task scheduling...



*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 1.6094	TrainAcc 0.1800	ValidAcc 0.1640	TestAcc 0.1600	BestValid 0.1640
	Epoch 10:	Loss 1.6094	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 20:	Loss 1.6085	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 30:	Loss 1.4631	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 40:	Loss 1.4715	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 50:	Loss 1.4654	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 60:	Loss 1.4475	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 70:	Loss 1.4395	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 80:	Loss 1.4201	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 90:	Loss 1.4186	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 100:	Loss 1.4212	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 110:	Loss 1.4070	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 120:	Loss 1.3957	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 130:	Loss 1.3906	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 140:	Loss 1.3669	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 150:	Loss 1.3609	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 160:	Loss 1.3539	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 170:	Loss 1.3445	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 180:	Loss 1.3440	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 190:	Loss 1.3368	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 200:	Loss 1.3374	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 210:	Loss 1.3442	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 220:	Loss 1.3265	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 230:	Loss 1.3257	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 240:	Loss 1.3345	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 250:	Loss 1.3389	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 260:	Loss 1.3472	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 270:	Loss 1.3344	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 280:	Loss 1.3515	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 290:	Loss 1.3427	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
	Epoch 300:	Loss 1.3281	TrainAcc 0.2000	ValidAcc 0.0840	TestAcc 0.0920	BestValid 0.1640
****** Epoch Time (Excluding Evaluation Cost): 0.077 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 11.480 ms (Max: 12.375, Min: 10.222, Sum: 91.838)
Cluster-Wide Average, Compute: 34.183 ms (Max: 41.309, Min: 30.364, Sum: 273.468)
Cluster-Wide Average, Communication-Layer: 3.074 ms (Max: 3.596, Min: 2.583, Sum: 24.594)
Cluster-Wide Average, Bubble-Imbalance: 6.568 ms (Max: 9.972, Min: 0.742, Sum: 52.547)
Cluster-Wide Average, Communication-Graph: 18.429 ms (Max: 18.963, Min: 17.862, Sum: 147.431)
Cluster-Wide Average, Optimization: 1.801 ms (Max: 2.587, Min: 1.393, Sum: 14.410)
Cluster-Wide Average, Others: 1.350 ms (Max: 1.873, Min: 0.691, Sum: 10.801)
****** Breakdown Sum: 76.886 ms ******
Cluster-Wide Average, GPU Memory Consumption: 2.792 GB (Max: 4.110, Min: 2.333, Sum: 22.333)
Cluster-Wide Average, Graph-Level Communication Throughput: 47.853 Gbps (Max: 51.319, Min: 45.694, Sum: 382.828)
Cluster-Wide Average, Layer-Level Communication Throughput: 26.186 Gbps (Max: 31.982, Min: 20.407, Sum: 209.488)
Layer-level communication (cluster-wide, per-epoch): 0.077 GB
Graph-level communication (cluster-wide, per-epoch): 0.535 GB
Weight-sync communication (cluster-wide, per-epoch): 0.009 GB
Total communication (cluster-wide, per-epoch): 0.620 GB
****** Accuracy Results ******
Highest valid_acc: 0.1640
Target test_acc: 0.1600
Epoch to reach the target acc: 0
[MPI Rank 0] Success 
[MPI Rank 1] Success 
[MPI Rank 2] Success 
[MPI Rank 3] Success 
[MPI Rank 4] Success 
[MPI Rank 5] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
