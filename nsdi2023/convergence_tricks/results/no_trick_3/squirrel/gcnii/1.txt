Initialized node 4 on machine gnerv3
Initialized node 5 on machine gnerv3
Initialized node 6 on machine gnerv3
Initialized node 7 on machine gnerv3
Initialized node 1 on machine gnerv2
Initialized node 3 on machine gnerv2
Initialized node 0 on machine gnerv2
Initialized node 2 on machine gnerv2
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.009 seconds.
Building the CSC structure...
        It takes 0.007 seconds.
Building the CSC structure...
        It takes 0.008 seconds.
Building the CSC structure...
        It takes 0.010 seconds.
Building the CSC structure...
        It takes 0.012 seconds.
Building the CSC structure...
        It takes 0.012 seconds.
Building the CSC structure...
        It takes 0.012 seconds.
Building the CSC structure...
        It takes 0.014 seconds.
Building the CSC structure...
        It takes 0.006 seconds.
        It takes 0.008 seconds.
        It takes 0.006 seconds.
        It takes 0.008 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.008 seconds.
        It takes 0.011 seconds.
        It takes 0.012 seconds.
        It takes 0.012 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.022 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.022 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/pipeline_parallel_datasets/squirrel/32_parts
The number of GCNII layers: 32
The number of hidden units: 1000
The number of training epoches: 5000
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights
The random seed: 1
GCN hyper-parameter alpha: 0.100000
GCN hyper-parameter lambda: 0.500000
Number of classes: 5
Number of feature dimensions: 2089
Number of vertices: 5201
Number of GPUs: 8
        It takes 0.025 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.023 seconds.
        It takes 0.024 seconds.
Building the Label Vector...
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.000 seconds.
        It takes 0.024 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.026 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
        It takes 0.025 seconds.
Building the Label Vector...
        It takes 0.000 seconds.
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 163
5201, 401907, 401907
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Number of vertices per chunk: 163
csr in-out ready !Start Cost Model Initialization...
5201, 401907, 401907
Number of vertices per chunk: 163
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
5201, 401907, 401907
Number of vertices per chunk: 163
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
train nodes 2496, valid nodes 1664, test nodes 1041
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 80) 1-[80, 237) 2-[237, 364) 3-[364, 546) 4-[546, 693) 5-[693, 945) 6-[945, 1041) 7-[1041, 1148) 8-[1148, 1376) ... 31-[5004, 5201)
5201, 401907, 401907
Number of vertices per chunk: 163
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
5201, 401907, 401907
Number of vertices per chunk: 163
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 163
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
5201, 401907, 401907
Number of vertices per chunk: 163
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 56.933 Gbps (per GPU), 455.461 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 56.673 Gbps (per GPU), 453.383 Gbps (aggregated)
The layer-level communication performance: 56.665 Gbps (per GPU), 453.323 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 56.449 Gbps (per GPU), 451.594 Gbps (aggregated)
The layer-level communication performance: 56.419 Gbps (per GPU), 451.354 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 56.234 Gbps (per GPU), 449.875 Gbps (aggregated)
The layer-level communication performance: 56.191 Gbps (per GPU), 449.530 Gbps (aggregated)
The layer-level communication performance: 56.163 Gbps (per GPU), 449.302 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 156.820 Gbps (per GPU), 1254.559 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.805 Gbps (per GPU), 1254.442 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.773 Gbps (per GPU), 1254.184 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.808 Gbps (per GPU), 1254.465 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.826 Gbps (per GPU), 1254.606 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.803 Gbps (per GPU), 1254.423 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.764 Gbps (per GPU), 1254.113 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.796 Gbps (per GPU), 1254.371 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 102.649 Gbps (per GPU), 821.191 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.646 Gbps (per GPU), 821.165 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.649 Gbps (per GPU), 821.191 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.645 Gbps (per GPU), 821.158 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.650 Gbps (per GPU), 821.199 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.646 Gbps (per GPU), 821.165 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.652 Gbps (per GPU), 821.218 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 102.650 Gbps (per GPU), 821.198 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 30.324 Gbps (per GPU), 242.591 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.328 Gbps (per GPU), 242.627 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.323 Gbps (per GPU), 242.581 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.326 Gbps (per GPU), 242.606 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.324 Gbps (per GPU), 242.589 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.326 Gbps (per GPU), 242.605 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.321 Gbps (per GPU), 242.565 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.325 Gbps (per GPU), 242.596 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  0.34ms  0.41ms  0.54ms  1.56  0.08K  0.02M
 chk_1  0.44ms  0.44ms  0.58ms  1.33  0.16K  0.01M
 chk_2  0.39ms  0.42ms  0.55ms  1.41  0.13K  0.01M
 chk_3  0.45ms  0.48ms  0.61ms  1.36  0.18K  0.01M
 chk_4  0.43ms  0.44ms  0.58ms  1.34  0.15K  0.01M
 chk_5  0.51ms  0.49ms  0.62ms  1.28  0.25K  0.01M
 chk_6  0.35ms  0.41ms  0.54ms  1.55  0.10K  0.02M
 chk_7  0.39ms  0.43ms  0.56ms  1.45  0.11K  0.02M
 chk_8  0.49ms  0.48ms  0.62ms  1.28  0.23K  0.01M
 chk_9  0.42ms  0.44ms  0.57ms  1.35  0.14K  0.01M
chk_10  0.49ms  0.48ms  0.61ms  1.29  0.20K  0.01M
chk_11  0.35ms  0.41ms  0.54ms  1.55  0.09K  0.02M
chk_12  0.43ms  0.44ms  0.58ms  1.32  0.16K  0.01M
chk_13  0.44ms  0.44ms  0.57ms  1.32  0.16K  0.01M
chk_14  0.43ms  0.44ms  0.57ms  1.34  0.14K  0.01M
chk_15  0.50ms  0.48ms  0.62ms  1.28  0.21K  0.01M
chk_16  0.45ms  0.48ms  0.61ms  1.37  0.18K  0.01M
chk_17  0.56ms  0.48ms  0.62ms  1.28  0.29K  0.01M
chk_18  0.63ms  0.49ms  0.63ms  1.28  0.31K  0.00M
chk_19  0.39ms  0.42ms  0.55ms  1.42  0.13K  0.01M
chk_20  0.39ms  0.42ms  0.55ms  1.42  0.13K  0.01M
chk_21  0.45ms  0.48ms  0.61ms  1.36  0.18K  0.01M
chk_22  0.39ms  0.41ms  0.55ms  1.41  0.13K  0.01M
chk_23  0.44ms  0.47ms  0.61ms  1.38  0.16K  0.01M
chk_24  0.37ms  0.42ms  0.54ms  1.47  0.09K  0.02M
chk_25  0.37ms  0.42ms  0.55ms  1.48  0.09K  0.02M
chk_26  0.45ms  0.48ms  0.61ms  1.36  0.18K  0.01M
chk_27  0.39ms  0.42ms  0.55ms  1.42  0.13K  0.01M
chk_28  0.45ms  0.47ms  0.61ms  1.36  0.17K  0.01M
chk_29  0.43ms  0.44ms  0.58ms  1.34  0.15K  0.01M
chk_30  0.50ms  0.48ms  0.62ms  1.28  0.24K  0.01M
chk_31  0.49ms  0.47ms  0.61ms  1.29  0.20K  0.01M
   Avg  0.44  0.45  0.58
   Max  0.63  0.49  0.63
   Min  0.34  0.41  0.54
 Ratio  1.81  1.19  1.16
   Var  0.00  0.00  0.00
Profiling takes 0.682 s
*** Node 0, starting model training...
Num Stages: 8 / 8
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 0 owns the model-level partition [0, 34)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 5201
*** Node 4, starting model training...
Num Stages: 8 / 8
Node 4, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 4, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 4 owns the model-level partition [118, 146)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 5201
*** Node 1, starting model training...
Num Stages: 8 / 8
Node 1, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 1, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 1 owns the model-level partition [34, 62)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 0, Num Local Vertices: 5201
*** Node 5, starting model training...
Num Stages: 8 / 8
Node 5, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 5, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 5 owns the model-level partition [146, 174)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 0, Num Local Vertices: 5201
*** Node 2, starting model training...
Num Stages: 8 / 8
Node 2, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 2, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 2 owns the model-level partition [62, 90)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 5201
*** Node 6, starting model training...
Num Stages: 8 / 8
Node 6, Pipeline Input Tensor: OPERATOR_DROPOUT
*** Node 3, starting model training...
Num Stages: 8 / 8
Node 3, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 3, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 3 owns the model-level partition [90, 118)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 0, Num Local Vertices: 5201
*** Node 7, starting model training...
Num Stages: 8 / 8
Node 7, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [202, 233)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 0, Num Local Vertices: 5201
Node 6, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 6 owns the model-level partition [174, 202)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 0, Num Local Vertices: 5201
*** Node 4, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
+++++++++ Node 2 initializing the weights for op[62, 90)...
+++++++++ Node 5 initializing the weights for op[146, 174)...
+++++++++ Node 0 initializing the weights for op[0, 34)...
+++++++++ Node 1 initializing the weights for op[34, 62)...
+++++++++ Node 3 initializing the weights for op[90, 118)...
+++++++++ Node 4 initializing the weights for op[118, 146)...
+++++++++ Node 7 initializing the weights for op[202, 233)...
+++++++++ Node 6 initializing the weights for op[174, 202)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be received across the graph boundary.
The number of mirror vertices: 0
Node 0, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...
*** Node 4, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 1, starting task scheduling...
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000



The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 1.7465	TrainAcc 0.2007	ValidAcc 0.2007	TestAcc 0.1988	BestValid 0.2007
	Epoch 50:	Loss 1.4638	TrainAcc 0.4391	ValidAcc 0.2957	TestAcc 0.3074	BestValid 0.2957
	Epoch 100:	Loss 1.3410	TrainAcc 0.5084	ValidAcc 0.3149	TestAcc 0.3093	BestValid 0.3149
	Epoch 150:	Loss 1.2479	TrainAcc 0.5857	ValidAcc 0.3005	TestAcc 0.3093	BestValid 0.3149
	Epoch 200:	Loss 1.1572	TrainAcc 0.6851	ValidAcc 0.3305	TestAcc 0.3333	BestValid 0.3305
	Epoch 250:	Loss 1.1516	TrainAcc 0.6991	ValidAcc 0.3245	TestAcc 0.3314	BestValid 0.3305
	Epoch 300:	Loss 1.0948	TrainAcc 0.7196	ValidAcc 0.3263	TestAcc 0.3228	BestValid 0.3305
	Epoch 350:	Loss 1.0483	TrainAcc 0.7424	ValidAcc 0.3263	TestAcc 0.3285	BestValid 0.3305
	Epoch 400:	Loss 1.0257	TrainAcc 0.7716	ValidAcc 0.3329	TestAcc 0.3266	BestValid 0.3329
	Epoch 450:	Loss 0.9912	TrainAcc 0.7788	ValidAcc 0.3275	TestAcc 0.3381	BestValid 0.3329
	Epoch 500:	Loss 0.9649	TrainAcc 0.7977	ValidAcc 0.3305	TestAcc 0.3468	BestValid 0.3329
	Epoch 550:	Loss 0.9426	TrainAcc 0.8129	ValidAcc 0.3359	TestAcc 0.3362	BestValid 0.3359
	Epoch 600:	Loss 0.9014	TrainAcc 0.8061	ValidAcc 0.3395	TestAcc 0.3381	BestValid 0.3395
	Epoch 650:	Loss 0.9155	TrainAcc 0.8061	ValidAcc 0.3287	TestAcc 0.3218	BestValid 0.3395
	Epoch 700:	Loss 0.8988	TrainAcc 0.8137	ValidAcc 0.3299	TestAcc 0.3295	BestValid 0.3395
	Epoch 750:	Loss 0.8853	TrainAcc 0.8478	ValidAcc 0.3377	TestAcc 0.3401	BestValid 0.3395
	Epoch 800:	Loss 0.8160	TrainAcc 0.8526	ValidAcc 0.3419	TestAcc 0.3372	BestValid 0.3419
	Epoch 850:	Loss 0.8663	TrainAcc 0.8598	ValidAcc 0.3444	TestAcc 0.3314	BestValid 0.3444
	Epoch 900:	Loss 0.8750	TrainAcc 0.8638	ValidAcc 0.3401	TestAcc 0.3391	BestValid 0.3444
	Epoch 950:	Loss 0.8129	TrainAcc 0.8678	ValidAcc 0.3353	TestAcc 0.3439	BestValid 0.3444
	Epoch 1000:	Loss 0.8472	TrainAcc 0.8778	ValidAcc 0.3438	TestAcc 0.3439	BestValid 0.3444
	Epoch 1050:	Loss 0.8106	TrainAcc 0.8834	ValidAcc 0.3365	TestAcc 0.3391	BestValid 0.3444
	Epoch 1100:	Loss 0.7381	TrainAcc 0.8818	ValidAcc 0.3419	TestAcc 0.3410	BestValid 0.3444
	Epoch 1150:	Loss 0.7699	TrainAcc 0.8954	ValidAcc 0.3456	TestAcc 0.3324	BestValid 0.3456
	Epoch 1200:	Loss 0.7399	TrainAcc 0.8986	ValidAcc 0.3486	TestAcc 0.3362	BestValid 0.3486
	Epoch 1250:	Loss 0.7563	TrainAcc 0.8942	ValidAcc 0.3431	TestAcc 0.3372	BestValid 0.3486
	Epoch 1300:	Loss 0.7268	TrainAcc 0.9058	ValidAcc 0.3510	TestAcc 0.3372	BestValid 0.3510
	Epoch 1350:	Loss 0.7358	TrainAcc 0.9091	ValidAcc 0.3480	TestAcc 0.3506	BestValid 0.3510
	Epoch 1400:	Loss 0.7002	TrainAcc 0.9171	ValidAcc 0.3492	TestAcc 0.3420	BestValid 0.3510
	Epoch 1450:	Loss 0.6684	TrainAcc 0.9115	ValidAcc 0.3492	TestAcc 0.3487	BestValid 0.3510
	Epoch 1500:	Loss 0.6896	TrainAcc 0.9223	ValidAcc 0.3492	TestAcc 0.3487	BestValid 0.3510
	Epoch 1550:	Loss 0.7003	TrainAcc 0.9211	ValidAcc 0.3468	TestAcc 0.3410	BestValid 0.3510
	Epoch 1600:	Loss 0.6368	TrainAcc 0.9263	ValidAcc 0.3474	TestAcc 0.3449	BestValid 0.3510
	Epoch 1650:	Loss 0.6372	TrainAcc 0.9311	ValidAcc 0.3522	TestAcc 0.3525	BestValid 0.3522
	Epoch 1700:	Loss 0.6515	TrainAcc 0.9315	ValidAcc 0.3504	TestAcc 0.3535	BestValid 0.3522
	Epoch 1750:	Loss 0.6275	TrainAcc 0.9367	ValidAcc 0.3516	TestAcc 0.3525	BestValid 0.3522
	Epoch 1800:	Loss 0.6098	TrainAcc 0.9419	ValidAcc 0.3546	TestAcc 0.3516	BestValid 0.3546
	Epoch 1850:	Loss 0.6338	TrainAcc 0.9447	ValidAcc 0.3540	TestAcc 0.3535	BestValid 0.3546
	Epoch 1900:	Loss 0.5996	TrainAcc 0.9459	ValidAcc 0.3522	TestAcc 0.3554	BestValid 0.3546
	Epoch 1950:	Loss 0.5613	TrainAcc 0.9507	ValidAcc 0.3564	TestAcc 0.3506	BestValid 0.3564
	Epoch 2000:	Loss 0.5775	TrainAcc 0.9475	ValidAcc 0.3552	TestAcc 0.3583	BestValid 0.3564
	Epoch 2050:	Loss 0.5646	TrainAcc 0.9455	ValidAcc 0.3558	TestAcc 0.3545	BestValid 0.3564
	Epoch 2100:	Loss 0.5648	TrainAcc 0.9555	ValidAcc 0.3582	TestAcc 0.3439	BestValid 0.3582
	Epoch 2150:	Loss 0.5691	TrainAcc 0.9543	ValidAcc 0.3540	TestAcc 0.3602	BestValid 0.3582
	Epoch 2200:	Loss 0.5367	TrainAcc 0.9527	ValidAcc 0.3546	TestAcc 0.3622	BestValid 0.3582
	Epoch 2250:	Loss 0.6099	TrainAcc 0.9627	ValidAcc 0.3546	TestAcc 0.3593	BestValid 0.3582
	Epoch 2300:	Loss 0.5085	TrainAcc 0.9563	ValidAcc 0.3576	TestAcc 0.3689	BestValid 0.3582
	Epoch 2350:	Loss 0.4985	TrainAcc 0.9567	ValidAcc 0.3606	TestAcc 0.3622	BestValid 0.3606
	Epoch 2400:	Loss 0.5007	TrainAcc 0.9635	ValidAcc 0.3576	TestAcc 0.3583	BestValid 0.3606
	Epoch 2450:	Loss 0.5069	TrainAcc 0.9619	ValidAcc 0.3588	TestAcc 0.3698	BestValid 0.3606
	Epoch 2500:	Loss 0.4900	TrainAcc 0.9655	ValidAcc 0.3612	TestAcc 0.3737	BestValid 0.3612
	Epoch 2550:	Loss 0.4608	TrainAcc 0.9663	ValidAcc 0.3582	TestAcc 0.3641	BestValid 0.3612
	Epoch 2600:	Loss 0.4632	TrainAcc 0.9647	ValidAcc 0.3582	TestAcc 0.3718	BestValid 0.3612
	Epoch 2650:	Loss 0.4510	TrainAcc 0.9639	ValidAcc 0.3570	TestAcc 0.3727	BestValid 0.3612
	Epoch 2700:	Loss 0.4521	TrainAcc 0.9663	ValidAcc 0.3540	TestAcc 0.3737	BestValid 0.3612
	Epoch 2750:	Loss 0.5038	TrainAcc 0.9688	ValidAcc 0.3576	TestAcc 0.3641	BestValid 0.3612
	Epoch 2800:	Loss 0.4473	TrainAcc 0.9728	ValidAcc 0.3570	TestAcc 0.3698	BestValid 0.3612
	Epoch 2850:	Loss 0.4340	TrainAcc 0.9688	ValidAcc 0.3600	TestAcc 0.3804	BestValid 0.3612
	Epoch 2900:	Loss 0.4535	TrainAcc 0.9704	ValidAcc 0.3624	TestAcc 0.3708	BestValid 0.3624
	Epoch 2950:	Loss 0.4205	TrainAcc 0.9740	ValidAcc 0.3594	TestAcc 0.3746	BestValid 0.3624
	Epoch 3000:	Loss 0.4005	TrainAcc 0.9692	ValidAcc 0.3618	TestAcc 0.3775	BestValid 0.3624
	Epoch 3050:	Loss 0.4405	TrainAcc 0.9752	ValidAcc 0.3606	TestAcc 0.3794	BestValid 0.3624
	Epoch 3100:	Loss 0.4329	TrainAcc 0.9700	ValidAcc 0.3678	TestAcc 0.3804	BestValid 0.3678
	Epoch 3150:	Loss 0.4316	TrainAcc 0.9760	ValidAcc 0.3630	TestAcc 0.3814	BestValid 0.3678
	Epoch 3200:	Loss 0.3830	TrainAcc 0.9736	ValidAcc 0.3660	TestAcc 0.3766	BestValid 0.3678
	Epoch 3250:	Loss 0.3757	TrainAcc 0.9748	ValidAcc 0.3660	TestAcc 0.3814	BestValid 0.3678
	Epoch 3300:	Loss 0.3779	TrainAcc 0.9764	ValidAcc 0.3636	TestAcc 0.3775	BestValid 0.3678
	Epoch 3350:	Loss 0.3796	TrainAcc 0.9760	ValidAcc 0.3666	TestAcc 0.3852	BestValid 0.3678
	Epoch 3400:	Loss 0.3606	TrainAcc 0.9744	ValidAcc 0.3606	TestAcc 0.3775	BestValid 0.3678
	Epoch 3450:	Loss 0.3581	TrainAcc 0.9792	ValidAcc 0.3624	TestAcc 0.3727	BestValid 0.3678
	Epoch 3500:	Loss 0.3681	TrainAcc 0.9796	ValidAcc 0.3666	TestAcc 0.3708	BestValid 0.3678
	Epoch 3550:	Loss 0.3470	TrainAcc 0.9788	ValidAcc 0.3654	TestAcc 0.3794	BestValid 0.3678
	Epoch 3600:	Loss 0.3572	TrainAcc 0.9772	ValidAcc 0.3654	TestAcc 0.3785	BestValid 0.3678
	Epoch 3650:	Loss 0.3478	TrainAcc 0.9804	ValidAcc 0.3666	TestAcc 0.3775	BestValid 0.3678
	Epoch 3700:	Loss 0.3300	TrainAcc 0.9812	ValidAcc 0.3648	TestAcc 0.3756	BestValid 0.3678
	Epoch 3750:	Loss 0.3219	TrainAcc 0.9816	ValidAcc 0.3660	TestAcc 0.3862	BestValid 0.3678
	Epoch 3800:	Loss 0.3205	TrainAcc 0.9796	ValidAcc 0.3690	TestAcc 0.3775	BestValid 0.3690
	Epoch 3850:	Loss 0.3360	TrainAcc 0.9824	ValidAcc 0.3660	TestAcc 0.3794	BestValid 0.3690
	Epoch 3900:	Loss 0.3377	TrainAcc 0.9824	ValidAcc 0.3660	TestAcc 0.3814	BestValid 0.3690
	Epoch 3950:	Loss 0.4070	TrainAcc 0.9828	ValidAcc 0.3654	TestAcc 0.3804	BestValid 0.3690
	Epoch 4000:	Loss 0.3015	TrainAcc 0.9836	ValidAcc 0.3672	TestAcc 0.3718	BestValid 0.3690
	Epoch 4050:	Loss 0.3149	TrainAcc 0.9820	ValidAcc 0.3654	TestAcc 0.3833	BestValid 0.3690
	Epoch 4100:	Loss 0.3404	TrainAcc 0.9828	ValidAcc 0.3714	TestAcc 0.3794	BestValid 0.3714
	Epoch 4150:	Loss 0.3261	TrainAcc 0.9824	ValidAcc 0.3708	TestAcc 0.3785	BestValid 0.3714
	Epoch 4200:	Loss 0.2979	TrainAcc 0.9848	ValidAcc 0.3720	TestAcc 0.3823	BestValid 0.3720
	Epoch 4250:	Loss 0.3056	TrainAcc 0.9812	ValidAcc 0.3714	TestAcc 0.3823	BestValid 0.3720
	Epoch 4300:	Loss 0.3183	TrainAcc 0.9852	ValidAcc 0.3744	TestAcc 0.3775	BestValid 0.3744
	Epoch 4350:	Loss 0.2748	TrainAcc 0.9844	ValidAcc 0.3714	TestAcc 0.3804	BestValid 0.3744
	Epoch 4400:	Loss 0.3009	TrainAcc 0.9844	ValidAcc 0.3654	TestAcc 0.3766	BestValid 0.3744
	Epoch 4450:	Loss 0.3028	TrainAcc 0.9848	ValidAcc 0.3732	TestAcc 0.3833	BestValid 0.3744
	Epoch 4500:	Loss 0.3158	TrainAcc 0.9836	ValidAcc 0.3762	TestAcc 0.3737	BestValid 0.3762
	Epoch 4550:	Loss 0.2743	TrainAcc 0.9864	ValidAcc 0.3690	TestAcc 0.3814	BestValid 0.3762
	Epoch 4600:	Loss 0.3154	TrainAcc 0.9844	ValidAcc 0.3708	TestAcc 0.3852	BestValid 0.3762
	Epoch 4650:	Loss 0.2917	TrainAcc 0.9844	ValidAcc 0.3720	TestAcc 0.3804	BestValid 0.3762
	Epoch 4700:	Loss 0.2743	TrainAcc 0.9876	ValidAcc 0.3732	TestAcc 0.3823	BestValid 0.3762
	Epoch 4750:	Loss 0.2769	TrainAcc 0.9824	ValidAcc 0.3672	TestAcc 0.3814	BestValid 0.3762
	Epoch 4800:	Loss 0.2681	TrainAcc 0.9888	ValidAcc 0.3744	TestAcc 0.3862	BestValid 0.3762
	Epoch 4850:	Loss 0.2571	TrainAcc 0.9860	ValidAcc 0.3720	TestAcc 0.3852	BestValid 0.3762
	Epoch 4900:	Loss 0.2654	TrainAcc 0.9884	ValidAcc 0.3750	TestAcc 0.3862	BestValid 0.3762
	Epoch 4950:	Loss 0.2718	TrainAcc 0.9860	ValidAcc 0.3744	TestAcc 0.3862	BestValid 0.3762
	Epoch 5000:	Loss 0.2499	TrainAcc 0.9876	ValidAcc 0.3750	TestAcc 0.3794	BestValid 0.3762
****** Epoch Time (Excluding Evaluation Cost): 0.106 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 17.942 ms (Max: 18.896, Min: 16.953, Sum: 143.539)
Cluster-Wide Average, Compute: 62.111 ms (Max: 74.003, Min: 58.707, Sum: 496.889)
Cluster-Wide Average, Communication-Layer: 11.381 ms (Max: 12.691, Min: 9.107, Sum: 91.051)
Cluster-Wide Average, Bubble-Imbalance: 12.012 ms (Max: 14.813, Min: 3.084, Sum: 96.095)
Cluster-Wide Average, Communication-Graph: 0.464 ms (Max: 0.511, Min: 0.418, Sum: 3.712)
Cluster-Wide Average, Optimization: 1.027 ms (Max: 1.454, Min: 0.952, Sum: 8.214)
Cluster-Wide Average, Others: 1.131 ms (Max: 2.027, Min: 0.640, Sum: 9.044)
****** Breakdown Sum: 106.068 ms ******
Cluster-Wide Average, GPU Memory Consumption: 3.080 GB (Max: 4.061, Min: 2.926, Sum: 24.640)
Cluster-Wide Average, Graph-Level Communication Throughput: -nan Gbps (Max: -nan, Min: -nan, Sum: -nan)
Cluster-Wide Average, Layer-Level Communication Throughput: 50.350 Gbps (Max: 59.498, Min: 35.768, Sum: 402.796)
Layer-level communication (cluster-wide, per-epoch): 0.543 GB
Graph-level communication (cluster-wide, per-epoch): 0.000 GB
Weight-sync communication (cluster-wide, per-epoch): 0.000 GB
Total communication (cluster-wide, per-epoch): 0.543 GB
****** Accuracy Results ******
Highest valid_acc: 0.3762
Target test_acc: 0.3737
Epoch to reach the target acc: 4499
[MPI Rank 0] Success 
[MPI Rank 4] Success 
[MPI Rank 1] Success 
[MPI Rank 5] Success 
[MPI Rank 2] Success 
[MPI Rank 6] Success 
[MPI Rank 3] Success 
[MPI Rank 7] Success 
