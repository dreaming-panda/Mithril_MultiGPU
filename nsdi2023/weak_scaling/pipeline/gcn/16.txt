Wed Sep 20 00:13:47 2023       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 515.43.04    Driver Version: 515.43.04    CUDA Version: 11.7     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA RTX A5000    On   | 00000000:01:00.0 Off |                  Off |
| 30%   35C    P8    17W / 230W |      1MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   1  NVIDIA RTX A5000    On   | 00000000:25:00.0 Off |                  Off |
| 30%   33C    P8    18W / 230W |      1MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   2  NVIDIA RTX A5000    On   | 00000000:81:00.0 Off |                  Off |
| 30%   33C    P8    12W / 230W |      1MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   3  NVIDIA RTX A5000    On   | 00000000:C1:00.0 Off |                  Off |
| 30%   31C    P8    17W / 230W |      1MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
[ 15%] Built target context
[ 32%] Built target core
[ 70%] Built target cudahelp
[ 80%] Built target OSDI2023_MULTI_NODES_resgcn_plus
[ 80%] Built target estimate_comm_volume
[ 80%] Built target OSDI2023_MULTI_NODES_resgcn
[ 80%] Built target OSDI2023_MULTI_NODES_gcnii
[ 80%] Built target OSDI2023_MULTI_NODES_graphsage
[100%] Built target OSDI2023_MULTI_NODES_gcn
Running experiments...
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
Initialized node 12 on machine gnerv8
DONE MPI INIT
DONE MPI INIT
Initialized node 15 on machine gnerv8
Initialized node 14 on machine gnerv8
DONE MPI INIT
Initialized node 13 on machine gnerv8
DONE MPI INIT
Initialized node 8 on machine gnerv7
DONE MPI INIT
Initialized node 9 on machine gnerv7
DONE MPI INIT
Initialized node 10 on machine gnerv7
DONE MPI INIT
Initialized node 11 on machine gnerv7
DONE MPI INITDONE MPI INIT
Initialized node 6 on machine gnerv4
DONE MPI INIT
Initialized node 7 on machine gnerv4
DONE MPI INIT
Initialized node 4 on machine gnerv4

Initialized node 5 on machine gnerv4
DONE MPI INIT
DONE MPI INIT
Initialized node 1 on machine gnerv1
DONE MPI INITInitialized node 0 on machine gnerv1

Initialized node 2 on machine gnerv1
DONE MPI INIT
Initialized node 3 on machine gnerv1
Building the CSR structure...
Building the CSR structure...Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...

Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 4.966 seconds.
Building the CSC structure...
        It takes 5.017 seconds.
Building the CSC structure...
        It takes 5.020 seconds.
Building the CSC structure...
        It takes 5.031 seconds.
Building the CSC structure...
        It takes 5.324 seconds.
Building the CSC structure...
        It takes 5.324 seconds.
Building the CSC structure...
        It takes 5.324 seconds.
Building the CSC structure...
        It takes 5.324 seconds.
Building the CSC structure...
        It takes 5.376 seconds.
Building the CSC structure...
        It takes 5.375 seconds.
Building the CSC structure...
        It takes 5.376 seconds.
Building the CSC structure...
        It takes 5.384 seconds.
Building the CSC structure...
        It takes 5.384 seconds.
Building the CSC structure...
        It takes 5.384 seconds.
Building the CSC structure...
        It takes 5.384 seconds.
Building the CSC structure...
        It takes 5.514 seconds.
Building the CSC structure...
        It takes 2.391 seconds.
        It takes 2.408 seconds.
        It takes 2.419 seconds.
        It takes 2.422 seconds.
        It takes 2.713 seconds.
        It takes 2.714 seconds.
        It takes 2.714 seconds.
        It takes 2.715 seconds.
        It takes 2.916 seconds.
        It takes 2.916 seconds.
        It takes 2.916 seconds.
        It takes 2.781 seconds.
Building the Feature Vector...
        It takes 3.007 seconds.
        It takes 3.007 seconds.
        It takes 3.008 seconds.
        It takes 3.008 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 1.406 seconds.
        It takes 1.326 seconds.
        It takes 1.333 seconds.
        It takes 1.332 seconds.
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
        It takes 0.107 seconds.
        It takes 0.107 seconds.
        It takes 0.107 seconds.
        It takes 0.107 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.624 seconds.
        It takes 0.704 seconds.
Building the Label Vector...
Building the Label Vector...
        It takes 0.879 seconds.
        It takes 0.976 seconds.
        It takes 1.047 seconds.
        It takes 1.043 seconds.
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
        It takes 0.050 seconds.
        It takes 0.063 seconds.
        It takes 0.087 seconds.
        It takes 0.087 seconds.
        It takes 0.087 seconds.
        It takes 0.087 seconds.
        It takes 0.332 seconds.
Building the Label Vector...
Building the Feature Vector...
        It takes 0.033 seconds.
        It takes 1.080 seconds.
        It takes 0.471 seconds.
        It takes 0.980 seconds.
        It takes 1.104 seconds.
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
        It takes 0.314 seconds.
Building the Label Vector...
        It takes 0.078 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/weighted_shuffled_partitioned_graphs/reddit/64_parts
The number of GCN layers: 128
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
Number of classes: 41
Number of feature dimensions: 602
Number of vertices: 232965
Number of GPUs: 16
        It takes 0.078 seconds.
        It takes 0.078 seconds.
        It takes 0.079 seconds.
        It takes 0.033 seconds.
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
GPU 8, layer [64, 72)
GPU 9, layer [72, 80)
GPU 10, layer [80, 88)
GPU 11, layer [88, 96)
GPU 12, layer [96, 104)
GPU 13, layer [104, 112)
GPU 14, layer [112, 120)
GPU 15, layer [120, 128)
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
GPU 8, layer [64, 72)
GPU 9, layer [72, 80)
GPU 10, layer [80, 88)
GPU 11, layer [88, 96)
GPU 12, layer [96, 104)
GPU 13, layer [104, 112)
GPU 14, layer [112, 120)
GPU 15, layer [120, 128)
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
GPU 8, layer [64, 72)
GPU 9, layer [72, 80)
GPU 10, layer [80, 88)
GPU 11, layer [88, 96)
GPU 12, layer [96, 104)
GPU 13, layer [104, 112)
GPU 14, layer [112, 120)
GPU 15, layer [120, 128)
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
GPU 8, layer [64, 72)
GPU 9, layer [72, 80)
GPU 10, layer [80, 88)
GPU 11, layer [88, 96)
GPU 12, layer [96, 104)
GPU 13, layer [104, 112)
GPU 14, layer [112, 120)
GPU 15, layer [120, 128)
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
GPU 8, layer [64, 72)
GPU 9, layer [72, 80)
GPU 10, layer [80, 88)
GPU 11, layer [88, 96)
GPU 12, layer [96, 104)
GPU 13, layer [104, 112)
GPU 14, layer [112, 120)
GPU 15, layer [120, 128)
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
GPU 8, layer [64, 72)
GPU 9, layer [72, 80)
GPU 10, layer [80, 88)
GPU 11, layer [88, 96)
GPU 12, layer [96, 104)
GPU 13, layer [104, 112)
GPU 14, layer [112, 120)
GPU 15, layer [120, 128)
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
GPU 8, layer [64, 72)
GPU 9, layer [72, 80)
GPU 10, layer [80, 88)
GPU 11, layer [88, 96)
GPU 12, layer [96, 104)
GPU 13, layer [104, 112)
GPU 14, layer [112, 120)
GPU 15, layer [120, 128)
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
GPU 8, layer [64, 72)
GPU 9, layer [72, 80)
GPU 10, layer [80, 88)
GPU 11, layer [88, 96)
GPU 12, layer [96, 104)
GPU 13, layer [104, 112)
GPU 14, layer [112, 120)
GPU 15, layer [120, 128)
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
GPU 8, layer [64, 72)
GPU 9, layer [72, 80)
GPU 10, layer [80, 88)
GPU 11, layer [88, 96)
GPU 12, layer [96, 104)
GPU 13, layer [104, 112)
GPU 14, layer [112, 120)
GPU 15, layer [120, 128)
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
GPU 8, layer [64, 72)
GPU 9, layer [72, 80)
GPU 10, layer [80, 88)
GPU 11, layer [88, 96)
GPU 12, layer [96, 104)
GPU 13, layer [104, 112)
GPU 14, layer [112, 120)
GPU 15, layer [120, 128)
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
GPU 8, layer [64, 72)
GPU 9, layer [72, 80)
GPU 10, layer [80, 88)
GPU 11, layer [88, 96)
GPU 12, layer [96, 104)
GPU 13, layer [104, 112)
GPU 14, layer [112, 120)
GPU 15, layer [120, 128)
232965, 114848857, 114848857
Number of vertices per chunk: 3641
232965, 114848857, 114848857
232965, 114848857, 114848857
Number of vertices per chunk: 3641
Number of vertices per chunk: 3641
232965, 114848857, 114848857
Number of vertices per chunk: 3641
232965, 114848857, 114848857
Number of vertices per chunk: 3641
train nodes 153431, valid nodes 23831, test nodes 55703
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
GPU 8, layer [64, 72)
GPU 9, layer [72, 80)
GPU 10, layer [80, 88)
GPU 11, layer [88, 96)
GPU 12, layer [96, 104)
GPU 13, layer [104, 112)
GPU 14, layer [112, 120)
GPU 15, layer [120, 128)
Chunks (number of global chunks: 64): 0-[0, 3383) 1-[3383, 7843) 2-[7843, 12526) 3-[12526, 16576) 4-[16576, 20087) 5-[20087, 24086) 6-[24086, 27150) 7-[27150, 31875) 8-[31875, 38059) ... 63-[229059, 232965)
232965, 114848857, 114848857
Number of vertices per chunk: 3641
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
GPU 8, layer [64, 72)
GPU 9, layer [72, 80)
GPU 10, layer [80, 88)
GPU 11, layer [88, 96)
GPU 12, layer [96, 104)
GPU 13, layer [104, 112)
GPU 14, layer [112, 120)
GPU 15, layer [120, 128)
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
GPU 8, layer [64, 72)
GPU 9, layer [72, 80)
GPU 10, layer [80, 88)
GPU 11, layer [88, 96)
GPU 12, layer [96, 104)
GPU 13, layer [104, 112)
GPU 14, layer [112, 120)
GPU 15, layer [120, 128)
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
GPU 8, layer [64, 72)
GPU 9, layer [72, 80)
GPU 10, layer [80, 88)
GPU 11, layer [88, 96)
GPU 12, layer [96, 104)
GPU 13, layer [104, 112)
GPU 14, layer [112, 120)
GPU 15, layer [120, 128)
232965, 114848857, 114848857
Number of vertices per chunk: 3641
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
GPU 8, layer [64, 72)
GPU 9, layer [72, 80)
GPU 10, layer [80, 88)
GPU 11, layer [88, 96)
GPU 12, layer [96, 104)
GPU 13, layer [104, 112)
GPU 14, layer [112, 120)
GPU 15, layer [120, 128)
232965, 114848857, 114848857
Number of vertices per chunk: 3641
232965, 114848857, 114848857
Number of vertices per chunk: 3641
232965, 114848857, 114848857
Number of vertices per chunk: 3641
232965, 114848857, 114848857
Number of vertices per chunk: 3641
232965, 114848857, 114848857
Number of vertices per chunk: 3641
232965, 114848857, 114848857
Number of vertices per chunk: 3641
232965, 114848857, 114848857
Number of vertices per chunk: 3641
232965, 114848857, 114848857
Number of vertices per chunk: 3641
232965, 114848857, 114848857
Number of vertices per chunk: 3641
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 59.650 Gbps (per GPU), 954.395 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.535 Gbps (per GPU), 952.563 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.181 Gbps (per GPU), 946.898 Gbps (aggregated)
The layer-level communication performance: 59.095 Gbps (per GPU), 945.525 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.983 Gbps (per GPU), 943.724 Gbps (aggregated)
The layer-level communication performance: 58.949 Gbps (per GPU), 943.177 Gbps (aggregated)
The layer-level communication performance: 58.893 Gbps (per GPU), 942.285 Gbps (aggregated)
The layer-level communication performance: 58.833 Gbps (per GPU), 941.323 Gbps (aggregated)
The layer-level communication performance: 58.970 Gbps (per GPU), 943.517 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.813 Gbps (per GPU), 941.004 Gbps (aggregated)
The layer-level communication performance: 58.786 Gbps (per GPU), 940.573 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.716 Gbps (per GPU), 939.451 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.659 Gbps (per GPU), 938.540 Gbps (aggregated)
The layer-level communication performance: 58.676 Gbps (per GPU), 938.820 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.542 Gbps (per GPU), 936.669 Gbps (aggregated)
The layer-level communication performance: 58.549 Gbps (per GPU), 936.780 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 151.400 Gbps (per GPU), 2422.402 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 151.405 Gbps (per GPU), 2422.484 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 151.406 Gbps (per GPU), 2422.492 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 151.408 Gbps (per GPU), 2422.528 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 151.400 Gbps (per GPU), 2422.397 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 151.403 Gbps (per GPU), 2422.440 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 151.408 Gbps (per GPU), 2422.529 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 151.411 Gbps (per GPU), 2422.571 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 151.397 Gbps (per GPU), 2422.353 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 151.408 Gbps (per GPU), 2422.522 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 151.408 Gbps (per GPU), 2422.533 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 151.405 Gbps (per GPU), 2422.484 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 151.400 Gbps (per GPU), 2422.397 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 151.411 Gbps (per GPU), 2422.571 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 151.471 Gbps (per GPU), 2423.534 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 151.397 Gbps (per GPU), 2422.353 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 104.193 Gbps (per GPU), 1667.080 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.193 Gbps (per GPU), 1667.080 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.192 Gbps (per GPU), 1667.066 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.195 Gbps (per GPU), 1667.122 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.183 Gbps (per GPU), 1666.928 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.198 Gbps (per GPU), 1667.163 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.195 Gbps (per GPU), 1667.122 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.196 Gbps (per GPU), 1667.135 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.193 Gbps (per GPU), 1667.094 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.196 Gbps (per GPU), 1667.135 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.192 Gbps (per GPU), 1667.066 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.194 Gbps (per GPU), 1667.108 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.194 Gbps (per GPU), 1667.108 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.176 Gbps (per GPU), 1666.818 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.196 Gbps (per GPU), 1667.135 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 104.130 Gbps (per GPU), 1666.087 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 28.497 Gbps (per GPU), 455.945 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.497 Gbps (per GPU), 455.959 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.497 Gbps (per GPU), 455.957 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.497 Gbps (per GPU), 455.948 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.497 Gbps (per GPU), 455.953 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.498 Gbps (per GPU), 455.962 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.498 Gbps (per GPU), 455.961 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.497 Gbps (per GPU), 455.958 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.497 Gbps (per GPU), 455.945 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.497 Gbps (per GPU), 455.952 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.497 Gbps (per GPU), 455.958 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.496 Gbps (per GPU), 455.932 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.496 Gbps (per GPU), 455.932 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.497 Gbps (per GPU), 455.959 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.496 Gbps (per GPU), 455.940 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.494 Gbps (per GPU), 455.904 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
The graph-level communication performance (supernode = 16): 21.522 Gbps (per GPU), 344.354 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.522 Gbps (per GPU), 344.359 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.522 Gbps (per GPU), 344.347 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.523 Gbps (per GPU), 344.363 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.522 Gbps (per GPU), 344.347 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.522 Gbps (per GPU), 344.352 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.522 Gbps (per GPU), 344.357 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.523 Gbps (per GPU), 344.361 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.522 Gbps (per GPU), 344.351 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.522 Gbps (per GPU), 344.359 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.522 Gbps (per GPU), 344.357 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.522 Gbps (per GPU), 344.351 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.522 Gbps (per GPU), 344.351 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.522 Gbps (per GPU), 344.356 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.522 Gbps (per GPU), 344.351 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.522 Gbps (per GPU), 344.349 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  1.43ms  1.40ms  1.34ms  1.07  3.38K  1.78M
 chk_1  1.40ms  1.37ms  1.27ms  1.10  4.46K  1.78M
 chk_2  1.45ms  1.37ms  1.31ms  1.11  4.68K  1.74M
 chk_3  1.47ms  1.39ms  1.34ms  1.10  4.05K  1.77M
 chk_4  1.43ms  1.36ms  1.31ms  1.09  3.51K  1.79M
 chk_5  1.35ms  1.29ms  1.24ms  1.09  4.00K  1.83M
 chk_6  1.35ms  1.30ms  1.26ms  1.07  3.06K  1.85M
 chk_7  1.43ms  1.34ms  1.27ms  1.12  4.72K  1.71M
 chk_8  1.42ms  1.30ms  1.22ms  1.16  6.18K  1.69M
 chk_9  1.36ms  1.33ms  1.30ms  1.05  2.07K  1.90M
chk_10  1.39ms  1.44ms  1.29ms  1.12  2.79K  1.81M
chk_11  1.52ms  1.42ms  1.35ms  1.13  4.93K  1.76M
chk_12  1.42ms  1.37ms  1.33ms  1.07  2.74K  1.81M
chk_13  1.45ms  1.37ms  1.32ms  1.10  3.26K  1.78M
chk_14  1.45ms  1.37ms  1.31ms  1.11  4.03K  1.77M
chk_15  1.31ms  1.25ms  1.19ms  1.10  3.26K  1.84M
chk_16  1.44ms  1.37ms  1.31ms  1.10  3.22K  1.78M
chk_17  1.46ms  1.39ms  1.34ms  1.09  3.69K  1.82M
chk_18  1.43ms  1.33ms  1.25ms  1.14  4.98K  1.78M
chk_19  1.42ms  1.35ms  1.29ms  1.10  3.53K  1.77M
chk_20  1.44ms  1.38ms  1.32ms  1.09  3.14K  1.79M
chk_21  1.35ms  1.33ms  1.27ms  1.06  2.52K  1.85M
chk_22  1.33ms  1.28ms  1.20ms  1.10  3.62K  1.76M
chk_23  1.42ms  1.35ms  1.29ms  1.10  3.26K  1.81M
chk_24  1.37ms  1.30ms  1.23ms  1.11  3.29K  1.81M
chk_25  1.35ms  1.28ms  1.21ms  1.11  4.05K  1.77M
chk_26  1.32ms  1.29ms  1.24ms  1.06  2.41K  1.87M
chk_27  1.58ms  1.51ms  1.44ms  1.10  3.85K  1.76M
chk_28  1.38ms  1.34ms  1.28ms  1.08  2.90K  1.83M
chk_29  1.52ms  1.44ms  1.38ms  1.10  3.43K  1.77M
chk_30  1.48ms  1.43ms  1.38ms  1.07  2.37K  1.80M
chk_31  1.51ms  1.46ms  1.40ms  1.08  2.71K  1.87M
chk_32  1.37ms  1.26ms  1.19ms  1.16  5.56K  1.69M
chk_33  1.38ms  1.28ms  1.20ms  1.15  5.31K  1.75M
chk_34  1.42ms  1.34ms  1.28ms  1.11  4.07K  1.78M
chk_35  1.35ms  1.26ms  1.19ms  1.13  4.52K  1.75M
chk_36  1.43ms  1.39ms  1.34ms  1.06  2.25K  1.86M
chk_37  1.37ms  1.32ms  1.27ms  1.08  2.93K  1.83M
chk_38  1.50ms  1.45ms  1.40ms  1.07  2.63K  1.78M
chk_39  1.36ms  1.27ms  1.21ms  1.12  4.47K  1.76M
chk_40  1.40ms  1.33ms  1.27ms  1.10  4.06K  1.77M
chk_41  1.41ms  1.33ms  1.25ms  1.13  4.79K  1.73M
chk_42  1.41ms  1.33ms  1.27ms  1.11  3.84K  1.81M
chk_43  1.45ms  1.36ms  1.29ms  1.12  4.60K  1.74M
chk_44  1.44ms  1.41ms  1.34ms  1.08  2.77K  1.81M
chk_45  1.44ms  1.41ms  1.35ms  1.07  2.70K  1.86M
chk_46  1.55ms  1.49ms  1.42ms  1.09  3.46K  1.77M
chk_47  1.39ms  1.30ms  1.22ms  1.14  4.89K  1.70M
chk_48  1.49ms  1.44ms  1.38ms  1.08  2.91K  1.80M
chk_49  1.48ms  1.43ms  1.40ms  1.06  2.35K  1.86M
chk_50  1.33ms  1.37ms  1.26ms  1.08  2.75K  1.89M
chk_51  1.47ms  1.36ms  1.34ms  1.09  4.12K  1.74M
chk_52  1.47ms  1.35ms  1.31ms  1.13  4.93K  1.73M
chk_53  1.36ms  1.28ms  1.28ms  1.07  2.77K  1.86M
chk_54  1.41ms  1.33ms  1.30ms  1.09  3.86K  1.78M
chk_55  1.36ms  1.22ms  1.27ms  1.11  2.83K  1.80M
chk_56  1.47ms  1.30ms  1.35ms  1.13  3.34K  1.78M
chk_57  1.55ms  1.43ms  1.37ms  1.13  5.03K  1.74M
chk_58  1.42ms  1.35ms  1.31ms  1.09  3.16K  1.87M
chk_59  1.40ms  1.31ms  1.25ms  1.12  4.53K  1.75M
chk_60  1.35ms  1.30ms  1.26ms  1.07  2.98K  1.82M
chk_61  1.42ms  1.38ms  1.32ms  1.08  3.55K  1.77M
chk_62  1.30ms  1.26ms  1.24ms  1.05  3.02K  1.79M
chk_63  1.43ms  1.44ms  1.32ms  1.09  3.91K  1.78M
   Avg  1.42  1.35  1.30
   Max  1.58  1.51  1.44
   Min  1.30  1.22  1.19
 Ratio  1.21  1.23  1.21
   Var  0.00  0.00  0.00
Profiling takes 3.534 s
*** Node 0, starting model training...
Num Stages: 16 / 16
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 0 owns the model-level partition [0, 41)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 1, starting model training...
Num Stages: 16 / 16
Node 1, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 1, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 1 owns the model-level partition [41, 81)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 2, starting model training...
Num Stages: 16 / 16
Node 2, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 2, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 2 owns the model-level partition [81, 121)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 4, starting model training...
Num Stages: 16 / 16
Node 4, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 4, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 4 owns the model-level partition [161, 201)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 3, starting model training...
Num Stages: 16 / 16
Node 3, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 3, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 3 owns the model-level partition [121, 161)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 5, starting model training...
Num Stages: 16 / 16
Node 5, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 5, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 5 owns the model-level partition [201, 241)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 6, starting model training...
Num Stages: 16 / 16
Node 6, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 6, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 6 owns the model-level partition [241, 281)
*** Node 6, constructing the helper classes...
*** Node 7, starting model training...
Num Stages: 16 / 16
Node 7, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 7, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 7 owns the model-level partition [281, 321)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 0, Num Local Vertices: 232965
Node 6, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 8, starting model training...
Num Stages: 16 / 16
Node 8, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 8, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 8 owns the model-level partition [321, 361)
*** Node 8, constructing the helper classes...
Node 8, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 9, starting model training...
Num Stages: 16 / 16
Node 9, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 9, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 9 owns the model-level partition [361, 401)
*** Node 9, constructing the helper classes...
Node 9, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 10, starting model training...
Num Stages: 16 / 16
Node 10, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 10, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 10 owns the model-level partition [401, 441)
*** Node 10, constructing the helper classes...
Node 10, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 12, starting model training...
Num Stages: 16 / 16
Node 12, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 12, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 12 owns the model-level partition [481, 521)
*** Node 12, constructing the helper classes...
Node 12, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 11, starting model training...
Num Stages: 16 / 16
Node 11, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 11, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 11 owns the model-level partition [441, 481)
*** Node 11, constructing the helper classes...
Node 11, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 13, starting model training...
Num Stages: 16 / 16
Node 13, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 13, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 13 owns the model-level partition [521, 561)
*** Node 13, constructing the helper classes...
Node 13, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 14, starting model training...
Num Stages: 16 / 16
Node 14, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 14, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 14 owns the model-level partition [561, 601)
*** Node 14, constructing the helper classes...
Node 14, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 15, starting model training...
Num Stages: 16 / 16
Node 15, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 15, Pipeline Output Tensor: NULL
*** Node 15 owns the model-level partition [601, 640)
*** Node 15, constructing the helper classes...
Node 15, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 0, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 15, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 10, setting up some other necessary information...
*** Node 14, setting up some other necessary information...
*** Node 9, setting up some other necessary information...
*** Node 12, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 11, setting up some other necessary information...
*** Node 13, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 8, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 41)...
+++++++++ Node 10 initializing the weights for op[401, 441)...
+++++++++ Node 13 initializing the weights for op[521, 561)...
+++++++++ Node 1 initializing the weights for op[41, 81)...
+++++++++ Node 5 initializing the weights for op[201, 241)...
+++++++++ Node 11 initializing the weights for op[441, 481)...
+++++++++ Node 14 initializing the weights for op[561, 601)...
+++++++++ Node 3 initializing the weights for op[121, 161)...
+++++++++ Node 6 initializing the weights for op[241, 281)...
+++++++++ Node 9 initializing the weights for op[361, 401)...
+++++++++ Node 12 initializing the weights for op[481, 521)...
+++++++++ Node 7 initializing the weights for op[281, 321)...
+++++++++ Node 15 initializing the weights for op[601, 640)...
+++++++++ Node 2 initializing the weights for op[81, 121)...
+++++++++ Node 4 initializing the weights for op[161, 201)...
+++++++++ Node 8 initializing the weights for op[321, 361)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 12, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be received across the graph boundary.
Node 8, discovering the vertices that will be sent across graph boundary...
Node 8, discovering the vertices that will be received across the graph boundary.
Node 13, discovering the vertices that will be sent across graph boundary...
Node 13, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be received across the graph boundary.
Node 9, discovering the vertices that will be sent across graph boundary...
Node 9, discovering the vertices that will be received across the graph boundary.
Node 14, discovering the vertices that will be sent across graph boundary...
Node 14, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be received across the graph boundary.
Node 10, discovering the vertices that will be sent across graph boundary...
Node 10, discovering the vertices that will be received across the graph boundary.
Node 15, discovering the vertices that will be sent across graph boundary...
Node 15, discovering the vertices that will be received across the graph boundary.
The number of mirror vertices: 0
Node 0, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be received across the graph boundary.
Node 11, discovering the vertices that will be sent across graph boundary...
Node 11, discovering the vertices that will be received across the graph boundary.
Node 12, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...
*** Node 1, starting task scheduling...
*** Node 2, starting task scheduling...
*** Node 3, starting task scheduling...



The learning rate specified by the user: 0.001000000
*** Node 8, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 4, starting task scheduling...
*** Node 9, starting task scheduling...
*** Node 12, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 10, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 13, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 11, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 14, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 15, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 3.7136	TrainAcc 0.0551	ValidAcc 0.0603	TestAcc 0.0576	BestValid 0.0603
	Epoch 50:	Loss 3.7136	TrainAcc 0.0551	ValidAcc 0.0603	TestAcc 0.0576	BestValid 0.0603
****** Epoch Time (Excluding Evaluation Cost): 0.775 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 162.090 ms (Max: 166.313, Min: 133.342, Sum: 2593.432)
Cluster-Wide Average, Compute: 523.602 ms (Max: 554.478, Min: 514.294, Sum: 8377.634)
Cluster-Wide Average, Communication-Layer: 30.845 ms (Max: 35.479, Min: 19.226, Sum: 493.516)
Cluster-Wide Average, Bubble-Imbalance: 50.855 ms (Max: 59.594, Min: 32.396, Sum: 813.688)
Cluster-Wide Average, Communication-Graph: 2.188 ms (Max: 2.730, Min: 1.827, Sum: 35.013)
Cluster-Wide Average, Optimization: 0.209 ms (Max: 0.221, Min: 0.203, Sum: 3.345)
Cluster-Wide Average, Others: 5.612 ms (Max: 33.512, Min: 3.704, Sum: 89.798)
****** Breakdown Sum: 775.402 ms ******
Cluster-Wide Average, GPU Memory Consumption: 10.712 GB (Max: 12.717, Min: 10.139, Sum: 171.393)
Cluster-Wide Average, Graph-Level Communication Throughput: -nan Gbps (Max: -nan, Min: -nan, Sum: -nan)
Cluster-Wide Average, Layer-Level Communication Throughput: 45.121 Gbps (Max: 50.368, Min: 38.062, Sum: 721.931)
Layer-level communication (cluster-wide, per-epoch): 2.604 GB
Graph-level communication (cluster-wide, per-epoch): 0.000 GB
Weight-sync communication (cluster-wide, per-epoch): 0.000 GB
Total communication (cluster-wide, per-epoch): 2.604 GB
****** Accuracy Results ******
Highest valid_acc: 0.0603
Target test_acc: 0.0576
Epoch to reach the target acc: 0
[MPI Rank 0] Success 
[MPI Rank 2] Success 
[MPI Rank 3] Success 
[MPI Rank 1] Success 
[MPI Rank 8] Success 
[MPI Rank 4] Success 
[MPI Rank 9] Success 
[MPI Rank 12] Success 
[MPI Rank 5] Success 
[MPI Rank 10] Success 
[MPI Rank 13] Success 
[MPI Rank 6] Success 
[MPI Rank 11] Success 
[MPI Rank 14] Success 
[MPI Rank 7] Success 
[MPI Rank 15] Success 
Wed Sep 20 00:16:33 2023       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 515.43.04    Driver Version: 515.43.04    CUDA Version: 11.7     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA RTX A5000    On   | 00000000:01:00.0 Off |                  Off |
| 32%   57C    P0    84W / 230W |      1MiB / 24564MiB |     82%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   1  NVIDIA RTX A5000    On   | 00000000:25:00.0 Off |                  Off |
| 30%   45C    P0    64W / 230W |      1MiB / 24564MiB |     10%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   2  NVIDIA RTX A5000    On   | 00000000:81:00.0 Off |                  Off |
| 30%   45C    P0    56W / 230W |      1MiB / 24564MiB |     74%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   3  NVIDIA RTX A5000    On   | 00000000:C1:00.0 Off |                  Off |
| 30%   42C    P0    60W / 230W |      1MiB / 24564MiB |     75%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
