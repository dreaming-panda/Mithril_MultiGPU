Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
Initialized node 7 on machine gnerv3
DONE MPI INIT
Initialized node 5 on machine gnerv3
DONE MPI INIT
Initialized node 6 on machine gnerv3
DONE MPI INIT
Initialized node 4 on machine gnerv3
DONE MPI INIT
DONE MPI INIT
Initialized node 1 on machine gnerv2
DONE MPI INIT
Initialized node 3 on machine gnerv2
Initialized node 0 on machine gnerv2
DONE MPI INIT
Initialized node 2 on machine gnerv2
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.018 seconds.
Building the CSC structure...
        It takes 0.018 seconds.
Building the CSC structure...
        It takes 0.020 seconds.
Building the CSC structure...
        It takes 0.020 seconds.
Building the CSC structure...
        It takes 0.021 seconds.
Building the CSC structure...
        It takes 0.021 seconds.
Building the CSC structure...
        It takes 0.020 seconds.
Building the CSC structure...
        It takes 0.022 seconds.
Building the CSC structure...
        It takes 0.016 seconds.
        It takes 0.016 seconds.
        It takes 0.016 seconds.
        It takes 0.016 seconds.
        It takes 0.016 seconds.
        It takes 0.016 seconds.
        It takes 0.021 seconds.
        It takes 0.022 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 2.523 seconds.
        It takes 2.523 seconds.
        It takes 2.523 seconds.
        It takes 2.523 seconds.
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
        It takes 0.005 seconds.
        It takes 0.005 seconds.
        It takes 0.005 seconds.
        It takes 0.008 seconds.
        It takes 2.636 seconds.
        It takes 2.638 seconds.
        It takes 2.637 seconds.
        It takes 2.636 seconds.
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.007 seconds.
        It takes 0.007 seconds.
        It takes 0.008 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/pipeline_parallel_datasets/physics/32_parts
The number of GCN layers: 64
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
Number of classes: 5
Number of feature dimensions: 8415
Number of vertices: 34493
Number of GPUs: 8
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
34493, 530417, 530417
Number of vertices per chunk: 1078
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
csr in-out ready !Start Cost Model Initialization...
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
train nodes 100, valid nodes 500, test nodes 1000
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 1025) 1-[1025, 2154) 2-[2154, 3262) 3-[3262, 4284) 4-[4284, 5334) 5-[5334, 6511) 6-[6511, 7597) 7-[7597, 8680) 8-[8680, 9764) ... 31-[33337, 34493)
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
34493, 530417, 530417
Number of vertices per chunk: 1078
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
GPU 4, layer [32, 40)
GPU 5, layer [40, 48)
GPU 6, layer [48, 56)
GPU 7, layer [56, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
34493, 530417, 530417
Number of vertices per chunk: 1078
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 55.306 Gbps (per GPU), 442.447 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 55.089 Gbps (per GPU), 440.710 Gbps (aggregated)
The layer-level communication performance: 55.070 Gbps (per GPU), 440.564 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 54.849 Gbps (per GPU), 438.791 Gbps (aggregated)
The layer-level communication performance: 54.820 Gbps (per GPU), 438.558 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 54.645 Gbps (per GPU), 437.160 Gbps (aggregated)
The layer-level communication performance: 54.609 Gbps (per GPU), 436.874 Gbps (aggregated)
The layer-level communication performance: 54.582 Gbps (per GPU), 436.653 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 156.565 Gbps (per GPU), 1252.522 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.580 Gbps (per GPU), 1252.639 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.414 Gbps (per GPU), 1251.309 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.557 Gbps (per GPU), 1252.455 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.419 Gbps (per GPU), 1251.354 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.451 Gbps (per GPU), 1251.611 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.172 Gbps (per GPU), 1249.374 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.050 Gbps (per GPU), 1248.399 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 94.717 Gbps (per GPU), 757.739 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 94.719 Gbps (per GPU), 757.750 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 94.720 Gbps (per GPU), 757.761 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 94.716 Gbps (per GPU), 757.727 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 94.724 Gbps (per GPU), 757.796 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 94.700 Gbps (per GPU), 757.597 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 94.686 Gbps (per GPU), 757.488 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 94.652 Gbps (per GPU), 757.215 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 31.726 Gbps (per GPU), 253.805 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 31.727 Gbps (per GPU), 253.817 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 31.727 Gbps (per GPU), 253.812 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 31.727 Gbps (per GPU), 253.816 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 31.727 Gbps (per GPU), 253.817 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 31.726 Gbps (per GPU), 253.812 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 31.727 Gbps (per GPU), 253.817 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 31.727 Gbps (per GPU), 253.813 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  0.64ms  0.23ms  0.15ms  4.23  1.02K  0.02M
 chk_1  0.67ms  0.22ms  0.15ms  4.42  1.13K  0.01M
 chk_2  0.66ms  0.22ms  0.15ms  4.39  1.11K  0.01M
 chk_3  0.64ms  0.22ms  0.15ms  4.20  1.02K  0.02M
 chk_4  0.64ms  0.22ms  0.15ms  4.22  1.05K  0.02M
 chk_5  0.68ms  0.22ms  0.15ms  4.56  1.18K  0.01M
 chk_6  0.67ms  0.22ms  0.15ms  4.48  1.09K  0.02M
 chk_7  0.66ms  0.22ms  0.15ms  4.43  1.08K  0.02M
 chk_8  0.66ms  0.22ms  0.15ms  4.42  1.08K  0.01M
 chk_9  0.65ms  0.22ms  0.15ms  4.37  1.06K  0.02M
chk_10  0.66ms  0.22ms  0.15ms  4.37  1.04K  0.02M
chk_11  0.67ms  0.22ms  0.15ms  4.43  1.11K  0.01M
chk_12  0.67ms  0.22ms  0.15ms  4.42  1.11K  0.01M
chk_13  0.64ms  0.21ms  0.15ms  4.22  1.01K  0.02M
chk_14  0.66ms  0.22ms  0.15ms  4.38  1.09K  0.01M
chk_15  0.64ms  0.22ms  0.15ms  4.28  1.03K  0.02M
chk_16  0.62ms  0.22ms  0.15ms  4.11  0.98K  0.02M
chk_17  0.67ms  0.22ms  0.15ms  4.45  1.09K  0.01M
chk_18  0.65ms  0.22ms  0.15ms  4.25  1.04K  0.02M
chk_19  0.67ms  0.22ms  0.15ms  4.45  1.12K  0.01M
chk_20  0.67ms  0.22ms  0.15ms  4.49  1.13K  0.01M
chk_21  0.65ms  0.22ms  0.15ms  4.31  1.05K  0.02M
chk_22  0.67ms  0.22ms  0.15ms  4.50  1.11K  0.01M
chk_23  0.67ms  0.22ms  0.15ms  4.48  1.10K  0.01M
chk_24  0.64ms  0.22ms  0.15ms  4.25  1.02K  0.02M
chk_25  0.64ms  0.22ms  0.15ms  4.22  1.01K  0.02M
chk_26  0.67ms  0.22ms  0.15ms  4.42  1.12K  0.01M
chk_27  0.65ms  0.22ms  0.15ms  4.36  1.08K  0.02M
chk_28  0.65ms  0.22ms  0.15ms  4.27  1.07K  0.02M
chk_29  0.67ms  0.22ms  0.15ms  4.49  1.11K  0.01M
chk_30  0.66ms  0.22ms  0.15ms  4.37  1.10K  0.01M
chk_31  0.68ms  0.22ms  0.15ms  4.57  1.16K  0.01M
   Avg  0.66  0.22  0.15
   Max  0.68  0.23  0.15
   Min  0.62  0.21  0.15
 Ratio  1.09  1.05  1.03
   Var  0.00  0.00  0.00
Profiling takes 0.466 s
*** Node 0, starting model training...
Num Stages: 8 / 8
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 0 owns the model-level partition [0, 41)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 1, starting model training...
Num Stages: 8 / 8
Node 1, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 1, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 1 owns the model-level partition [41, 81)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 4, starting model training...
Num Stages: 8 / 8
Node 4, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 4, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 4 owns the model-level partition [161, 201)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 2, starting model training...
Num Stages: 8 / 8
Node 2, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 2, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 2 owns the model-level partition [81, 121)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 6, starting model training...
Num Stages: 8 / 8
Node 6, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 6, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 6 owns the model-level partition [241, 281)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 3, starting model training...
Num Stages: 8 / 8
Node 3, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 3, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 3 owns the model-level partition [121, 161)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 7, starting model training...
Num Stages: 8 / 8
Node 7, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 7, Pipeline Output Tensor: NULL
*** Node 5, starting model training...
Num Stages: 8 / 8
Node 5, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 5, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 5 owns the model-level partition [201, 241)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 7 owns the model-level partition [281, 320)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 0, Num Local Vertices: 34493
*** Node 2, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
+++++++++ Node 7 initializing the weights for op[281, 320)...
+++++++++ Node 0 initializing the weights for op[0, 41)...
+++++++++ Node 1 initializing the weights for op[41, 81)...
+++++++++ Node 2 initializing the weights for op[81, 121)...
+++++++++ Node 6 initializing the weights for op[241, 281)...
+++++++++ Node 4 initializing the weights for op[161, 201)...
+++++++++ Node 5 initializing the weights for op[201, 241)...
+++++++++ Node 3 initializing the weights for op[121, 161)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 0
Node 0, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
Node 7, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



The learning rate specified by the user: 0.001000000
*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 1.6094	TrainAcc 0.2000	ValidAcc 0.1860	TestAcc 0.1750	BestValid 0.1860
	Epoch 50:	Loss 1.6094	TrainAcc 0.2000	ValidAcc 0.1860	TestAcc 0.1750	BestValid 0.1860
****** Epoch Time (Excluding Evaluation Cost): 0.105 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 18.051 ms (Max: 19.208, Min: 16.438, Sum: 144.406)
Cluster-Wide Average, Compute: 67.405 ms (Max: 80.650, Min: 64.008, Sum: 539.243)
Cluster-Wide Average, Communication-Layer: 5.712 ms (Max: 6.849, Min: 4.315, Sum: 45.698)
Cluster-Wide Average, Bubble-Imbalance: 11.788 ms (Max: 15.690, Min: 1.485, Sum: 94.301)
Cluster-Wide Average, Communication-Graph: 1.138 ms (Max: 1.398, Min: 0.993, Sum: 9.101)
Cluster-Wide Average, Optimization: 0.217 ms (Max: 0.401, Min: 0.187, Sum: 1.736)
Cluster-Wide Average, Others: 0.941 ms (Max: 1.885, Min: 0.788, Sum: 7.527)
****** Breakdown Sum: 105.251 ms ******
Cluster-Wide Average, GPU Memory Consumption: 3.752 GB (Max: 5.219, Min: 3.303, Sum: 30.019)
Cluster-Wide Average, Graph-Level Communication Throughput: -nan Gbps (Max: -nan, Min: -nan, Sum: -nan)
Cluster-Wide Average, Layer-Level Communication Throughput: 33.308 Gbps (Max: 37.975, Min: 25.275, Sum: 266.461)
Layer-level communication (cluster-wide, per-epoch): 0.180 GB
Graph-level communication (cluster-wide, per-epoch): 0.000 GB
Weight-sync communication (cluster-wide, per-epoch): 0.000 GB
Total communication (cluster-wide, per-epoch): 0.180 GB
****** Accuracy Results ******
Highest valid_acc: 0.1860
Target test_acc: 0.1750
Epoch to reach the target acc: 0
[MPI Rank 0] Success 
[MPI Rank 4] Success 
[MPI Rank 1] Success 
[MPI Rank 5] Success 
[MPI Rank 2] Success 
[MPI Rank 6] Success 
[MPI Rank 3] Success 
[MPI Rank 7] Success 
