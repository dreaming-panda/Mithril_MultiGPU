Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INITDONE MPI INIT
Initialized node 2 on machine gnerv2
DONE MPI INIT
Initialized node 3 on machine gnerv2
DONE MPI INIT

Initialized node 1 on machine gnerv2
Initialized node 0 on machine gnerv2
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.066 seconds.
Building the CSC structure...
        It takes 0.067 seconds.
Building the CSC structure...
        It takes 0.067 seconds.
Building the CSC structure...
        It takes 0.067 seconds.
Building the CSC structure...
        It takes 0.022 seconds.
        It takes 0.022 seconds.
        It takes 0.023 seconds.
        It takes 0.023 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.389 seconds.
        It takes 0.389 seconds.
        It takes 0.389 seconds.
        It takes 0.389 seconds.
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
Building the Label Vector...
        It takes 0.022 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/pipeline_parallel_datasets/flickr/16_parts
The number of GCN layers: 32
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
Number of classes: 7
Number of feature dimensions: 500
Number of vertices: 89250
Number of GPUs: 4
        It takes 0.025 seconds.
        It takes 0.027 seconds.
        It takes 0.027 seconds.
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
Number of vertices per chunk: 5579
89250, 989006, 989006
Number of vertices per chunk: 5579
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
train nodes 44625, valid nodes 22312, test nodes 22313
GPU 0, layer [0, 8)
GPU 1, layer [8, 16)
GPU 2, layer [16, 24)
GPU 3, layer [24, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 16): 0-[0, 5600) 1-[5600, 11152) 2-[11152, 16732) 3-[16732, 22281) 4-[22281, 27939) 5-[27939, 33437) 6-[33437, 39123) 7-[39123, 44637) 8-[44637, 50212) ... 15-[83630, 89250)
csr in-out ready !Start Cost Model Initialization...
89250, 989006, 989006
Number of vertices per chunk: 5579
89250, 989006, 989006
Number of vertices per chunk: 5579
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
The layer-level communication performance: 113.208 Gbps (per GPU), 452.831 Gbps (aggregated)
The layer-level communication performance: 113.799 Gbps (per GPU), 455.195 Gbps (aggregated)
The layer-level communication performance: 113.629 Gbps (per GPU), 454.517 Gbps (aggregated)
The layer-level communication performance: 112.887 Gbps (per GPU), 451.547 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 157.675 Gbps (per GPU), 630.699 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.672 Gbps (per GPU), 630.687 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.675 Gbps (per GPU), 630.699 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.678 Gbps (per GPU), 630.711 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 96.700 Gbps (per GPU), 386.801 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 96.691 Gbps (per GPU), 386.765 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 96.696 Gbps (per GPU), 386.785 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 96.693 Gbps (per GPU), 386.771 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  0.46ms  0.37ms  0.24ms  1.89  5.60K  0.05M
 chk_1  0.46ms  0.37ms  0.24ms  1.88  5.55K  0.05M
 chk_2  0.48ms  0.38ms  0.26ms  1.84  5.58K  0.06M
 chk_3  0.46ms  0.37ms  0.24ms  1.89  5.55K  0.06M
 chk_4  0.47ms  0.37ms  0.25ms  1.89  5.66K  0.06M
 chk_5  0.47ms  0.38ms  0.26ms  1.83  5.50K  0.06M
 chk_6  0.47ms  0.37ms  0.24ms  1.92  5.69K  0.05M
 chk_7  0.47ms  0.37ms  0.25ms  1.86  5.51K  0.06M
 chk_8  0.45ms  0.36ms  0.23ms  1.94  5.58K  0.05M
 chk_9  0.48ms  0.39ms  0.26ms  1.82  5.51K  0.06M
chk_10  0.46ms  0.36ms  0.23ms  1.95  5.63K  0.05M
chk_11  0.46ms  0.36ms  0.24ms  1.93  5.62K  0.05M
chk_12  0.48ms  0.38ms  0.26ms  1.85  5.59K  0.06M
chk_13  0.45ms  0.35ms  0.23ms  1.94  5.59K  0.06M
chk_14  0.45ms  0.36ms  0.24ms  1.90  5.48K  0.06M
chk_15  0.46ms  0.37ms  0.25ms  1.89  5.62K  0.06M
   Avg  0.46  0.37  0.25
   Max  0.48  0.39  0.26
   Min  0.45  0.35  0.23
 Ratio  1.06  1.09  1.13
   Var  0.00  0.00  0.00
Profiling takes 0.281 s
*** Node 0, starting model training...
Num Stages: 4 / 4
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 0 owns the model-level partition [0, 41)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 89250
*** Node 1, starting model training...
Num Stages: 4 / 4
Node 1, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 1, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 1 owns the model-level partition [41, 81)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 0, Num Local Vertices: 89250
*** Node 3, starting model training...
Num Stages: 4 / 4
Node 3, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [121, 160)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 0, Num Local Vertices: 89250
*** Node 2, starting model training...
Num Stages: 4 / 4
Node 2, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 2, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 2 owns the model-level partition [81, 121)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 89250
*** Node 3, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 41)...
+++++++++ Node 1 initializing the weights for op[41, 81)...
+++++++++ Node 3 initializing the weights for op[121, 160)...
+++++++++ Node 2 initializing the weights for op[81, 121)...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 0
Node 0, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



The learning rate specified by the user: 0.001000000
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 1.9459	TrainAcc 0.0709	ValidAcc 0.0721	TestAcc 0.0735	BestValid 0.0721
	Epoch 50:	Loss 1.6528	TrainAcc 0.4216	ValidAcc 0.4239	TestAcc 0.4234	BestValid 0.4239
****** Epoch Time (Excluding Evaluation Cost): 0.069 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 10.007 ms (Max: 10.534, Min: 9.586, Sum: 40.027)
Cluster-Wide Average, Compute: 47.587 ms (Max: 50.301, Min: 45.829, Sum: 190.348)
Cluster-Wide Average, Communication-Layer: 6.593 ms (Max: 7.780, Min: 5.460, Sum: 26.371)
Cluster-Wide Average, Bubble-Imbalance: 2.924 ms (Max: 5.245, Min: 1.483, Sum: 11.696)
Cluster-Wide Average, Communication-Graph: 0.466 ms (Max: 0.541, Min: 0.411, Sum: 1.864)
Cluster-Wide Average, Optimization: 0.176 ms (Max: 0.183, Min: 0.166, Sum: 0.704)
Cluster-Wide Average, Others: 1.840 ms (Max: 3.028, Min: 1.429, Sum: 7.359)
****** Breakdown Sum: 69.592 ms ******
Cluster-Wide Average, GPU Memory Consumption: 3.690 GB (Max: 4.079, Min: 3.424, Sum: 14.758)
Cluster-Wide Average, Graph-Level Communication Throughput: -nan Gbps (Max: -nan, Min: -nan, Sum: -nan)
Cluster-Wide Average, Layer-Level Communication Throughput: 63.142 Gbps (Max: 75.822, Min: 51.018, Sum: 252.566)
Layer-level communication (cluster-wide, per-epoch): 0.199 GB
Graph-level communication (cluster-wide, per-epoch): 0.000 GB
Weight-sync communication (cluster-wide, per-epoch): 0.000 GB
Total communication (cluster-wide, per-epoch): 0.199 GB
****** Accuracy Results ******
Highest valid_acc: 0.4239
Target test_acc: 0.4234
Epoch to reach the target acc: 49
[MPI Rank 0] Success 
[MPI Rank 1] Success 
[MPI Rank 2] Success 
[MPI Rank 3] Success 
