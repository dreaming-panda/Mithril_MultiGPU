Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
DONE MPI INIT
Initialized node 1 on machine gnerv2
DONE MPI INITInitialized node 0 on machine gnerv2
DONE MPI INIT

Initialized node 3 on machine gnerv2
Initialized node 2 on machine gnerv2
DONE MPI INIT
Initialized node 4 on machine gnerv3
DONE MPI INIT
Initialized node 6 on machine gnerv3
DONE MPI INIT
Initialized node 7 on machine gnerv3
DONE MPI INIT
Initialized node 5 on machine gnerv3
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 0.019 seconds.
Building the CSC structure...
        It takes 0.020 seconds.
Building the CSC structure...
        It takes 0.021 seconds.
Building the CSC structure...
        It takes 0.023 seconds.
Building the CSC structure...
        It takes 0.024 seconds.
Building the CSC structure...
        It takes 0.025 seconds.
Building the CSC structure...
        It takes 0.025 seconds.
Building the CSC structure...
        It takes 0.026 seconds.
Building the CSC structure...
        It takes 0.020 seconds.
        It takes 0.022 seconds.
        It takes 0.020 seconds.
        It takes 0.021 seconds.
        It takes 0.020 seconds.
        It takes 0.026 seconds.
Building the Feature Vector...
        It takes 0.024 seconds.
        It takes 0.024 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.102 seconds.
Building the Label Vector...
        It takes 0.099 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.006 seconds.
        It takes 0.111 seconds.
Building the Label Vector...
        It takes 0.112 seconds.
Building the Label Vector...
        It takes 0.115 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.116 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
        It takes 0.113 seconds.
Building the Label Vector...
        It takes 0.008 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/flickr/8_parts
The number of GCN layers: 64
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
Number of classes: 7
Number of feature dimensions: 500
Number of vertices: 89250
Number of GPUs: 8
        It takes 0.007 seconds.
        It takes 0.007 seconds.
        It takes 0.122 seconds.
Building the Label Vector...
        It takes 0.007 seconds.
GPU 0, layer [0, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
Number of vertices per chunk: 11157
GPU 0, layer [0, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
Number of vertices per chunk: 11157
89250, 989006, 989006
Number of vertices per chunk: 11157
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
Number of vertices per chunk: 11157
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
csr in-out ready !Start Cost Model Initialization...
89250, 989006, 989006
Number of vertices per chunk: 11157
89250, 989006, 989006
Number of vertices per chunk: 11157
train nodes 44625, valid nodes 22312, test nodes 22313
GPU 0, layer [0, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 11156) 1-[11156, 22313) 2-[22313, 33469) 3-[33469, 44625) 4-[44625, 55781) 5-[55781, 66937) 6-[66937, 78093) 7-[78093, 89250)
csr in-out ready !Start Cost Model Initialization...
89250, 989006, 989006
Number of vertices per chunk: 11157
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
89250, 989006, 989006
Number of vertices per chunk: 11157
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 59.909 Gbps (per GPU), 479.270 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 60.099 Gbps (per GPU), 480.796 Gbps (aggregated)
The layer-level communication performance: 59.604 Gbps (per GPU), 476.836 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.365 Gbps (per GPU), 474.922 Gbps (aggregated)
The layer-level communication performance: 59.329 Gbps (per GPU), 474.630 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 59.131 Gbps (per GPU), 473.051 Gbps (aggregated)
The layer-level communication performance: 59.561 Gbps (per GPU), 476.489 Gbps (aggregated)
The layer-level communication performance: 59.049 Gbps (per GPU), 472.388 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 156.422 Gbps (per GPU), 1251.377 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.425 Gbps (per GPU), 1251.401 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.434 Gbps (per GPU), 1251.471 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.425 Gbps (per GPU), 1251.401 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.431 Gbps (per GPU), 1251.449 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.422 Gbps (per GPU), 1251.377 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.434 Gbps (per GPU), 1251.471 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.419 Gbps (per GPU), 1251.354 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 100.907 Gbps (per GPU), 807.257 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.905 Gbps (per GPU), 807.244 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.907 Gbps (per GPU), 807.257 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.902 Gbps (per GPU), 807.218 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.905 Gbps (per GPU), 807.237 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.906 Gbps (per GPU), 807.250 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.901 Gbps (per GPU), 807.205 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.900 Gbps (per GPU), 807.198 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 30.853 Gbps (per GPU), 246.821 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.853 Gbps (per GPU), 246.823 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.854 Gbps (per GPU), 246.832 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.853 Gbps (per GPU), 246.822 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.848 Gbps (per GPU), 246.782 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.852 Gbps (per GPU), 246.816 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.847 Gbps (per GPU), 246.776 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 30.850 Gbps (per GPU), 246.802 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  0.77ms  0.56ms  0.36ms  2.13 11.16K  0.12M
 chk_1  0.77ms  0.56ms  0.37ms  2.09 11.16K  0.11M
 chk_2  0.74ms  0.53ms  0.34ms  2.20 11.16K  0.11M
 chk_3  0.71ms  0.49ms  0.30ms  2.37 11.16K  0.12M
 chk_4  0.74ms  0.56ms  0.37ms  2.02 11.16K  0.11M
 chk_5  0.73ms  0.55ms  0.35ms  2.06 11.16K  0.10M
 chk_6  0.73ms  0.55ms  0.36ms  2.05 11.16K  0.12M
 chk_7  0.74ms  0.56ms  0.37ms  2.03 11.16K  0.11M
   Avg  0.74  0.55  0.35
   Max  0.77  0.56  0.37
   Min  0.71  0.49  0.30
 Ratio  1.10  1.14  1.24
   Var  0.00  0.00  0.00
Profiling takes 0.222 s
*** Node 0, starting model training...
*** Node 1, starting model training...
*** Node 2, starting model training...
*** Node 3, starting model training...
*** Node 4, starting model training...
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 320)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 11156
*** Node 5, starting model training...
*** Node 6, starting model training...
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 320)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 55781, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 320)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 66937, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 320)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 11156, Num Local Vertices: 11157
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 320)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 22313, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 320)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 33469, Num Local Vertices: 11156
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 320)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 78093, Num Local Vertices: 11157
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 320)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 44625, Num Local Vertices: 11156
*** Node 1, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
+++++++++ Node 1 initializing the weights for op[0, 320)...
+++++++++ Node 3 initializing the weights for op[0, 320)...
+++++++++ Node 4 initializing the weights for op[0, 320)...
+++++++++ Node 5 initializing the weights for op[0, 320)...
+++++++++ Node 0 initializing the weights for op[0, 320)...
+++++++++ Node 6 initializing the weights for op[0, 320)...
+++++++++ Node 7 initializing the weights for op[0, 320)...
+++++++++ Node 2 initializing the weights for op[0, 320)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 192232
Node 0, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



The learning rate specified by the user: 0.001000000
*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 1.9459	TrainAcc 0.0589	ValidAcc 0.0575	TestAcc 0.0607	BestValid 0.0575
	Epoch 10:	Loss 1.9459	TrainAcc 0.0589	ValidAcc 0.0575	TestAcc 0.0607	BestValid 0.0575
	Epoch 20:	Loss 1.9459	TrainAcc 0.0589	ValidAcc 0.0575	TestAcc 0.0607	BestValid 0.0575
	Epoch 30:	Loss 1.9459	TrainAcc 0.0589	ValidAcc 0.0575	TestAcc 0.0607	BestValid 0.0575
	Epoch 40:	Loss 1.9459	TrainAcc 0.0589	ValidAcc 0.0575	TestAcc 0.0607	BestValid 0.0575
	Epoch 50:	Loss 1.9459	TrainAcc 0.0589	ValidAcc 0.0575	TestAcc 0.0607	BestValid 0.0575
****** Epoch Time (Excluding Evaluation Cost): 0.292 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 0.254 ms (Max: 0.419, Min: 0.052, Sum: 2.032)
Cluster-Wide Average, Compute: 35.765 ms (Max: 36.710, Min: 32.765, Sum: 286.124)
Cluster-Wide Average, Communication-Layer: 0.008 ms (Max: 0.009, Min: 0.007, Sum: 0.067)
Cluster-Wide Average, Bubble-Imbalance: 0.015 ms (Max: 0.016, Min: 0.013, Sum: 0.119)
Cluster-Wide Average, Communication-Graph: 249.616 ms (Max: 252.590, Min: 248.476, Sum: 1996.930)
Cluster-Wide Average, Optimization: 5.493 ms (Max: 5.541, Min: 5.443, Sum: 43.945)
Cluster-Wide Average, Others: 0.779 ms (Max: 0.861, Min: 0.696, Sum: 6.230)
****** Breakdown Sum: 291.931 ms ******
Cluster-Wide Average, GPU Memory Consumption: 4.905 GB (Max: 5.547, Min: 4.799, Sum: 39.237)
Cluster-Wide Average, Graph-Level Communication Throughput: 42.174 Gbps (Max: 50.896, Min: 16.583, Sum: 337.394)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 9.166 GB
Weight-sync communication (cluster-wide, per-epoch): 0.035 GB
Total communication (cluster-wide, per-epoch): 9.201 GB
****** Accuracy Results ******
Highest valid_acc: 0.0575
Target test_acc: 0.0607
Epoch to reach the target acc: 0
[MPI Rank 0] Success 
[MPI Rank 1] Success 
[MPI Rank 4] Success 
[MPI Rank 2] Success 
[MPI Rank 5] Success 
[MPI Rank 3] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
