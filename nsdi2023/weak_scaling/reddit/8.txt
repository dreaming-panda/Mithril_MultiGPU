Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
DONE MPI INIT
Initialized node 7 on machine gnerv3
Initialized node 4 on machine gnerv3
DONE MPI INIT
Initialized node 5 on machine gnerv3
DONE MPI INIT
DONE MPI INITInitialized node 0 on machine gnerv2
DONE MPI INIT
Initialized node 3 on machine gnerv2
DONE MPI INIT
Initialized node 1 on machine gnerv2

Initialized node 2 on machine gnerv2
DONE MPI INIT
Initialized node 6 on machine gnerv3
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 2.340 seconds.
Building the CSC structure...
        It takes 2.461 seconds.
Building the CSC structure...
        It takes 2.587 seconds.
Building the CSC structure...
        It takes 2.721 seconds.
Building the CSC structure...
        It takes 3.819 seconds.
Building the CSC structure...
        It takes 3.820 seconds.
Building the CSC structure...        It takes 3.820 seconds.
Building the CSC structure...

        It takes 3.821 seconds.
Building the CSC structure...
        It takes 2.320 seconds.
        It takes 2.290 seconds.
        It takes 2.320 seconds.
        It takes 2.303 seconds.
Building the Feature Vector...
        It takes 0.244 seconds.
Building the Label Vector...
        It takes 0.032 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.261 seconds.
Building the Label Vector...
        It takes 0.029 seconds.
        It takes 0.272 seconds.
Building the Label Vector...
        It takes 0.031 seconds.
GPU 0, layer [0, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
        It takes 0.263 seconds.
Building the Label Vector...
        It takes 0.030 seconds.
232965, 114848857, 114848857
Number of vertices per chunk: 29121
GPU 0, layer [0, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
        It takes 4.046 seconds.
        It takes 4.046 seconds.
        It takes 4.047 seconds.
        It takes 4.081 seconds.
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
csr in-out ready !Start Cost Model Initialization...
        It takes 0.713 seconds.
        It takes 0.713 seconds.
Building the Label Vector...
Building the Label Vector...
        It takes 0.662 seconds.
Building the Label Vector...
        It takes 0.037 seconds.
        It takes 0.040 seconds.
        It takes 0.045 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/reddit/8_parts
The number of GCN layers: 64
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
Number of classes: 41
Number of feature dimensions: 602
Number of vertices: 232965
Number of GPUs: 8
Building the Feature Vector...
        It takes 0.246 seconds.
Building the Label Vector...
        It takes 0.038 seconds.
csr in-out ready !Start Cost Model Initialization...
GPU 0, layer [0, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
train nodes 153431, valid nodes 23831, test nodes 55703
GPU 0, layer [0, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 29120) 1-[29120, 58241) 2-[58241, 87362) 3-[87362, 116483) 4-[116483, 145604) 5-[145604, 174724) 6-[174724, 203845) 7-[203845, 232965)
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
232965, 114848857, 114848857
Number of vertices per chunk: 29121
GPU 0, layer [0, 64)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 55.842 Gbps (per GPU), 446.733 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 55.592 Gbps (per GPU), 444.735 Gbps (aggregated)
The layer-level communication performance: 55.621 Gbps (per GPU), 444.967 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 55.377 Gbps (per GPU), 443.012 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 55.183 Gbps (per GPU), 441.465 Gbps (aggregated)
The layer-level communication performance: 55.123 Gbps (per GPU), 440.981 Gbps (aggregated)
The layer-level communication performance: 55.108 Gbps (per GPU), 440.860 Gbps (aggregated)
The layer-level communication performance: 55.393 Gbps (per GPU), 443.144 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 159.336 Gbps (per GPU), 1274.692 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.291 Gbps (per GPU), 1274.332 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.337 Gbps (per GPU), 1274.695 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.304 Gbps (per GPU), 1274.429 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.310 Gbps (per GPU), 1274.477 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.301 Gbps (per GPU), 1274.404 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.307 Gbps (per GPU), 1274.453 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.307 Gbps (per GPU), 1274.453 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 97.011 Gbps (per GPU), 776.088 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 97.018 Gbps (per GPU), 776.142 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 97.015 Gbps (per GPU), 776.118 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 97.016 Gbps (per GPU), 776.124 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 97.010 Gbps (per GPU), 776.076 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 97.013 Gbps (per GPU), 776.106 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 97.012 Gbps (per GPU), 776.095 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 97.014 Gbps (per GPU), 776.112 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 32.094 Gbps (per GPU), 256.754 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.094 Gbps (per GPU), 256.754 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.095 Gbps (per GPU), 256.762 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.094 Gbps (per GPU), 256.751 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.095 Gbps (per GPU), 256.762 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.094 Gbps (per GPU), 256.754 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.094 Gbps (per GPU), 256.756 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 32.094 Gbps (per GPU), 256.754 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  9.29ms  8.75ms  8.83ms  1.06 29.12K 14.23M
 chk_1  5.10ms  4.49ms  4.18ms  1.22 29.12K  6.56M
 chk_2 16.32ms 15.74ms 15.41ms  1.06 29.12K 24.68M
 chk_3 16.62ms 15.93ms 15.51ms  1.07 29.12K 22.95M
 chk_4  4.93ms  4.32ms  3.98ms  1.24 29.12K  6.33M
 chk_5  8.87ms  8.22ms  8.18ms  1.08 29.12K 12.05M
 chk_6 10.00ms  9.31ms  9.06ms  1.10 29.12K 14.60M
 chk_7  9.14ms  8.48ms  8.15ms  1.12 29.12K 13.21M
   Avg 10.03  9.41  9.16
   Max 16.62 15.93 15.51
   Min  4.93  4.32  3.98
 Ratio  3.37  3.69  3.90
   Var 17.01 16.92 16.64
Profiling takes 2.618 s
*** Node 0, starting model training...
*** Node 1, starting model training...
*** Node 3, starting model training...
*** Node 4, starting model training...
*** Node 2, starting model training...
*** Node 5, starting model training...
*** Node 6, starting model training...
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 320)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 29120
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 320)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 29120, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 320)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 116483, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 320)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 87362, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 320)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 145604, Num Local Vertices: 29120
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 320)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 203845, Num Local Vertices: 29120
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 320)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 174724, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 320)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 58241, Num Local Vertices: 29121
*** Node 1, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 320)...
+++++++++ Node 3 initializing the weights for op[0, 320)...
+++++++++ Node 1 initializing the weights for op[0, 320)...
+++++++++ Node 4 initializing the weights for op[0, 320)...
+++++++++ Node 5 initializing the weights for op[0, 320)...
+++++++++ Node 7 initializing the weights for op[0, 320)...
+++++++++ Node 6 initializing the weights for op[0, 320)...
+++++++++ Node 2 initializing the weights for op[0, 320)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 607420
Node 0, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 4, starting task scheduling...
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 3.7136	TrainAcc 0.0551	ValidAcc 0.0603	TestAcc 0.0576	BestValid 0.0603
	Epoch 10:	Loss 3.7136	TrainAcc 0.0551	ValidAcc 0.0603	TestAcc 0.0576	BestValid 0.0603
	Epoch 20:	Loss 3.7136	TrainAcc 0.0551	ValidAcc 0.0603	TestAcc 0.0576	BestValid 0.0603
	Epoch 30:	Loss 3.7136	TrainAcc 0.0551	ValidAcc 0.0603	TestAcc 0.0576	BestValid 0.0603
	Epoch 40:	Loss 3.7136	TrainAcc 0.0551	ValidAcc 0.0603	TestAcc 0.0576	BestValid 0.0603
	Epoch 50:	Loss 3.7136	TrainAcc 0.0551	ValidAcc 0.0603	TestAcc 0.0576	BestValid 0.0603
****** Epoch Time (Excluding Evaluation Cost): 1.679 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 3.029 ms (Max: 4.794, Min: 0.065, Sum: 24.233)
Cluster-Wide Average, Compute: 406.240 ms (Max: 678.264, Min: 195.643, Sum: 3249.917)
Cluster-Wide Average, Communication-Layer: 0.009 ms (Max: 0.011, Min: 0.008, Sum: 0.073)
Cluster-Wide Average, Bubble-Imbalance: 0.016 ms (Max: 0.018, Min: 0.014, Sum: 0.128)
Cluster-Wide Average, Communication-Graph: 1262.541 ms (Max: 1471.717, Min: 993.291, Sum: 10100.331)
Cluster-Wide Average, Optimization: 5.534 ms (Max: 5.572, Min: 5.487, Sum: 44.276)
Cluster-Wide Average, Others: 1.187 ms (Max: 1.316, Min: 1.079, Sum: 9.496)
****** Breakdown Sum: 1678.557 ms ******
Cluster-Wide Average, GPU Memory Consumption: 10.286 GB (Max: 11.171, Min: 10.141, Sum: 82.286)
Cluster-Wide Average, Graph-Level Communication Throughput: 26.823 Gbps (Max: 49.663, Min: 11.621, Sum: 214.581)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 28.964 GB
Weight-sync communication (cluster-wide, per-epoch): 0.036 GB
Total communication (cluster-wide, per-epoch): 29.000 GB
****** Accuracy Results ******
Highest valid_acc: 0.0603
Target test_acc: 0.0576
Epoch to reach the target acc: 0
[MPI Rank 0] Success 
[MPI Rank 1] Success 
[MPI Rank 2] Success 
[MPI Rank 3] Success 
[MPI Rank 4] Success 
[MPI Rank 5] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
