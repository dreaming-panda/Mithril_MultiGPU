Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INIT
Initialized node 12 on machine gnerv8
DONE MPI INIT
Initialized node 13 on machine gnerv8
DONE MPI INIT
Initialized node 15 on machine gnerv8
DONE MPI INIT
Initialized node 14 on machine gnerv8
DONE MPI INIT
DONE MPI INIT
Initialized node 11 on machine gnerv7
DONE MPI INIT
Initialized node 8 on machine gnerv7
Initialized node 9 on machine gnerv7
DONE MPI INIT
Initialized node 10 on machine gnerv7
DONE MPI INIT
DONE MPI INITInitialized node 0 on machine gnerv2
DONE MPI INIT
Initialized node 1 on machine gnerv2
DONE MPI INIT
Initialized node 3 on machine gnerv2

Initialized node 2 on machine gnerv2
DONE MPI INIT
Initialized node 4 on machine gnerv3
DONE MPI INIT
DONE MPI INIT
Initialized node 7 on machine gnerv3
DONE MPI INIT
Initialized node 5 on machine gnerv3
Initialized node 6 on machine gnerv3
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 2.305 seconds.
Building the CSC structure...
        It takes 2.373 seconds.
Building the CSC structure...
        It takes 2.376 seconds.
Building the CSC structure...
        It takes 2.386 seconds.
Building the CSC structure...
        It takes 2.379 seconds.
Building the CSC structure...
        It takes 2.413 seconds.
Building the CSC structure...
        It takes 2.428 seconds.
Building the CSC structure...
        It takes 2.437 seconds.
Building the CSC structure...
        It takes 2.448 seconds.
Building the CSC structure...
        It takes 2.451 seconds.
Building the CSC structure...
        It takes 2.545 seconds.
Building the CSC structure...
        It takes 2.572 seconds.
Building the CSC structure...
        It takes 2.618 seconds.
Building the CSC structure...
        It takes 2.631 seconds.
Building the CSC structure...
        It takes 2.683 seconds.
Building the CSC structure...
        It takes 2.736 seconds.
Building the CSC structure...
        It takes 2.312 seconds.
        It takes 2.298 seconds.
        It takes 2.328 seconds.
        It takes 2.348 seconds.
        It takes 2.299 seconds.
        It takes 2.344 seconds.
        It takes 2.334 seconds.
        It takes 2.340 seconds.
        It takes 2.408 seconds.
        It takes 2.348 seconds.
        It takes 2.270 seconds.
        It takes 2.354 seconds.
        It takes 2.355 seconds.
        It takes 2.367 seconds.
        It takes 2.330 seconds.
        It takes 2.311 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.294 seconds.
Building the Label Vector...
Building the Feature Vector...
        It takes 0.034 seconds.
        It takes 0.263 seconds.
Building the Label Vector...
        It takes 0.301 seconds.
Building the Label Vector...
        It takes 0.040 seconds.
        It takes 0.289 seconds.
Building the Label Vector...
        It takes 0.040 seconds.
        It takes 0.031 seconds.
        It takes 0.296 seconds.
Building the Label Vector...
        It takes 0.298 seconds.
Building the Label Vector...
Building the Feature Vector...
        It takes 0.032 seconds.
        It takes 0.280 seconds.
Building the Label Vector...
        It takes 0.040 seconds.
Building the Feature Vector...
        It takes 0.035 seconds.
        It takes 0.302 seconds.
Building the Label Vector...
Building the Feature Vector...
        It takes 0.033 seconds.
        It takes 0.289 seconds.
Building the Label Vector...
        It takes 0.031 seconds.
Building the Feature Vector...
        It takes 0.274 seconds.
Building the Label Vector...
        It takes 0.260 seconds.
Building the Label Vector...
        It takes 0.032 seconds.
        It takes 0.038 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.356 seconds.
Building the Label Vector...
        It takes 0.034 seconds.
Building the Feature Vector...
        It takes 0.316 seconds.
Building the Label Vector...
        It takes 0.033 seconds.
        It takes 0.272 seconds.
Building the Label Vector...
        It takes 0.270 seconds.
Building the Label Vector...
        It takes 0.032 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/reddit/16_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
Number of classes: 41
Number of feature dimensions: 602
Number of vertices: 232965
Number of GPUs: 16
        It takes 0.034 seconds.
        It takes 0.296 seconds.
Building the Label Vector...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
        It takes 0.033 seconds.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
232965, 114848857, 114848857
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Number of vertices per chunk: 14561
Number of vertices per chunk: 14561
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
train nodes 153431, valid nodes 23831, test nodes 55703
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 16): 0-[0, 14136) 1-[14136, 29133) 2-[29133, 43268) 3-[43268, 57403) 4-[57403, 71538) 5-[71538, 86535) 6-[86535, 101510) 7-[101510, 115645) 8-[115645, 129779) ... 15-[218830, 232965)
232965, 114848857, 114848857
Number of vertices per chunk: 14561
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 55.841 Gbps (per GPU), 893.451 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 55.720 Gbps (per GPU), 891.516 Gbps (aggregated)
The layer-level communication performance: 55.600 Gbps (per GPU), 889.602 Gbps (aggregated)
The layer-level communication performance: 55.551 Gbps (per GPU), 888.822 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 55.473 Gbps (per GPU), 887.563 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 55.416 Gbps (per GPU), 886.652 Gbps (aggregated)
The layer-level communication performance: 55.381 Gbps (per GPU), 886.102 Gbps (aggregated)
The layer-level communication performance: 55.313 Gbps (per GPU), 885.007 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 55.295 Gbps (per GPU), 884.724 Gbps (aggregated)
The layer-level communication performance: 55.269 Gbps (per GPU), 884.307 Gbps (aggregated)
The layer-level communication performance: 55.274 Gbps (per GPU), 884.391 Gbps (aggregated)
The layer-level communication performance: 55.292 Gbps (per GPU), 884.671 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 55.244 Gbps (per GPU), 883.907 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 55.082 Gbps (per GPU), 881.318 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 54.988 Gbps (per GPU), 879.808 Gbps (aggregated)
The layer-level communication performance: 54.966 Gbps (per GPU), 879.455 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 156.837 Gbps (per GPU), 2509.399 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.843 Gbps (per GPU), 2509.493 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.849 Gbps (per GPU), 2509.587 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.835 Gbps (per GPU), 2509.352 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.841 Gbps (per GPU), 2509.449 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.867 Gbps (per GPU), 2509.869 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.838 Gbps (per GPU), 2509.407 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.843 Gbps (per GPU), 2509.493 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.852 Gbps (per GPU), 2509.628 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.837 Gbps (per GPU), 2509.399 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.843 Gbps (per GPU), 2509.493 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.852 Gbps (per GPU), 2509.634 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.838 Gbps (per GPU), 2509.401 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.837 Gbps (per GPU), 2509.399 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.837 Gbps (per GPU), 2509.399 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.852 Gbps (per GPU), 2509.634 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 101.508 Gbps (per GPU), 1624.127 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.505 Gbps (per GPU), 1624.086 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.505 Gbps (per GPU), 1624.087 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.506 Gbps (per GPU), 1624.099 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.506 Gbps (per GPU), 1624.099 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.505 Gbps (per GPU), 1624.073 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.505 Gbps (per GPU), 1624.086 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.504 Gbps (per GPU), 1624.060 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.505 Gbps (per GPU), 1624.087 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.505 Gbps (per GPU), 1624.073 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.505 Gbps (per GPU), 1624.085 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.505 Gbps (per GPU), 1624.074 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.504 Gbps (per GPU), 1624.060 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.504 Gbps (per GPU), 1624.060 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.504 Gbps (per GPU), 1624.060 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 101.505 Gbps (per GPU), 1624.086 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 26.457 Gbps (per GPU), 423.306 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 26.457 Gbps (per GPU), 423.304 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 26.456 Gbps (per GPU), 423.300 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 26.456 Gbps (per GPU), 423.303 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 26.456 Gbps (per GPU), 423.294 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 26.457 Gbps (per GPU), 423.304 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 26.456 Gbps (per GPU), 423.300 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 26.457 Gbps (per GPU), 423.307 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 26.456 Gbps (per GPU), 423.300 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 26.456 Gbps (per GPU), 423.298 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 26.456 Gbps (per GPU), 423.292 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 26.457 Gbps (per GPU), 423.304 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 26.456 Gbps (per GPU), 423.299 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 26.456 Gbps (per GPU), 423.296 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 26.456 Gbps (per GPU), 423.301 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 26.455 Gbps (per GPU), 423.287 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
The graph-level communication performance (supernode = 16): 21.085 Gbps (per GPU), 337.367 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.085 Gbps (per GPU), 337.364 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.085 Gbps (per GPU), 337.365 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.085 Gbps (per GPU), 337.361 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.086 Gbps (per GPU), 337.369 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.085 Gbps (per GPU), 337.359 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.086 Gbps (per GPU), 337.368 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.086 Gbps (per GPU), 337.374 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.085 Gbps (per GPU), 337.365 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.085 Gbps (per GPU), 337.357 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.085 Gbps (per GPU), 337.366 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.085 Gbps (per GPU), 337.363 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.085 Gbps (per GPU), 337.352 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.085 Gbps (per GPU), 337.361 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.085 Gbps (per GPU), 337.360 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.085 Gbps (per GPU), 337.357 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  6.41ms  7.16ms  8.56ms  1.34 14.14K  9.26M
 chk_1 10.86ms 11.68ms 13.19ms  1.22 15.00K 13.57M
 chk_2  8.26ms  9.00ms 10.36ms  1.25 14.13K 11.39M
 chk_3  7.28ms  7.98ms  9.31ms  1.28 14.13K 10.00M
 chk_4  4.93ms  5.63ms  6.92ms  1.40 14.13K  6.52M
 chk_5  4.21ms  4.95ms  6.34ms  1.50 15.00K  5.01M
 chk_6  5.12ms  6.02ms  7.20ms  1.41 14.97K  6.66M
 chk_7  4.68ms  5.40ms  6.72ms  1.44 14.13K  6.09M
 chk_8  4.41ms  5.12ms  6.47ms  1.47 14.13K  5.38M
 chk_9  5.37ms  6.40ms  7.48ms  1.39 14.94K  6.63M
chk_10  3.15ms  3.89ms  5.29ms  1.68 15.00K  3.27M
chk_11  2.78ms  3.53ms  4.91ms  1.77 15.00K  2.66M
chk_12  3.78ms  4.47ms  5.81ms  1.54 14.13K  4.74M
chk_13  6.43ms  7.30ms  8.48ms  1.32 14.98K  8.57M
chk_14  4.01ms  4.73ms  6.12ms  1.53 15.00K  4.75M
chk_15  7.46ms  7.93ms  9.22ms  1.24 14.13K 10.11M
   Avg  5.57  6.32  7.65
   Max 10.86 11.68 13.19
   Min  2.78  3.53  4.91
 Ratio  3.91  3.31  2.68
   Var  4.19  4.21  4.27
Profiling takes 3.576 s
*** Node 0, starting model training...
*** Node 8, starting model training...
*** Node 1, starting model training...
*** Node 9, starting model training...
*** Node 2, starting model training...
*** Node 10, starting model training...
*** Node 3, starting model training...
*** Node 12, starting model training...
*** Node 11, starting model training...
*** Node 13, starting model training...
*** Node 14, starting model training...
*** Node 15, starting model training...
*** Node 4, starting model training...
*** Node 5, starting model training...
*** Node 6, starting model training...
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 421)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 14136, Num Local Vertices: 14997
Num Stages: 1 / 1
Node 9, Pipeline Input Tensor: NULL
Node 9, Pipeline Output Tensor: NULL
*** Node 9 owns the model-level partition [0, 421)
*** Node 9, constructing the helper classes...
Node 9, Local Vertex Begin: 129779, Num Local Vertices: 14944
Num Stages: 1 / 1
Node 11, Pipeline Input Tensor: NULL
Node 11, Pipeline Output Tensor: NULL
*** Node 11 owns the model-level partition [0, 421)
*** Node 11, constructing the helper classes...
Node 11, Local Vertex Begin: 159720, Num Local Vertices: 14997
Num Stages: 1 / 1
Node 12, Pipeline Input Tensor: NULL
Node 12, Pipeline Output Tensor: NULL
*** Node 12 owns the model-level partition [0, 421)
*** Node 12, constructing the helper classes...
Node 12, Local Vertex Begin: 174717, Num Local Vertices: 14135
Num Stages: 1 / 1
Node 10, Pipeline Input Tensor: NULL
Node 10, Pipeline Output Tensor: NULL
*** Node 10 owns the model-level partition [0, 421)
*** Node 10, constructing the helper classes...
Node 10, Local Vertex Begin: 144723, Num Local Vertices: 14997
Num Stages: 1 / 1
Node 15, Pipeline Input Tensor: NULL
Node 15, Pipeline Output Tensor: NULL
*** Node 15 owns the model-level partition [0, 421)
*** Node 15, constructing the helper classes...
Node 15, Local Vertex Begin: 218830, Num Local Vertices: 14135
Num Stages: 1 / 1
Node 13, Pipeline Input Tensor: NULL
Node 13, Pipeline Output Tensor: NULL
*** Node 13 owns the model-level partition [0, 421)
*** Node 13, constructing the helper classes...
Node 13, Local Vertex Begin: 188852, Num Local Vertices: 14981
Num Stages: 1 / 1
Node 14, Pipeline Input Tensor: NULL
Node 14, Pipeline Output Tensor: NULL
*** Node 14 owns the model-level partition [0, 421)
*** Node 14, constructing the helper classes...
Node 14, Local Vertex Begin: 203833, Num Local Vertices: 14997
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 421)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 86535, Num Local Vertices: 14975
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 421)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 57403, Num Local Vertices: 14135
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 421)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 71538, Num Local Vertices: 14997
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 421)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 14136
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 421)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 101510, Num Local Vertices: 14135
Num Stages: 1 / 1
Node 8, Pipeline Input Tensor: NULL
Node 8, Pipeline Output Tensor: NULL
*** Node 8 owns the model-level partition [0, 421)
*** Node 8, constructing the helper classes...
Node 8, Local Vertex Begin: 115645, Num Local Vertices: 14134
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 421)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 43268, Num Local Vertices: 14135
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 421)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 29133, Num Local Vertices: 14135
*** Node 0, setting up some other necessary information...
*** Node 15, setting up some other necessary information...
*** Node 11, setting up some other necessary information...
*** Node 13, setting up some other necessary information...
*** Node 9, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 14, setting up some other necessary information...
*** Node 10, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 12, setting up some other necessary information...
*** Node 8, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
+++++++++ Node 12 initializing the weights for op[0, 421)...
+++++++++ Node 0 initializing the weights for op[0, 421)...
+++++++++ Node 1 initializing the weights for op[0, 421)...
+++++++++ Node 5 initializing the weights for op[0, 421)...
+++++++++ Node 13 initializing the weights for op[0, 421)...
+++++++++ Node 11 initializing the weights for op[0, 421)...
+++++++++ Node 8 initializing the weights for op[0, 421)...
+++++++++ Node 15 initializing the weights for op[0, 421)...
+++++++++ Node 9 initializing the weights for op[0, 421)...
+++++++++ Node 10 initializing the weights for op[0, 421)...
+++++++++ Node 14 initializing the weights for op[0, 421)...
+++++++++ Node 2 initializing the weights for op[0, 421)...
+++++++++ Node 4 initializing the weights for op[0, 421)...
+++++++++ Node 3 initializing the weights for op[0, 421)...
+++++++++ Node 6 initializing the weights for op[0, 421)...
+++++++++ Node 7 initializing the weights for op[0, 421)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 12, discovering the vertices that will be sent across graph boundary...
Node 8, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 13, discovering the vertices that will be sent across graph boundary...
Node 9, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 14, discovering the vertices that will be sent across graph boundary...
Node 10, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 15, discovering the vertices that will be sent across graph boundary...
Node 11, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
Node 12, discovering the vertices that will be received across the graph boundary.
Node 8, discovering the vertices that will be received across the graph boundary.
The number of mirror vertices: 1294179
Node 0, discovering the vertices that will be received across the graph boundary.
Node 13, discovering the vertices that will be received across the graph boundary.
Node 9, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 14, discovering the vertices that will be received across the graph boundary.
Node 10, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 15, discovering the vertices that will be received across the graph boundary.
Node 11, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 12, starting task scheduling...
*** Node 8, starting task scheduling...
*** Node 0, starting task scheduling...



*** Node 4, starting task scheduling...
*** Node 13, starting task scheduling...
*** Node 9, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 14, starting task scheduling...
*** Node 10, starting task scheduling...
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 15, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 11, starting task scheduling...
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 4.1846	TrainAcc 0.1557	ValidAcc 0.1458	TestAcc 0.1444	BestValid 0.1458
	Epoch 50:	Loss 0.7011	TrainAcc 0.9031	ValidAcc 0.9143	TestAcc 0.9126	BestValid 0.9143
****** Epoch Time (Excluding Evaluation Cost): 0.912 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 2.311 ms (Max: 3.524, Min: 0.035, Sum: 36.972)
Cluster-Wide Average, Compute: 150.078 ms (Max: 262.160, Min: 92.840, Sum: 2401.243)
Cluster-Wide Average, Communication-Layer: 0.008 ms (Max: 0.009, Min: 0.007, Sum: 0.134)
Cluster-Wide Average, Bubble-Imbalance: 0.015 ms (Max: 0.018, Min: 0.014, Sum: 0.243)
Cluster-Wide Average, Communication-Graph: 743.493 ms (Max: 799.410, Min: 633.735, Sum: 11895.887)
Cluster-Wide Average, Optimization: 14.189 ms (Max: 14.262, Min: 14.116, Sum: 227.028)
Cluster-Wide Average, Others: 1.778 ms (Max: 1.932, Min: 1.601, Sum: 28.454)
****** Breakdown Sum: 911.873 ms ******
Cluster-Wide Average, GPU Memory Consumption: 7.372 GB (Max: 8.393, Min: 7.288, Sum: 117.953)
Cluster-Wide Average, Graph-Level Communication Throughput: 23.226 Gbps (Max: 42.957, Min: 13.827, Sum: 371.612)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 30.856 GB
Weight-sync communication (cluster-wide, per-epoch): 0.079 GB
Total communication (cluster-wide, per-epoch): 30.935 GB
****** Accuracy Results ******
Highest valid_acc: 0.9143
Target test_acc: 0.9126
Epoch to reach the target acc: 49
[MPI Rank 12] Success 
[MPI Rank 8] Success 
[MPI Rank 0] Success 
[MPI Rank 13] Success 
[MPI Rank 9] Success 
[MPI Rank 1] Success 
[MPI Rank 4] Success 
[MPI Rank 14] Success 
[MPI Rank 10] Success 
[MPI Rank 2] Success 
[MPI Rank 5] Success 
[MPI Rank 15] Success 
[MPI Rank 11] Success 
[MPI Rank 3] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
