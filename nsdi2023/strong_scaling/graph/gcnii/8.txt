Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
DONE MPI INIT
DONE MPI INIT
Initialized node 1 on machine gnerv2
DONE MPI INIT
Initialized node 2 on machine gnerv2
Initialized node 0 on machine gnerv2
DONE MPI INIT
Initialized node 3 on machine gnerv2
DONE MPI INITDONE MPI INIT
Initialized node 7 on machine gnerv3
DONE MPI INIT
Initialized node 5 on machine gnerv3
DONE MPI INIT
Initialized node 6 on machine gnerv3

Initialized node 4 on machine gnerv3
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 2.374 seconds.
Building the CSC structure...
        It takes 2.409 seconds.
Building the CSC structure...
        It takes 2.430 seconds.
Building the CSC structure...
        It takes 2.444 seconds.
Building the CSC structure...
        It takes 2.459 seconds.
Building the CSC structure...
        It takes 2.512 seconds.
Building the CSC structure...
        It takes 2.615 seconds.
Building the CSC structure...
        It takes 2.690 seconds.
Building the CSC structure...
        It takes 2.307 seconds.
        It takes 2.327 seconds.
        It takes 2.404 seconds.
        It takes 2.407 seconds.
        It takes 2.393 seconds.
        It takes 2.365 seconds.
        It takes 2.386 seconds.
        It takes 2.480 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.269 seconds.
Building the Label Vector...
        It takes 0.040 seconds.
        It takes 0.304 seconds.
Building the Label Vector...
        It takes 0.033 seconds.
        It takes 0.304 seconds.
Building the Label Vector...
        It takes 0.306 seconds.
Building the Label Vector...
        It takes 0.038 seconds.
        It takes 0.042 seconds.
        It takes 0.297 seconds.
Building the Label Vector...
Building the Feature Vector...
        It takes 0.037 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/reddit/8_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
GCN hyper-parameter alpha: 0.100000
GCN hyper-parameter lambda: 0.500000
Number of classes: 41
Number of feature dimensions: 602
Number of vertices: 232965
Number of GPUs: 8
Building the Feature Vector...
        It takes 0.262 seconds.
Building the Label Vector...
        It takes 0.037 seconds.
        It takes 0.285 seconds.
Building the Label Vector...
        It takes 0.042 seconds.
Building the Feature Vector...
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
        It takes 0.282 seconds.
Building the Label Vector...
        It takes 0.033 seconds.
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
train nodes 153431, valid nodes 23831, test nodes 55703
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 29120) 1-[29120, 58241) 2-[58241, 87362) 3-[87362, 116483) 4-[116483, 145604) 5-[145604, 174724) 6-[174724, 203845) 7-[203845, 232965)
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 29121
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 57.344 Gbps (per GPU), 458.755 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 57.073 Gbps (per GPU), 456.584 Gbps (aggregated)
The layer-level communication performance: 57.063 Gbps (per GPU), 456.508 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 56.817 Gbps (per GPU), 454.533 Gbps (aggregated)
The layer-level communication performance: 56.792 Gbps (per GPU), 454.333 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 56.594 Gbps (per GPU), 452.751 Gbps (aggregated)
The layer-level communication performance: 56.551 Gbps (per GPU), 452.405 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 56.516 Gbps (per GPU), 452.130 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 157.213 Gbps (per GPU), 1257.708 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.190 Gbps (per GPU), 1257.521 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.205 Gbps (per GPU), 1257.641 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.214 Gbps (per GPU), 1257.710 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.208 Gbps (per GPU), 1257.662 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.170 Gbps (per GPU), 1257.360 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.234 Gbps (per GPU), 1257.875 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 157.208 Gbps (per GPU), 1257.662 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 100.383 Gbps (per GPU), 803.064 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.383 Gbps (per GPU), 803.064 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.385 Gbps (per GPU), 803.077 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.383 Gbps (per GPU), 803.064 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.384 Gbps (per GPU), 803.071 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.384 Gbps (per GPU), 803.071 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.383 Gbps (per GPU), 803.064 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.385 Gbps (per GPU), 803.077 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 36.678 Gbps (per GPU), 293.425 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.677 Gbps (per GPU), 293.415 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.677 Gbps (per GPU), 293.418 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.678 Gbps (per GPU), 293.425 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.677 Gbps (per GPU), 293.413 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.677 Gbps (per GPU), 293.414 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.678 Gbps (per GPU), 293.425 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 36.678 Gbps (per GPU), 293.422 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  2.52ms  9.53ms  9.82ms  3.90 29.12K 14.23M
 chk_1  2.52ms  5.19ms  5.51ms  2.19 29.12K  6.56M
 chk_2  2.53ms 16.66ms 16.91ms  6.67 29.12K 24.68M
 chk_3  2.53ms 16.75ms 17.13ms  6.77 29.12K 22.95M
 chk_4  2.54ms  4.99ms  5.37ms  2.12 29.12K  6.33M
 chk_5  2.54ms  8.91ms  9.32ms  3.67 29.12K 12.05M
 chk_6  2.54ms 10.04ms 10.42ms  4.10 29.12K 14.60M
 chk_7  2.54ms  9.21ms  9.67ms  3.81 29.12K 13.21M
   Avg  2.53 10.16 10.52
   Max  2.54 16.75 17.13
   Min  2.52  4.99  5.37
 Ratio  1.01  3.36  3.19
   Var  0.00 17.50 17.35
Profiling takes 2.157 s
*** Node 0, starting model training...
*** Node 2, starting model training...
*** Node 4, starting model training...
*** Node 6, starting model training...
*** Node 5, starting model training...
*** Node 3, starting model training...
*** Node 7, starting model training...
*** Node 1, starting model training...
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 233)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 29120
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 233)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 174724, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 233)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 145604, Num Local Vertices: 29120
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 233)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 203845, Num Local Vertices: 29120
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 233)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 58241, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 233)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 87362, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 233)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 29120, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 233)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 116483, Num Local Vertices: 29121
*** Node 3, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
+++++++++ Node 1 initializing the weights for op[0, 233)...
+++++++++ Node 6 initializing the weights for op[0, 233)...
+++++++++ Node 0 initializing the weights for op[0, 233)...
+++++++++ Node 5 initializing the weights for op[0, 233)...
+++++++++ Node 2 initializing the weights for op[0, 233)...
+++++++++ Node 3 initializing the weights for op[0, 233)...
+++++++++ Node 7 initializing the weights for op[0, 233)...
+++++++++ Node 4 initializing the weights for op[0, 233)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 607420
Node 0, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 3.9197	TrainAcc 0.0822	ValidAcc 0.0739	TestAcc 0.0736	BestValid 0.0739
	Epoch 50:	Loss 1.7023	TrainAcc 0.6900	ValidAcc 0.7117	TestAcc 0.7060	BestValid 0.7117
****** Epoch Time (Excluding Evaluation Cost): 0.873 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 3.126 ms (Max: 4.929, Min: 0.040, Sum: 25.012)
Cluster-Wide Average, Compute: 230.305 ms (Max: 369.080, Min: 122.854, Sum: 1842.438)
Cluster-Wide Average, Communication-Layer: 0.008 ms (Max: 0.009, Min: 0.008, Sum: 0.068)
Cluster-Wide Average, Bubble-Imbalance: 0.015 ms (Max: 0.017, Min: 0.014, Sum: 0.120)
Cluster-Wide Average, Communication-Graph: 636.091 ms (Max: 741.835, Min: 500.300, Sum: 5088.728)
Cluster-Wide Average, Optimization: 3.088 ms (Max: 3.173, Min: 3.026, Sum: 24.702)
Cluster-Wide Average, Others: 0.840 ms (Max: 0.904, Min: 0.813, Sum: 6.720)
****** Breakdown Sum: 873.473 ms ******
Cluster-Wide Average, GPU Memory Consumption: 8.848 GB (Max: 9.563, Min: 8.729, Sum: 70.786)
Cluster-Wide Average, Graph-Level Communication Throughput: 26.618 Gbps (Max: 49.332, Min: 11.530, Sum: 212.944)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 14.482 GB
Weight-sync communication (cluster-wide, per-epoch): 0.020 GB
Total communication (cluster-wide, per-epoch): 14.502 GB
****** Accuracy Results ******
Highest valid_acc: 0.7117
Target test_acc: 0.7060
Epoch to reach the target acc: 49
[MPI Rank 0] Success 
[MPI Rank 1] Success 
[MPI Rank 4] Success 
[MPI Rank 2] Success 
[MPI Rank 5] Success 
[MPI Rank 3] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
