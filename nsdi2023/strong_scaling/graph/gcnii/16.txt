Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
DONE MPI INIT
Initialized node 8 on machine gnerv7
DONE MPI INIT
Initialized node 10 on machine gnerv7
DONE MPI INITDONE MPI INIT
Initialized node 11 on machine gnerv7

Initialized node 9 on machine gnerv7
DONE MPI INIT
Initialized node 12 on machine gnerv8
DONE MPI INIT
Initialized node 13 on machine gnerv8
DONE MPI INIT
DONE MPI INIT
Initialized node 14 on machine gnerv8
Initialized node 15 on machine gnerv8
DONE MPI INIT
DONE MPI INIT
DONE MPI INIT
Initialized node 5 on machine gnerv3
Initialized node 7 on machine gnerv3
Initialized node 4 on machine gnerv3
DONE MPI INIT
Initialized node 6 on machine gnerv3
DONE MPI INIT
DONE MPI INITInitialized node 0 on machine gnerv2
DONE MPI INIT
Initialized node 1 on machine gnerv2
DONE MPI INIT

Initialized node 3 on machine gnerv2
Initialized node 2 on machine gnerv2
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 1.859 seconds.
Building the CSC structure...
        It takes 2.113 seconds.
Building the CSC structure...
        It takes 2.327 seconds.
Building the CSC structure...
        It takes 2.353 seconds.
Building the CSC structure...
        It takes 2.375 seconds.
Building the CSC structure...
        It takes 2.400 seconds.
Building the CSC structure...
        It takes 2.413 seconds.
Building the CSC structure...
        It takes 2.443 seconds.
Building the CSC structure...
        It takes 2.491 seconds.
Building the CSC structure...
        It takes 2.505 seconds.
Building the CSC structure...
        It takes 2.540 seconds.
Building the CSC structure...
        It takes 2.560 seconds.
Building the CSC structure...
        It takes 2.607 seconds.
Building the CSC structure...
        It takes 2.632 seconds.
Building the CSC structure...
        It takes 2.665 seconds.
Building the CSC structure...
        It takes 2.757 seconds.
Building the CSC structure...
        It takes 1.804 seconds.
        It takes 1.907 seconds.
        It takes 2.309 seconds.
Building the Feature Vector...
        It takes 2.349 seconds.
        It takes 2.296 seconds.
        It takes 2.337 seconds.
        It takes 2.374 seconds.
        It takes 2.383 seconds.
        It takes 0.265 seconds.
Building the Label Vector...
        It takes 2.346 seconds.
        It takes 2.439 seconds.
        It takes 2.388 seconds.
        It takes 2.444 seconds.
        It takes 2.310 seconds.
        It takes 0.037 seconds.
        It takes 2.358 seconds.
        It takes 2.340 seconds.
        It takes 2.306 seconds.
Building the Feature Vector...
        It takes 0.269 seconds.
Building the Label Vector...
        It takes 0.032 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Building the Feature Vector...
        It takes 0.241 seconds.
Building the Label Vector...
Building the Feature Vector...
        It takes 0.037 seconds.
Building the Feature Vector...
        It takes 0.289 seconds.
Building the Label Vector...
        It takes 0.285 seconds.
Building the Label Vector...
Building the Feature Vector...
        It takes 0.039 seconds.
        It takes 0.039 seconds.
        It takes 0.275 seconds.
Building the Label Vector...
Building the Feature Vector...
        It takes 0.036 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.283 seconds.
Building the Label Vector...
        It takes 0.366 seconds.
Building the Label Vector...
232965, 114848857, 114848857
        It takes 0.352 seconds.
Building the Label Vector...
Number of vertices per chunk: 14561
        It takes 0.033 seconds.
        It takes 0.284 seconds.
Building the Label Vector...
        It takes 0.035 seconds.
        It takes 0.046 seconds.
        It takes 0.032 seconds.
Building the Feature Vector...
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
        It takes 0.313 seconds.
Building the Label Vector...
        It takes 0.033 seconds.
Building the Feature Vector...
        It takes 0.287 seconds.
Building the Label Vector...
        It takes 0.289 seconds.
Building the Label Vector...
        It takes 0.039 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/reddit/16_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
GCN hyper-parameter alpha: 0.100000
GCN hyper-parameter lambda: 0.500000
Number of classes: 41
Number of feature dimensions: 602
Number of vertices: 232965
Number of GPUs: 16
        It takes 0.031 seconds.
        It takes 0.292 seconds.
Building the Label Vector...
        It takes 0.032 seconds.
        It takes 0.263 seconds.
Building the Label Vector...
        It takes 0.030 seconds.
        It takes 0.302 seconds.
Building the Label Vector...
        It takes 0.033 seconds.
232965, 114848857, 114848857
Number of vertices per chunk: 14561
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 14561
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 14561
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 14561
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 14561
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
train nodes 153431, valid nodes 23831, test nodes 55703
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 16): 0-[0, 14136) 1-[14136, 29133) 2-[29133, 43268) 3-[43268, 57403) 4-[57403, 71538) 5-[71538, 86535) 6-[86535, 101510) 7-[101510, 115645) 8-[115645, 129779) ... 15-[218830, 232965)
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
GPU 0, layer [0, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
csr in-out ready !Start Cost Model Initialization...
232965, 114848857, 114848857
Number of vertices per chunk: 14561
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 54.567 Gbps (per GPU), 873.074 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 54.325 Gbps (per GPU), 869.203 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 54.161 Gbps (per GPU), 866.574 Gbps (aggregated)
The layer-level communication performance: 54.133 Gbps (per GPU), 866.128 Gbps (aggregated)
The layer-level communication performance: 54.047 Gbps (per GPU), 864.749 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 54.024 Gbps (per GPU), 864.386 Gbps (aggregated)
The layer-level communication performance: 54.045 Gbps (per GPU), 864.722 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 53.924 Gbps (per GPU), 862.790 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 53.868 Gbps (per GPU), 861.890 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 53.758 Gbps (per GPU), 860.133 Gbps (aggregated)
The layer-level communication performance: 53.783 Gbps (per GPU), 860.531 Gbps (aggregated)
The layer-level communication performance: 53.743 Gbps (per GPU), 859.885 Gbps (aggregated)
The layer-level communication performance: 53.704 Gbps (per GPU), 859.260 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 53.574 Gbps (per GPU), 857.187 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 53.485 Gbps (per GPU), 855.753 Gbps (aggregated)
The layer-level communication performance: 53.462 Gbps (per GPU), 855.386 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 156.463 Gbps (per GPU), 2503.408 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.484 Gbps (per GPU), 2503.738 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.475 Gbps (per GPU), 2503.595 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.486 Gbps (per GPU), 2503.782 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.481 Gbps (per GPU), 2503.688 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.481 Gbps (per GPU), 2503.691 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.478 Gbps (per GPU), 2503.642 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.460 Gbps (per GPU), 2503.362 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.481 Gbps (per GPU), 2503.688 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.486 Gbps (per GPU), 2503.782 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.475 Gbps (per GPU), 2503.595 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.489 Gbps (per GPU), 2503.828 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.483 Gbps (per GPU), 2503.735 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.483 Gbps (per GPU), 2503.732 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.492 Gbps (per GPU), 2503.875 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.349 Gbps (per GPU), 2501.588 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 100.902 Gbps (per GPU), 1614.436 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.900 Gbps (per GPU), 1614.397 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.902 Gbps (per GPU), 1614.436 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.900 Gbps (per GPU), 1614.397 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.899 Gbps (per GPU), 1614.383 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.898 Gbps (per GPU), 1614.371 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.899 Gbps (per GPU), 1614.384 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.899 Gbps (per GPU), 1614.384 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.901 Gbps (per GPU), 1614.410 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.899 Gbps (per GPU), 1614.384 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.901 Gbps (per GPU), 1614.423 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.900 Gbps (per GPU), 1614.397 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.889 Gbps (per GPU), 1614.229 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.900 Gbps (per GPU), 1614.399 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.901 Gbps (per GPU), 1614.410 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.901 Gbps (per GPU), 1614.410 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 28.634 Gbps (per GPU), 458.145 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.634 Gbps (per GPU), 458.148 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.635 Gbps (per GPU), 458.155 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.634 Gbps (per GPU), 458.139 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.634 Gbps (per GPU), 458.136 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.634 Gbps (per GPU), 458.147 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.635 Gbps (per GPU), 458.153 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.633 Gbps (per GPU), 458.131 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.633 Gbps (per GPU), 458.132 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.634 Gbps (per GPU), 458.137 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.635 Gbps (per GPU), 458.152 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.634 Gbps (per GPU), 458.144 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.634 Gbps (per GPU), 458.137 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.634 Gbps (per GPU), 458.147 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.635 Gbps (per GPU), 458.152 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.633 Gbps (per GPU), 458.123 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
The graph-level communication performance (supernode = 16): 21.110 Gbps (per GPU), 337.753 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.110 Gbps (per GPU), 337.755 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.109 Gbps (per GPU), 337.749 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.109 Gbps (per GPU), 337.746 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.110 Gbps (per GPU), 337.755 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.109 Gbps (per GPU), 337.747 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.109 Gbps (per GPU), 337.751 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.109 Gbps (per GPU), 337.752 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.110 Gbps (per GPU), 337.756 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.109 Gbps (per GPU), 337.747 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.109 Gbps (per GPU), 337.750 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.110 Gbps (per GPU), 337.759 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.109 Gbps (per GPU), 337.749 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.110 Gbps (per GPU), 337.754 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.109 Gbps (per GPU), 337.746 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 21.110 Gbps (per GPU), 337.755 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  1.33ms  6.11ms  6.56ms  4.94 14.14K  9.26M
 chk_1  1.41ms 10.55ms 10.76ms  7.63 15.00K 13.57M
 chk_2  1.33ms  7.93ms  8.15ms  6.13 14.13K 11.39M
 chk_3  1.33ms  6.93ms  7.16ms  5.37 14.13K 10.00M
 chk_4  1.33ms  4.80ms  4.85ms  3.64 14.13K  6.52M
 chk_5  1.42ms  3.73ms  4.03ms  2.84 15.00K  5.01M
 chk_6  1.41ms  5.03ms  4.99ms  3.58 14.97K  6.66M
 chk_7  1.33ms  4.27ms  4.51ms  3.39 14.13K  6.09M
 chk_8  1.33ms  4.24ms  4.25ms  3.18 14.13K  5.38M
 chk_9  1.40ms  4.97ms  5.22ms  3.72 14.94K  6.63M
chk_10  1.42ms  2.80ms  3.02ms  2.13 15.00K  3.27M
chk_11  1.42ms  2.70ms  2.64ms  1.90 15.00K  2.66M
chk_12  1.33ms  3.38ms  3.62ms  2.71 14.13K  4.74M
chk_13  1.42ms  5.99ms  6.22ms  4.39 14.98K  8.57M
chk_14  1.42ms  3.58ms  3.84ms  2.71 15.00K  4.75M
chk_15  1.33ms  6.95ms  7.09ms  5.32 14.13K 10.11M
   Avg  1.37  5.25  5.43
   Max  1.42 10.55 10.76
   Min  1.33  2.70  2.64
 Ratio  1.07  3.91  4.08
   Var  0.00  4.11  4.23
Profiling takes 2.255 s
*** Node 8, starting model training...
*** Node 0, starting model training...
*** Node 12, starting model training...
*** Node 9, starting model training...
*** Node 4, starting model training...
*** Node 1, starting model training...
*** Node 13, starting model training...
*** Node 10, starting model training...
*** Node 5, starting model training...
*** Node 2, starting model training...
*** Node 14, starting model training...
*** Node 11, starting model training...
*** Node 6, starting model training...
*** Node 3, starting model training...
*** Node 15, starting model training...
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 15, Pipeline Input Tensor: NULL
Node 15, Pipeline Output Tensor: NULL
*** Node 15 owns the model-level partition [0, 233)
*** Node 15, constructing the helper classes...
Node 15, Local Vertex Begin: 218830, Num Local Vertices: 14135
Num Stages: 1 / 1
Node 10, Pipeline Input Tensor: NULL
Node 10, Pipeline Output Tensor: NULL
*** Node 10 owns the model-level partition [0, 233)
*** Node 10, constructing the helper classes...
Node 10, Local Vertex Begin: 144723, Num Local Vertices: 14997
Num Stages: 1 / 1
Node 8, Pipeline Input Tensor: NULL
Node 8, Pipeline Output Tensor: NULL
*** Node 8 owns the model-level partition [0, 233)
*** Node 8, constructing the helper classes...
Node 8, Local Vertex Begin: 115645, Num Local Vertices: 14134
Num Stages: 1 / 1
Node 9, Pipeline Input Tensor: NULL
Node 9, Pipeline Output Tensor: NULL
*** Node 9 owns the model-level partition [0, 233)
*** Node 9, constructing the helper classes...
Node 9, Local Vertex Begin: 129779, Num Local Vertices: 14944
Num Stages: 1 / 1
Node 13, Pipeline Input Tensor: NULL
Node 13, Pipeline Output Tensor: NULL
*** Node 13 owns the model-level partition [0, 233)
*** Node 13, constructing the helper classes...
Node 13, Local Vertex Begin: 188852, Num Local Vertices: 14981
Num Stages: 1 / 1
Node 11, Pipeline Input Tensor: NULL
Node 11, Pipeline Output Tensor: NULL
*** Node 11 owns the model-level partition [0, 233)
*** Node 11, constructing the helper classes...
Node 11, Local Vertex Begin: 159720, Num Local Vertices: 14997
Num Stages: 1 / 1
Node 14, Pipeline Input Tensor: NULL
Node 14, Pipeline Output Tensor: NULL
*** Node 14 owns the model-level partition [0, 233)
*** Node 14, constructing the helper classes...
Node 14, Local Vertex Begin: 203833, Num Local Vertices: 14997
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 233)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 71538, Num Local Vertices: 14997
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 233)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 101510, Num Local Vertices: 14135
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 233)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 86535, Num Local Vertices: 14975
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 233)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 14136, Num Local Vertices: 14997
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 233)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 57403, Num Local Vertices: 14135
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 233)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 14136
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 233)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 43268, Num Local Vertices: 14135
Num Stages: 1 / 1
Node 12, Pipeline Input Tensor: NULL
Node 12, Pipeline Output Tensor: NULL
*** Node 12 owns the model-level partition [0, 233)
*** Node 12, constructing the helper classes...
Node 12, Local Vertex Begin: 174717, Num Local Vertices: 14135
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 233)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 29133, Num Local Vertices: 14135
*** Node 13, setting up some other necessary information...
*** Node 14, setting up some other necessary information...
*** Node 8, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 15, setting up some other necessary information...
*** Node 11, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 12, setting up some other necessary information...
*** Node 9, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 10, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
+++++++++ Node 13 initializing the weights for op[0, 233)...
+++++++++ Node 9 initializing the weights for op[0, 233)...
+++++++++ Node 4 initializing the weights for op[0, 233)...
+++++++++ Node 8 initializing the weights for op[0, 233)...
+++++++++ Node 5 initializing the weights for op[0, 233)...
+++++++++ Node 11 initializing the weights for op[0, 233)...
+++++++++ Node 12 initializing the weights for op[0, 233)...
+++++++++ Node 14 initializing the weights for op[0, 233)...
+++++++++ Node 10 initializing the weights for op[0, 233)...
+++++++++ Node 7 initializing the weights for op[0, 233)...
+++++++++ Node 6 initializing the weights for op[0, 233)...
+++++++++ Node 1 initializing the weights for op[0, 233)...
+++++++++ Node 0 initializing the weights for op[0, 233)...
+++++++++ Node 2 initializing the weights for op[0, 233)...
+++++++++ Node 15 initializing the weights for op[0, 233)...
+++++++++ Node 3 initializing the weights for op[0, 233)...
Node 12, discovering the vertices that will be sent across graph boundary...
Node 8, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 13, discovering the vertices that will be sent across graph boundary...
Node 9, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 14, discovering the vertices that will be sent across graph boundary...
Node 10, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 15, discovering the vertices that will be sent across graph boundary...
Node 11, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 8, discovering the vertices that will be received across the graph boundary.
The number of mirror vertices: 1294179
Node 0, discovering the vertices that will be received across the graph boundary.
Node 12, discovering the vertices that will be received across the graph boundary.
Node 9, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 13, discovering the vertices that will be received across the graph boundary.
Node 10, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 14, discovering the vertices that will be received across the graph boundary.
Node 11, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 15, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 12, starting task scheduling...
*** Node 8, starting task scheduling...
*** Node 4, starting task scheduling...
*** Node 0, starting task scheduling...



The learning rate specified by the user: 0.001000000
*** Node 13, starting task scheduling...
*** Node 9, starting task scheduling...
*** Node 5, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 14, starting task scheduling...
*** Node 10, starting task scheduling...
*** Node 6, starting task scheduling...
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 15, starting task scheduling...
*** Node 11, starting task scheduling...
*** Node 7, starting task scheduling...
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 3.9178	TrainAcc 0.0821	ValidAcc 0.0737	TestAcc 0.0737	BestValid 0.0737
	Epoch 50:	Loss 1.7051	TrainAcc 0.6903	ValidAcc 0.7117	TestAcc 0.7060	BestValid 0.7117
****** Epoch Time (Excluding Evaluation Cost): 0.873 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 2.310 ms (Max: 3.479, Min: 0.041, Sum: 36.956)
Cluster-Wide Average, Compute: 120.772 ms (Max: 232.612, Min: 62.573, Sum: 1932.356)
Cluster-Wide Average, Communication-Layer: 0.008 ms (Max: 0.010, Min: 0.007, Sum: 0.131)
Cluster-Wide Average, Bubble-Imbalance: 0.015 ms (Max: 0.017, Min: 0.014, Sum: 0.240)
Cluster-Wide Average, Communication-Graph: 742.859 ms (Max: 799.798, Min: 633.325, Sum: 11885.745)
Cluster-Wide Average, Optimization: 5.823 ms (Max: 5.866, Min: 5.774, Sum: 93.175)
Cluster-Wide Average, Others: 0.837 ms (Max: 0.930, Min: 0.775, Sum: 13.394)
****** Breakdown Sum: 872.625 ms ******
Cluster-Wide Average, GPU Memory Consumption: 6.376 GB (Max: 7.389, Min: 6.292, Sum: 102.023)
Cluster-Wide Average, Graph-Level Communication Throughput: 23.256 Gbps (Max: 43.029, Min: 13.857, Sum: 372.089)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 30.856 GB
Weight-sync communication (cluster-wide, per-epoch): 0.043 GB
Total communication (cluster-wide, per-epoch): 30.899 GB
****** Accuracy Results ******
Highest valid_acc: 0.7117
Target test_acc: 0.7060
Epoch to reach the target acc: 49
[MPI Rank 0] Success 
[MPI Rank 12] Success 
[MPI Rank 8] Success 
[MPI Rank 4] Success 
[MPI Rank 1] Success 
[MPI Rank 13] Success 
[MPI Rank 9] Success 
[MPI Rank 5] Success 
[MPI Rank 2] Success 
[MPI Rank 14] Success 
[MPI Rank 10] Success 
[MPI Rank 6] Success 
[MPI Rank 3] Success 
[MPI Rank 15] Success 
[MPI Rank 11] Success 
[MPI Rank 7] Success 
