Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INITDONE MPI INIT
Initialized node 10 on machine gnerv7
DONE MPI INIT
Initialized node 11 on machine gnerv7

Initialized node 9 on machine gnerv7
DONE MPI INIT
Initialized node 8 on machine gnerv7
DONE MPI INIT
DONE MPI INIT
Initialized node 12 on machine gnerv8
Initialized node 13 on machine gnerv8
DONE MPI INIT
Initialized node 14 on machine gnerv8
DONE MPI INIT
Initialized node 15 on machine gnerv8
DONE MPI INIT
Initialized node 5 on machine gnerv3
DONE MPI INIT
Initialized node 6 on machine gnerv3
DONE MPI INIT
Initialized node 7 on machine gnerv3
DONE MPI INIT
Initialized node 4 on machine gnerv3
DONE MPI INIT
DONE MPI INIT
Initialized node 1 on machine gnerv2
DONE MPI INIT
Initialized node 2 on machine gnerv2
Initialized node 0 on machine gnerv2
DONE MPI INIT
Initialized node 3 on machine gnerv2
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 1.929 seconds.
Building the CSC structure...
        It takes 2.026 seconds.
Building the CSC structure...
        It takes 2.110 seconds.
Building the CSC structure...
        It takes 2.378 seconds.
Building the CSC structure...
        It takes 2.385 seconds.
Building the CSC structure...
        It takes 2.379 seconds.
Building the CSC structure...
        It takes 2.407 seconds.
Building the CSC structure...
        It takes 2.424 seconds.
Building the CSC structure...
        It takes 2.450 seconds.
Building the CSC structure...
        It takes 2.432 seconds.
Building the CSC structure...
        It takes 2.442 seconds.
Building the CSC structure...
        It takes 2.496 seconds.
Building the CSC structure...
        It takes 2.512 seconds.
Building the CSC structure...
        It takes 2.565 seconds.
Building the CSC structure...
        It takes 2.631 seconds.
Building the CSC structure...
        It takes 2.708 seconds.
Building the CSC structure...
        It takes 1.864 seconds.
        It takes 1.840 seconds.
        It takes 1.918 seconds.
        It takes 2.261 seconds.
        It takes 2.334 seconds.
        It takes 2.361 seconds.
Building the Feature Vector...
        It takes 2.409 seconds.
        It takes 2.363 seconds.
        It takes 2.377 seconds.
        It takes 2.384 seconds.
        It takes 2.398 seconds.
        It takes 2.442 seconds.
        It takes 2.447 seconds.
Building the Feature Vector...
        It takes 2.387 seconds.
        It takes 2.475 seconds.
        It takes 0.268 seconds.
Building the Label Vector...
        It takes 0.031 seconds.
        It takes 2.424 seconds.
Building the Feature Vector...
        It takes 0.276 seconds.
Building the Label Vector...
        It takes 0.037 seconds.
        It takes 0.277 seconds.
Building the Label Vector...
        It takes 0.032 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.275 seconds.
Building the Label Vector...
Building the Feature Vector...
        It takes 0.038 seconds.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Building the Feature Vector...
        It takes 0.291 seconds.
Building the Label Vector...
        It takes 0.271 seconds.
Building the Label Vector...
        It takes 0.288 seconds.
Building the Label Vector...
        It takes 0.034 seconds.
        It takes 0.034 seconds.
        It takes 0.038 seconds.
        It takes 0.320 seconds.
Building the Label Vector...
        It takes 0.310 seconds.
Building the Label Vector...
        It takes 0.035 seconds.
        It takes 0.045 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/reddit/16_parts
The number of GCN layers: 32
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
Number of classes: 41
Number of feature dimensions: 602
Number of vertices: 232965
Number of GPUs: 16
Building the Feature Vector...
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Building the Feature Vector...
        It takes 0.368 seconds.
Building the Label Vector...
        It takes 0.350 seconds.
Building the Label Vector...
        It takes 0.045 seconds.
        It takes 0.043 seconds.
        It takes 0.282 seconds.
Building the Label Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.032 seconds.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 14561
        It takes 0.260 seconds.
Building the Label Vector...
        It takes 0.334 seconds.
Building the Label Vector...
        It takes 0.034 seconds.
        It takes 0.035 seconds.
        It takes 0.289 seconds.
Building the Label Vector...
        It takes 0.289 seconds.
Building the Label Vector...
232965, 114848857, 114848857
Number of vertices per chunk: 14561
        It takes 0.032 seconds.
        It takes 0.031 seconds.
232965, 114848857, 114848857
Number of vertices per chunk: 14561
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
train nodes 153431, valid nodes 23831, test nodes 55703
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 16): 0-[0, 14136) 1-[14136, 29133) 2-[29133, 43268) 3-[43268, 57403) 4-[57403, 71538) 5-[71538, 86535) 6-[86535, 101510) 7-[101510, 115645) 8-[115645, 129779) ... 15-[218830, 232965)
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 14561
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
232965, 114848857, 114848857
Number of vertices per chunk: 14561
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 58.912 Gbps (per GPU), 942.598 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.634 Gbps (per GPU), 938.148 Gbps (aggregated)
The layer-level communication performance: 58.514 Gbps (per GPU), 936.219 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.467 Gbps (per GPU), 935.473 Gbps (aggregated)
The layer-level communication performance: 58.462 Gbps (per GPU), 935.392 Gbps (aggregated)
The layer-level communication performance: 58.490 Gbps (per GPU), 935.840 Gbps (aggregated)
The layer-level communication performance: 58.419 Gbps (per GPU), 934.704 Gbps (aggregated)
The layer-level communication performance: 58.385 Gbps (per GPU), 934.163 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.270 Gbps (per GPU), 932.328 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.246 Gbps (per GPU), 931.937 Gbps (aggregated)
The layer-level communication performance: 58.217 Gbps (per GPU), 931.479 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.116 Gbps (per GPU), 929.850 Gbps (aggregated)
The layer-level communication performance: 58.094 Gbps (per GPU), 929.512 Gbps (aggregated)
The layer-level communication performance: 58.065 Gbps (per GPU), 929.044 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 57.971 Gbps (per GPU), 927.529 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 57.945 Gbps (per GPU), 927.121 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 159.388 Gbps (per GPU), 2550.213 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.380 Gbps (per GPU), 2550.076 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.364 Gbps (per GPU), 2549.826 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.373 Gbps (per GPU), 2549.971 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.343 Gbps (per GPU), 2549.487 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.382 Gbps (per GPU), 2550.118 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.364 Gbps (per GPU), 2549.826 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.376 Gbps (per GPU), 2550.022 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.385 Gbps (per GPU), 2550.165 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.407 Gbps (per GPU), 2550.504 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.367 Gbps (per GPU), 2549.873 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.376 Gbps (per GPU), 2550.019 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.346 Gbps (per GPU), 2549.535 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.382 Gbps (per GPU), 2550.116 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.364 Gbps (per GPU), 2549.826 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 159.388 Gbps (per GPU), 2550.213 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 100.914 Gbps (per GPU), 1614.630 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.912 Gbps (per GPU), 1614.591 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.914 Gbps (per GPU), 1614.630 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.917 Gbps (per GPU), 1614.669 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.914 Gbps (per GPU), 1614.619 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.914 Gbps (per GPU), 1614.617 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.914 Gbps (per GPU), 1614.630 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.914 Gbps (per GPU), 1614.630 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.915 Gbps (per GPU), 1614.640 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.914 Gbps (per GPU), 1614.630 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.914 Gbps (per GPU), 1614.617 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.915 Gbps (per GPU), 1614.643 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.914 Gbps (per GPU), 1614.617 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.913 Gbps (per GPU), 1614.604 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.915 Gbps (per GPU), 1614.643 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.911 Gbps (per GPU), 1614.578 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 28.408 Gbps (per GPU), 454.529 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.408 Gbps (per GPU), 454.530 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.408 Gbps (per GPU), 454.536 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.408 Gbps (per GPU), 454.534 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.408 Gbps (per GPU), 454.535 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.408 Gbps (per GPU), 454.532 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.408 Gbps (per GPU), 454.534 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.408 Gbps (per GPU), 454.521 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.407 Gbps (per GPU), 454.510 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.407 Gbps (per GPU), 454.518 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.408 Gbps (per GPU), 454.531 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.408 Gbps (per GPU), 454.532 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.408 Gbps (per GPU), 454.530 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.406 Gbps (per GPU), 454.495 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.404 Gbps (per GPU), 454.459 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 28.407 Gbps (per GPU), 454.517 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
****** Start profiling the graph-level communication performance with supernodesize = 16 ******
The graph-level communication performance (supernode = 16): 20.436 Gbps (per GPU), 326.976 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 20.436 Gbps (per GPU), 326.976 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 20.436 Gbps (per GPU), 326.979 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 20.436 Gbps (per GPU), 326.978 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 20.436 Gbps (per GPU), 326.976 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 20.436 Gbps (per GPU), 326.973 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 20.436 Gbps (per GPU), 326.973 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 20.436 Gbps (per GPU), 326.971 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 20.436 Gbps (per GPU), 326.973 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 20.436 Gbps (per GPU), 326.971 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 20.435 Gbps (per GPU), 326.967 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 20.435 Gbps (per GPU), 326.964 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 20.436 Gbps (per GPU), 326.971 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 20.436 Gbps (per GPU), 326.971 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 20.436 Gbps (per GPU), 326.969 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 16): 20.436 Gbps (per GPU), 326.972 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  6.01ms  5.75ms  5.55ms  1.08 14.14K  9.26M
 chk_1 10.31ms 10.11ms  9.97ms  1.03 15.00K 13.57M
 chk_2  7.79ms  7.57ms  7.41ms  1.05 14.13K 11.39M
 chk_3  6.79ms  6.59ms  6.43ms  1.06 14.13K 10.00M
 chk_4  4.44ms  4.19ms  4.02ms  1.10 14.13K  6.52M
 chk_5  3.74ms  3.44ms  3.28ms  1.14 15.00K  5.01M
 chk_6  4.67ms  4.37ms  4.16ms  1.12 14.97K  6.66M
 chk_7  4.30ms  3.97ms  3.80ms  1.13 14.13K  6.09M
 chk_8  3.98ms  3.70ms  3.55ms  1.12 14.13K  5.38M
 chk_9  4.93ms  4.62ms  4.45ms  1.11 14.94K  6.63M
chk_10  2.72ms  2.41ms  2.24ms  1.22 15.00K  3.27M
chk_11  2.36ms  2.05ms  1.89ms  1.25 15.00K  2.66M
chk_12  3.38ms  3.06ms  2.96ms  1.14 14.13K  4.74M
chk_13  5.98ms  5.83ms  5.47ms  1.09 14.98K  8.57M
chk_14  3.54ms  3.20ms  3.05ms  1.16 15.00K  4.75M
chk_15  6.93ms  6.46ms  6.31ms  1.10 14.13K 10.11M
   Avg  5.12  4.83  4.66
   Max 10.31 10.11  9.97
   Min  2.36  2.05  1.89
 Ratio  4.36  4.93  5.28
   Var  4.07  4.19  4.16
Profiling takes 2.690 s
*** Node 0, starting model training...
*** Node 1, starting model training...
*** Node 2, starting model training...
*** Node 3, starting model training...
*** Node 8, starting model training...
*** Node 4, starting model training...
*** Node 9, starting model training...
*** Node 5, starting model training...
*** Node 10, starting model training...
*** Node 6, starting model training...
*** Node 11, starting model training...
*** Node 7, starting model training...
*** Node 12, starting model training...
*** Node 13, starting model training...
*** Node 14, starting model training...
*** Node 15, starting model training...
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 160)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 14136
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 160)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 29133, Num Local Vertices: 14135
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 160)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 14136, Num Local Vertices: 14997
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 160)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 43268, Num Local Vertices: 14135
Num Stages: 1 / 1
Node 8, Pipeline Input Tensor: NULL
Node 8, Pipeline Output Tensor: NULL
*** Node 8 owns the model-level partition [0, 160)
*** Node 8, constructing the helper classes...
Node 8, Local Vertex Begin: 115645, Num Local Vertices: 14134
Num Stages: 1 / 1
Node 9, Pipeline Input Tensor: NULL
Node 9, Pipeline Output Tensor: NULL
*** Node 9 owns the model-level partition [0, 160)
*** Node 9, constructing the helper classes...
Node 9, Local Vertex Begin: 129779, Num Local Vertices: 14944
Num Stages: 1 / 1
Node 11, Pipeline Input Tensor: NULL
Node 11, Pipeline Output Tensor: NULL
*** Node 11 owns the model-level partition [0, 160)
*** Node 11, constructing the helper classes...
Node 11, Local Vertex Begin: 159720, Num Local Vertices: 14997
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 160)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 57403, Num Local Vertices: 14135
Num Stages: 1 / 1
Node 14, Pipeline Input Tensor: NULL
Node 14, Pipeline Output Tensor: NULL
*** Node 14 owns the model-level partition [0, 160)
*** Node 14, constructing the helper classes...
Node 14, Local Vertex Begin: 203833, Num Local Vertices: 14997
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 160)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 86535, Num Local Vertices: 14975
Num Stages: 1 / 1
Node 12, Pipeline Input Tensor: NULL
Node 12, Pipeline Output Tensor: NULL
*** Node 12 owns the model-level partition [0, 160)
*** Node 12, constructing the helper classes...
Node 12, Local Vertex Begin: 174717, Num Local Vertices: 14135
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 160)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 71538, Num Local Vertices: 14997
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 160)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 101510, Num Local Vertices: 14135
Num Stages: 1 / 1
Node 13, Pipeline Input Tensor: NULL
Node 13, Pipeline Output Tensor: NULL
*** Node 13 owns the model-level partition [0, 160)
*** Node 13, constructing the helper classes...
Node 13, Local Vertex Begin: 188852, Num Local Vertices: 14981
Num Stages: 1 / 1
Node 15, Pipeline Input Tensor: NULL
Node 15, Pipeline Output Tensor: NULL
*** Node 15 owns the model-level partition [0, 160)
*** Node 15, constructing the helper classes...
Node 15, Local Vertex Begin: 218830, Num Local Vertices: 14135
Num Stages: 1 / 1
Node 10, Pipeline Input Tensor: NULL
Node 10, Pipeline Output Tensor: NULL
*** Node 10 owns the model-level partition [0, 160)
*** Node 10, constructing the helper classes...
Node 10, Local Vertex Begin: 144723, Num Local Vertices: 14997
*** Node 15, setting up some other necessary information...
*** Node 14, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 8, setting up some other necessary information...
*** Node 13, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
*** Node 10, setting up some other necessary information...
*** Node 12, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 9, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 11, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
+++++++++ Node 15 initializing the weights for op[0, 160)...
+++++++++ Node 13 initializing the weights for op[0, 160)...
+++++++++ Node 1 initializing the weights for op[0, 160)...
+++++++++ Node 3 initializing the weights for op[0, 160)...
+++++++++ Node 9 initializing the weights for op[0, 160)...
+++++++++ Node 12 initializing the weights for op[0, 160)...
+++++++++ Node 4 initializing the weights for op[0, 160)...
+++++++++ Node 0 initializing the weights for op[0, 160)...
+++++++++ Node 11 initializing the weights for op[0, 160)...
+++++++++ Node 14 initializing the weights for op[0, 160)...
+++++++++ Node 5 initializing the weights for op[0, 160)...
+++++++++ Node 8 initializing the weights for op[0, 160)...
+++++++++ Node 6 initializing the weights for op[0, 160)...
+++++++++ Node 10 initializing the weights for op[0, 160)...
+++++++++ Node 7 initializing the weights for op[0, 160)...
+++++++++ Node 2 initializing the weights for op[0, 160)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 8, discovering the vertices that will be sent across graph boundary...
Node 12, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 9, discovering the vertices that will be sent across graph boundary...
Node 13, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 10, discovering the vertices that will be sent across graph boundary...
Node 14, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 11, discovering the vertices that will be sent across graph boundary...
Node 15, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 1294179
Node 0, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 8, discovering the vertices that will be received across the graph boundary.
Node 12, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 9, discovering the vertices that will be received across the graph boundary.
Node 13, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 10, discovering the vertices that will be received across the graph boundary.
Node 14, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 11, discovering the vertices that will be received across the graph boundary.
Node 15, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 8, starting task scheduling...
*** Node 9, starting task scheduling...
*** Node 10, starting task scheduling...
*** Node 11, starting task scheduling...
*** Node 0, starting task scheduling...



*** Node 12, starting task scheduling...
*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 13, starting task scheduling...
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 14, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
*** Node 15, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 3.7136	TrainAcc 0.0412	ValidAcc 0.0350	TestAcc 0.0390	BestValid 0.0350
	Epoch 50:	Loss 3.2914	TrainAcc 0.0690	ValidAcc 0.0584	TestAcc 0.0574	BestValid 0.0584
****** Epoch Time (Excluding Evaluation Cost): 0.854 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 2.224 ms (Max: 3.346, Min: 0.033, Sum: 35.592)
Cluster-Wide Average, Compute: 105.868 ms (Max: 215.964, Min: 48.604, Sum: 1693.895)
Cluster-Wide Average, Communication-Layer: 0.008 ms (Max: 0.010, Min: 0.007, Sum: 0.128)
Cluster-Wide Average, Bubble-Imbalance: 0.015 ms (Max: 0.018, Min: 0.013, Sum: 0.241)
Cluster-Wide Average, Communication-Graph: 739.704 ms (Max: 795.838, Min: 631.887, Sum: 11835.269)
Cluster-Wide Average, Optimization: 5.257 ms (Max: 5.291, Min: 5.216, Sum: 84.118)
Cluster-Wide Average, Others: 0.803 ms (Max: 0.847, Min: 0.767, Sum: 12.848)
****** Breakdown Sum: 853.881 ms ******
Cluster-Wide Average, GPU Memory Consumption: 5.412 GB (Max: 6.130, Min: 5.348, Sum: 86.598)
Cluster-Wide Average, Graph-Level Communication Throughput: 23.344 Gbps (Max: 43.080, Min: 13.908, Sum: 373.503)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 30.856 GB
Weight-sync communication (cluster-wide, per-epoch): 0.041 GB
Total communication (cluster-wide, per-epoch): 30.896 GB
****** Accuracy Results ******
Highest valid_acc: 0.0584
Target test_acc: 0.0574
Epoch to reach the target acc: 49
[MPI Rank 0] Success 
[MPI Rank 8] Success 
[MPI Rank 12] Success 
[MPI Rank 4] Success 
[MPI Rank 1] Success 
[MPI Rank 9] Success 
[MPI Rank 13] Success 
[MPI Rank 5] Success 
[MPI Rank 2] Success 
[MPI Rank 10] Success 
[MPI Rank 14] Success 
[MPI Rank 6] Success 
[MPI Rank 3] Success 
[MPI Rank 11] Success 
[MPI Rank 15] Success 
[MPI Rank 7] Success 
