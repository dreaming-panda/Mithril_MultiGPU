Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
Initializing the runtime environment
DONE MPI INITDONE MPI INIT
Initialized node 5 on machine gnerv3
DONE MPI INIT
Initialized node 6 on machine gnerv3

Initialized node 4 on machine gnerv3
DONE MPI INIT
Initialized node 7 on machine gnerv3
DONE MPI INIT
DONE MPI INIT
Initialized node 1 on machine gnerv2
DONE MPI INIT
Initialized node 2 on machine gnerv2
Initialized node 0 on machine gnerv2
DONE MPI INIT
Initialized node 3 on machine gnerv2
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 2.311 seconds.
Building the CSC structure...
        It takes 2.411 seconds.
Building the CSC structure...
        It takes 2.452 seconds.
Building the CSC structure...
        It takes 2.470 seconds.
Building the CSC structure...
        It takes 2.471 seconds.
Building the CSC structure...
        It takes 2.573 seconds.
Building the CSC structure...
        It takes 2.690 seconds.
Building the CSC structure...
        It takes 2.720 seconds.
Building the CSC structure...
        It takes 2.255 seconds.
        It takes 2.377 seconds.
        It takes 2.363 seconds.
        It takes 2.377 seconds.
        It takes 2.383 seconds.
        It takes 2.350 seconds.
        It takes 2.306 seconds.
        It takes 2.428 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.249 seconds.
Building the Label Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.039 seconds.
Building the Feature Vector...
        It takes 0.303 seconds.
Building the Label Vector...
        It takes 0.344 seconds.
Building the Label Vector...
        It takes 0.294 seconds.
Building the Label Vector...
        It takes 0.042 seconds.
        It takes 0.048 seconds.
        It takes 0.042 seconds.
        It takes 0.283 seconds.
Building the Label Vector...
        It takes 0.032 seconds.
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.262 seconds.
Building the Label Vector...
        It takes 0.275 seconds.
Building the Label Vector...
        It takes 0.038 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/graph_parallel_datasets/reddit/8_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
Number of classes: 41
Number of feature dimensions: 602
Number of vertices: 232965
Number of GPUs: 8
        It takes 0.036 seconds.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
        It takes 0.251 seconds.
Building the Label Vector...
        It takes 0.030 seconds.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 29121
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
train nodes 153431, valid nodes 23831, test nodes 55703
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 8): 0-[0, 29120) 1-[29120, 58241) 2-[58241, 87362) 3-[87362, 116483) 4-[116483, 145604) 5-[145604, 174724) 6-[174724, 203845) 7-[203845, 232965)
GPU 0, layer [0, 32)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
232965, 114848857, 114848857
Number of vertices per chunk: 29121
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
The layer-level communication performance: 58.750 Gbps (per GPU), 469.999 Gbps (aggregated)
The layer-level communication performance: 58.456 Gbps (per GPU), 467.651 Gbps (aggregated)
The layer-level communication performance: 58.453 Gbps (per GPU), 467.624 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.352 Gbps (per GPU), 466.815 Gbps (aggregated)
The layer-level communication performance: 58.195 Gbps (per GPU), 465.559 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 58.004 Gbps (per GPU), 464.035 Gbps (aggregated)
The layer-level communication performance: 58.076 Gbps (per GPU), 464.606 Gbps (aggregated)
The layer-level communication performance: 57.925 Gbps (per GPU), 463.398 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 156.925 Gbps (per GPU), 1255.404 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.920 Gbps (per GPU), 1255.357 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.905 Gbps (per GPU), 1255.239 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.914 Gbps (per GPU), 1255.310 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.896 Gbps (per GPU), 1255.169 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.926 Gbps (per GPU), 1255.410 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.908 Gbps (per GPU), 1255.263 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.911 Gbps (per GPU), 1255.286 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 100.668 Gbps (per GPU), 805.345 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.676 Gbps (per GPU), 805.409 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.656 Gbps (per GPU), 805.248 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.677 Gbps (per GPU), 805.416 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.676 Gbps (per GPU), 805.409 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.677 Gbps (per GPU), 805.416 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.676 Gbps (per GPU), 805.409 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.427 Gbps (per GPU), 803.417 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 38.360 Gbps (per GPU), 306.879 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.360 Gbps (per GPU), 306.881 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.360 Gbps (per GPU), 306.883 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.360 Gbps (per GPU), 306.878 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.360 Gbps (per GPU), 306.884 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.358 Gbps (per GPU), 306.868 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.358 Gbps (per GPU), 306.868 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 38.357 Gbps (per GPU), 306.857 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0 12.17ms  9.56ms  9.02ms  1.35 29.12K 14.23M
 chk_1  7.72ms  5.19ms  4.62ms  1.67 29.12K  6.56M
 chk_2 19.06ms 16.68ms 16.08ms  1.19 29.12K 24.68M
 chk_3 19.26ms 16.66ms 16.21ms  1.19 29.12K 22.95M
 chk_4  7.49ms  5.00ms  4.43ms  1.69 29.12K  6.33M
 chk_5 11.51ms  8.93ms  8.36ms  1.38 29.12K 12.05M
 chk_6 12.69ms 10.09ms  9.57ms  1.33 29.12K 14.60M
 chk_7 11.89ms  9.37ms  8.65ms  1.37 29.12K 13.21M
   Avg 12.73 10.19  9.62
   Max 19.26 16.68 16.21
   Min  7.49  5.00  4.43
 Ratio  2.57  3.34  3.65
   Var 17.22 17.32 17.47
Profiling takes 2.980 s
*** Node 0, starting model training...
*** Node 1, starting model training...
*** Node 2, starting model training...
*** Node 3, starting model training...
*** Node 4, starting model training...
*** Node 5, starting model training...
*** Node 6, starting model training...
*** Node 7, starting model training...
Num Stages: 1 / 1
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: NULL
*** Node 0 owns the model-level partition [0, 257)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 29120
Num Stages: 1 / 1
Node 4, Pipeline Input Tensor: NULL
Node 4, Pipeline Output Tensor: NULL
*** Node 4 owns the model-level partition [0, 257)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 116483, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 1, Pipeline Input Tensor: NULL
Node 1, Pipeline Output Tensor: NULL
*** Node 1 owns the model-level partition [0, 257)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 29120, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 2, Pipeline Input Tensor: NULL
Node 2, Pipeline Output Tensor: NULL
*** Node 2 owns the model-level partition [0, 257)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 58241, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 6, Pipeline Input Tensor: NULL
Node 6, Pipeline Output Tensor: NULL
*** Node 6 owns the model-level partition [0, 257)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 174724, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 3, Pipeline Input Tensor: NULL
Node 3, Pipeline Output Tensor: NULL
*** Node 3 owns the model-level partition [0, 257)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 87362, Num Local Vertices: 29121
Num Stages: 1 / 1
Node 7, Pipeline Input Tensor: NULL
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [0, 257)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 203845, Num Local Vertices: 29120
Num Stages: 1 / 1
Node 5, Pipeline Input Tensor: NULL
Node 5, Pipeline Output Tensor: NULL
*** Node 5 owns the model-level partition [0, 257)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 145604, Num Local Vertices: 29120
*** Node 5, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 0, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
+++++++++ Node 0 initializing the weights for op[0, 257)...
+++++++++ Node 4 initializing the weights for op[0, 257)...
+++++++++ Node 1 initializing the weights for op[0, 257)...
+++++++++ Node 5 initializing the weights for op[0, 257)...
+++++++++ Node 2 initializing the weights for op[0, 257)...
+++++++++ Node 7 initializing the weights for op[0, 257)...
+++++++++ Node 3 initializing the weights for op[0, 257)...
+++++++++ Node 6 initializing the weights for op[0, 257)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 5, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 607420
Node 0, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be received across the graph boundary.
Node 2, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 14.7238	TrainAcc 0.0330	ValidAcc 0.0315	TestAcc 0.0308	BestValid 0.0315
	Epoch 50:	Loss 3.2646	TrainAcc 0.0690	ValidAcc 0.0584	TestAcc 0.0574	BestValid 0.0584
****** Epoch Time (Excluding Evaluation Cost): 0.875 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 3.134 ms (Max: 4.849, Min: 0.039, Sum: 25.075)
Cluster-Wide Average, Compute: 230.365 ms (Max: 368.710, Min: 124.819, Sum: 1842.917)
Cluster-Wide Average, Communication-Layer: 0.008 ms (Max: 0.009, Min: 0.008, Sum: 0.068)
Cluster-Wide Average, Bubble-Imbalance: 0.016 ms (Max: 0.018, Min: 0.015, Sum: 0.128)
Cluster-Wide Average, Communication-Graph: 634.848 ms (Max: 738.667, Min: 499.507, Sum: 5078.784)
Cluster-Wide Average, Optimization: 5.820 ms (Max: 5.870, Min: 5.783, Sum: 46.557)
Cluster-Wide Average, Others: 1.155 ms (Max: 1.181, Min: 1.131, Sum: 9.238)
****** Breakdown Sum: 875.346 ms ******
Cluster-Wide Average, GPU Memory Consumption: 8.667 GB (Max: 9.309, Min: 8.557, Sum: 69.335)
Cluster-Wide Average, Graph-Level Communication Throughput: 26.669 Gbps (Max: 49.425, Min: 11.582, Sum: 213.353)
Cluster-Wide Average, Layer-Level Communication Throughput: 0.000 Gbps (Max: 0.000, Min: 0.000, Sum: 0.000)
Layer-level communication (cluster-wide, per-epoch): 0.000 GB
Graph-level communication (cluster-wide, per-epoch): 14.482 GB
Weight-sync communication (cluster-wide, per-epoch): 0.038 GB
Total communication (cluster-wide, per-epoch): 14.520 GB
****** Accuracy Results ******
Highest valid_acc: 0.0584
Target test_acc: 0.0574
Epoch to reach the target acc: 49
[MPI Rank 0] Success 
[MPI Rank 1] Success 
[MPI Rank 4] Success 
[MPI Rank 2] Success 
[MPI Rank 5] Success 
[MPI Rank 3] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
