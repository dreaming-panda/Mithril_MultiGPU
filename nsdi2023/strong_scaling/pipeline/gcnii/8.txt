Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
Starting GNN Training...
Initializing the runtime environment
DONE MPI INIT
Initialized node 5 on machine gnerv3
DONE MPI INIT
Initialized node 6 on machine gnerv3
DONE MPI INIT
DONE MPI INIT
Initialized node 7 on machine gnerv3
Initialized node 4 on machine gnerv3
DONE MPI INIT
DONE MPI INIT
Initialized node 1 on machine gnerv2
DONE MPI INITInitialized node 0 on machine gnerv2
DONE MPI INIT
Initialized node 3 on machine gnerv2

Initialized node 2 on machine gnerv2
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
Building the CSR structure...
        It takes 1.908 seconds.
Building the CSC structure...
        It takes 2.294 seconds.
Building the CSC structure...
        It takes 2.334 seconds.
Building the CSC structure...
        It takes 2.440 seconds.
Building the CSC structure...
        It takes 2.468 seconds.
Building the CSC structure...
        It takes 2.485 seconds.
Building the CSC structure...
        It takes 2.541 seconds.
Building the CSC structure...
        It takes 2.611 seconds.
Building the CSC structure...
        It takes 1.865 seconds.
        It takes 2.250 seconds.
        It takes 2.271 seconds.
Building the Feature Vector...
        It takes 2.359 seconds.
        It takes 2.435 seconds.
        It takes 2.311 seconds.
        It takes 2.383 seconds.
        It takes 2.444 seconds.
        It takes 0.289 seconds.
Building the Label Vector...
        It takes 0.041 seconds.
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.275 seconds.
Building the Label Vector...
        It takes 0.245 seconds.
Building the Label Vector...
        It takes 0.033 seconds.
        It takes 0.035 seconds.
Building the Feature Vector...
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
        It takes 0.289 seconds.
Building the Label Vector...
        It takes 0.041 seconds.
Building the Feature Vector...
232965, 114848857, 114848857
Number of vertices per chunk: 7281
Building the Feature Vector...
Building the Feature Vector...
Building the Feature Vector...
        It takes 0.274 seconds.
Building the Label Vector...
        It takes 0.032 seconds.
The graph dataset locates at /shared_hdd_storage/jingjichen/gnn_datasets/pipeline_parallel_datasets/reddit/32_parts
The number of GCNII layers: 32
The number of hidden units: 100
The number of training epoches: 50
Learning rate: 0.001000
The partition strategy: model
The dropout rate: 0.500
The checkpointed weight file: /tmp/saved_weights_pipe
The random seed: 1
GCN hyper-parameter alpha: 0.100000
GCN hyper-parameter lambda: 0.500000
Number of classes: 41
Number of feature dimensions: 602
Number of vertices: 232965
Number of GPUs: 8
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
        It takes 0.295 seconds.
Building the Label Vector...
        It takes 0.038 seconds.
        It takes 0.295 seconds.
Building the Label Vector...
        It takes 0.259 seconds.
Building the Label Vector...
        It takes 0.033 seconds.
        It takes 0.031 seconds.
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
train nodes 153431, valid nodes 23831, test nodes 55703
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
Chunks (number of global chunks: 32): 0-[0, 8381) 1-[8381, 15124) 2-[15124, 22398) 3-[22398, 30320) 4-[30320, 35655) 5-[35655, 45721) 6-[45721, 55131) 7-[55131, 63248) 8-[63248, 69343) ... 31-[226638, 232965)
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
GPU 0, layer [0, 5)
GPU 1, layer [5, 9)
GPU 2, layer [9, 13)
GPU 3, layer [13, 17)
GPU 4, layer [17, 21)
GPU 5, layer [21, 25)
GPU 6, layer [25, 29)
GPU 7, layer [29, 33)
WARNING: the current version only applies to linear GNN models!
WARNING: currently, exact inference during the whole training process will enforce the evaluation frequency to every 25 epoches.
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
232965, 114848857, 114848857
Number of vertices per chunk: 7281
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
***** Start profiling the layer-level communication performance *******
csr in-out ready !Start Cost Model Initialization...
csr in-out ready !Start Cost Model Initialization...
The layer-level communication performance: 51.558 Gbps (per GPU), 412.462 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 51.348 Gbps (per GPU), 410.780 Gbps (aggregated)
The layer-level communication performance: 51.341 Gbps (per GPU), 410.729 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 51.164 Gbps (per GPU), 409.314 Gbps (aggregated)
The layer-level communication performance: 51.153 Gbps (per GPU), 409.223 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The layer-level communication performance: 50.975 Gbps (per GPU), 407.803 Gbps (aggregated)
The layer-level communication performance: 50.944 Gbps (per GPU), 407.553 Gbps (aggregated)
The layer-level communication performance: 50.919 Gbps (per GPU), 407.355 Gbps (aggregated)
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
****** Start profiling the graph-level communication performance with supernodesize = 2 ******
The graph-level communication performance (supernode = 2): 156.085 Gbps (per GPU), 1248.677 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.091 Gbps (per GPU), 1248.725 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.093 Gbps (per GPU), 1248.746 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.073 Gbps (per GPU), 1248.583 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.081 Gbps (per GPU), 1248.650 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.096 Gbps (per GPU), 1248.769 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.073 Gbps (per GPU), 1248.583 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 2): 156.073 Gbps (per GPU), 1248.583 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
****** Start profiling the graph-level communication performance with supernodesize = 4 ******
The graph-level communication performance (supernode = 4): 100.512 Gbps (per GPU), 804.097 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.527 Gbps (per GPU), 804.219 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.527 Gbps (per GPU), 804.213 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.525 Gbps (per GPU), 804.200 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.526 Gbps (per GPU), 804.206 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.525 Gbps (per GPU), 804.200 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.526 Gbps (per GPU), 804.206 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 4): 100.078 Gbps (per GPU), 800.624 Gbps (aggregated, cluster-wide)
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
****** Start profiling the graph-level communication performance with supernodesize = 8 ******
The graph-level communication performance (supernode = 8): 33.458 Gbps (per GPU), 267.662 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 33.458 Gbps (per GPU), 267.666 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 33.457 Gbps (per GPU), 267.655 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 33.457 Gbps (per GPU), 267.660 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 33.457 Gbps (per GPU), 267.656 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 33.458 Gbps (per GPU), 267.664 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 33.458 Gbps (per GPU), 267.665 Gbps (aggregated, cluster-wide)
The graph-level communication performance (supernode = 8): 33.458 Gbps (per GPU), 267.662 Gbps (aggregated, cluster-wide)
 LType   LT0   LT1   LT2 Ratio  VSum  ESum
 chk_0  0.90ms  2.46ms  2.72ms  3.02  8.38K  3.53M
 chk_1  0.76ms  2.75ms  2.93ms  3.86  6.74K  3.60M
 chk_2  0.80ms  2.65ms  2.79ms  3.47  7.27K  3.53M
 chk_3  0.81ms  2.67ms  2.82ms  3.50  7.92K  3.61M
 chk_4  0.63ms  2.61ms  3.00ms  4.73  5.33K  3.68M
 chk_5  1.04ms  2.60ms  2.76ms  2.64 10.07K  3.45M
 chk_6  1.02ms  2.78ms  2.93ms  2.88  9.41K  3.48M
 chk_7  0.82ms  2.59ms  2.77ms  3.36  8.12K  3.60M
 chk_8  0.68ms  2.72ms  2.85ms  4.18  6.09K  3.64M
 chk_9  1.10ms  2.51ms  2.72ms  2.47 11.10K  3.38M
chk_10  0.65ms  2.75ms  2.92ms  4.45  5.67K  3.63M
chk_11  0.83ms  2.61ms  3.07ms  3.71  8.16K  3.54M
chk_12  0.80ms  2.80ms  2.96ms  3.71  7.24K  3.55M
chk_13  0.64ms  2.65ms  2.79ms  4.36  5.41K  3.68M
chk_14  0.78ms  2.88ms  3.28ms  4.19  7.14K  3.53M
chk_15  0.95ms  2.74ms  2.90ms  3.04  9.25K  3.49M
chk_16  0.60ms  2.57ms  2.72ms  4.56  4.78K  3.77M
chk_17  0.77ms  2.70ms  3.03ms  3.96  6.85K  3.60M
chk_18  0.81ms  2.51ms  2.68ms  3.29  7.47K  3.57M
chk_19  0.61ms  2.57ms  2.70ms  4.42  4.88K  3.75M
chk_20  0.77ms  2.57ms  2.74ms  3.54  7.00K  3.63M
chk_21  0.64ms  2.57ms  2.86ms  4.48  5.41K  3.68M
chk_22  1.10ms  2.78ms  2.97ms  2.70 11.07K  3.39M
chk_23  0.80ms  2.66ms  2.82ms  3.54  7.23K  3.64M
chk_24  1.01ms  2.70ms  3.10ms  3.06 10.13K  3.43M
chk_25  0.73ms  2.52ms  2.67ms  3.66  6.40K  3.57M
chk_26  0.66ms  2.73ms  2.88ms  4.33  5.78K  3.55M
chk_27  0.96ms  2.60ms  2.80ms  2.92  9.34K  3.48M
chk_28  0.73ms  2.92ms  3.06ms  4.20  6.37K  3.57M
chk_29  0.63ms  2.70ms  2.84ms  4.50  5.16K  3.78M
chk_30  0.64ms  2.60ms  2.76ms  4.31  5.44K  3.67M
chk_31  0.73ms  2.74ms  2.91ms  4.01  6.33K  3.63M
   Avg  0.79  2.66  2.87
   Max  1.10  2.92  3.28
   Min  0.60  2.46  2.67
 Ratio  1.85  1.19  1.23
   Var  0.02  0.01  0.02
Profiling takes 2.432 s
*** Node 0, starting model training...
Num Stages: 8 / 8
Node 0, Pipeline Input Tensor: NULL
Node 0, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 0 owns the model-level partition [0, 34)
*** Node 0, constructing the helper classes...
Node 0, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 1, starting model training...
Num Stages: 8 / 8
Node 1, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 1, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 1 owns the model-level partition [34, 62)
*** Node 1, constructing the helper classes...
Node 1, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 4, starting model training...
Num Stages: 8 / 8
*** Node 2, starting model training...
Num Stages: 8 / 8
Node 2, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 2, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 2 owns the model-level partition [62, 90)
*** Node 2, constructing the helper classes...
Node 2, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 6, starting model training...
Num Stages: 8 / 8
Node 6, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 6, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 6 owns the model-level partition [174, 202)
*** Node 6, constructing the helper classes...
Node 6, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 3, starting model training...
Num Stages: 8 / 8
Node 3, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 3, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 3 owns the model-level partition [90, 118)
*** Node 3, constructing the helper classes...
Node 3, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 7, starting model training...
Num Stages: 8 / 8
Node 7, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 7, Pipeline Output Tensor: NULL
*** Node 7 owns the model-level partition [202, 233)
*** Node 7, constructing the helper classes...
Node 7, Local Vertex Begin: 0, Num Local Vertices: 232965
Node 4, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 4, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 4 owns the model-level partition [118, 146)
*** Node 4, constructing the helper classes...
Node 4, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 5, starting model training...
Num Stages: 8 / 8
Node 5, Pipeline Input Tensor: OPERATOR_DROPOUT
Node 5, Pipeline Output Tensor: OPERATOR_DROPOUT
*** Node 5 owns the model-level partition [146, 174)
*** Node 5, constructing the helper classes...
Node 5, Local Vertex Begin: 0, Num Local Vertices: 232965
*** Node 0, setting up some other necessary information...
*** Node 3, setting up some other necessary information...
*** Node 1, setting up some other necessary information...
*** Node 2, setting up some other necessary information...
*** Node 4, setting up some other necessary information...
*** Node 5, setting up some other necessary information...
*** Node 7, setting up some other necessary information...
*** Node 6, setting up some other necessary information...
+++++++++ Node 3 initializing the weights for op[90, 118)...
+++++++++ Node 1 initializing the weights for op[34, 62)...
+++++++++ Node 0 initializing the weights for op[0, 34)...
+++++++++ Node 2 initializing the weights for op[62, 90)...
+++++++++ Node 4 initializing the weights for op[118, 146)...
+++++++++ Node 5 initializing the weights for op[146, 174)...
+++++++++ Node 6 initializing the weights for op[174, 202)...
+++++++++ Node 7 initializing the weights for op[202, 233)...
Node 0, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be sent across graph boundary...
Node 2, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be sent across graph boundary...
The number of mirror vertices: 0
Node 0, discovering the vertices that will be received across the graph boundary.
Node 6, discovering the vertices that will be sent across graph boundary...
Node 6, discovering the vertices that will be received across the graph boundary.
Node 1, discovering the vertices that will be sent across graph boundary...
Node 1, discovering the vertices that will be received across the graph boundary.
Node 7, discovering the vertices that will be sent across graph boundary...
Node 7, discovering the vertices that will be received across the graph boundary.
Node 3, discovering the vertices that will be sent across graph boundary...
Node 3, discovering the vertices that will be received across the graph boundary.
Node 4, discovering the vertices that will be sent across graph boundary...
Node 4, discovering the vertices that will be received across the graph boundary.
Node 5, discovering the vertices that will be received across the graph boundary.
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
****** Start Scheduling the Tasks in a Pipelined Fashion ******
*** Node 0, starting task scheduling...



The learning rate specified by the user: 0.001000000
*** Node 4, starting task scheduling...
*** Node 1, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 5, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 2, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 6, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 3, starting task scheduling...
The learning rate specified by the user: 0.001000000
*** Node 7, starting task scheduling...
The learning rate specified by the user: 0.001000000
The learning rate specified by the user: 0.001000000
	Epoch 1:	Loss 3.7714	TrainAcc 0.0846	ValidAcc 0.0762	TestAcc 0.0769	BestValid 0.0762
	Epoch 50:	Loss 1.9038	TrainAcc 0.6701	ValidAcc 0.6851	TestAcc 0.6800	BestValid 0.6851
****** Epoch Time (Excluding Evaluation Cost): 0.414 s ******
****** Breakdown Analysis ******
Cluster-Wide Average, Bubble-Pipeline: 79.778 ms (Max: 82.228, Min: 66.118, Sum: 638.222)
Cluster-Wide Average, Compute: 261.323 ms (Max: 283.483, Min: 249.862, Sum: 2090.585)
Cluster-Wide Average, Communication-Layer: 41.638 ms (Max: 46.994, Min: 32.083, Sum: 333.103)
Cluster-Wide Average, Bubble-Imbalance: 27.616 ms (Max: 36.050, Min: 14.807, Sum: 220.924)
Cluster-Wide Average, Communication-Graph: 0.492 ms (Max: 0.556, Min: 0.424, Sum: 3.933)
Cluster-Wide Average, Optimization: 0.100 ms (Max: 0.123, Min: 0.090, Sum: 0.801)
Cluster-Wide Average, Others: 3.741 ms (Max: 17.365, Min: 1.775, Sum: 29.932)
****** Breakdown Sum: 414.687 ms ******
Cluster-Wide Average, GPU Memory Consumption: 6.304 GB (Max: 8.059, Min: 6.018, Sum: 50.433)
Cluster-Wide Average, Graph-Level Communication Throughput: -nan Gbps (Max: -nan, Min: -nan, Sum: -nan)
Cluster-Wide Average, Layer-Level Communication Throughput: 61.672 Gbps (Max: 73.624, Min: 45.496, Sum: 493.376)
Layer-level communication (cluster-wide, per-epoch): 2.430 GB
Graph-level communication (cluster-wide, per-epoch): 0.000 GB
Weight-sync communication (cluster-wide, per-epoch): 0.000 GB
Total communication (cluster-wide, per-epoch): 2.430 GB
****** Accuracy Results ******
Highest valid_acc: 0.6851
Target test_acc: 0.6800
Epoch to reach the target acc: 49
[MPI Rank 0] Success 
[MPI Rank 1] Success 
[MPI Rank 4] Success 
[MPI Rank 2] Success 
[MPI Rank 5] Success 
[MPI Rank 3] Success 
[MPI Rank 6] Success 
[MPI Rank 7] Success 
